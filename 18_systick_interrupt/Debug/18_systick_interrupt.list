
18_systick_interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001240  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000048  08001370  08001370  00011370  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080013b8  080013b8  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  080013b8  080013b8  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080013b8  080013b8  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080013b8  080013b8  000113b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080013bc  080013bc  000113bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  080013c0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  0800141c  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  0800141c  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020085  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000ebf  00000000  00000000  000200c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000005dc  00000000  00000000  00020f87  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000198  00000000  00000000  00021568  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000116  00000000  00000000  00021700  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001ffd  00000000  00000000  00021816  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002186  00000000  00000000  00023813  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00059e74  00000000  00000000  00025999  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000c98  00000000  00000000  0007f810  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000069  00000000  00000000  000804a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	2000005c 	.word	0x2000005c
 800014c:	00000000 	.word	0x00000000
 8000150:	08001358 	.word	0x08001358

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000060 	.word	0x20000060
 800016c:	08001358 	.word	0x08001358

08000170 <main>:
#define LED_PIN             PIN13

void systick_callback(void);

int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
	RCC -> APB2ENR |= GPIOC_EN;
 8000174:	4b11      	ldr	r3, [pc, #68]	; (80001bc <main+0x4c>)
 8000176:	699b      	ldr	r3, [r3, #24]
 8000178:	4a10      	ldr	r2, [pc, #64]	; (80001bc <main+0x4c>)
 800017a:	f043 0310 	orr.w	r3, r3, #16
 800017e:	6193      	str	r3, [r2, #24]

	GPIOC->CRH |= (1U << 20);
 8000180:	4b0f      	ldr	r3, [pc, #60]	; (80001c0 <main+0x50>)
 8000182:	685b      	ldr	r3, [r3, #4]
 8000184:	4a0e      	ldr	r2, [pc, #56]	; (80001c0 <main+0x50>)
 8000186:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800018a:	6053      	str	r3, [r2, #4]
	GPIOC->CRH |= (1U << 21);
 800018c:	4b0c      	ldr	r3, [pc, #48]	; (80001c0 <main+0x50>)
 800018e:	685b      	ldr	r3, [r3, #4]
 8000190:	4a0b      	ldr	r2, [pc, #44]	; (80001c0 <main+0x50>)
 8000192:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000196:	6053      	str	r3, [r2, #4]
	GPIOC->CRH &= ~(1U << 22);
 8000198:	4b09      	ldr	r3, [pc, #36]	; (80001c0 <main+0x50>)
 800019a:	685b      	ldr	r3, [r3, #4]
 800019c:	4a08      	ldr	r2, [pc, #32]	; (80001c0 <main+0x50>)
 800019e:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 80001a2:	6053      	str	r3, [r2, #4]
	GPIOC->CRH &= ~(1U << 23);
 80001a4:	4b06      	ldr	r3, [pc, #24]	; (80001c0 <main+0x50>)
 80001a6:	685b      	ldr	r3, [r3, #4]
 80001a8:	4a05      	ldr	r2, [pc, #20]	; (80001c0 <main+0x50>)
 80001aa:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80001ae:	6053      	str	r3, [r2, #4]

	uart1_tx_init();
 80001b0:	f000 f8e6 	bl	8000380 <uart1_tx_init>
	systick_1Hz_interrupt();
 80001b4:	f000 f8be 	bl	8000334 <systick_1Hz_interrupt>


	while(1)
 80001b8:	e7fe      	b.n	80001b8 <main+0x48>
 80001ba:	bf00      	nop
 80001bc:	40021000 	.word	0x40021000
 80001c0:	40011000 	.word	0x40011000

080001c4 <systick_callback>:

	}
}

void systick_callback(void)
{
 80001c4:	b580      	push	{r7, lr}
 80001c6:	af00      	add	r7, sp, #0
	printf("A second passed \n\r");
 80001c8:	4805      	ldr	r0, [pc, #20]	; (80001e0 <systick_callback+0x1c>)
 80001ca:	f000 fa47 	bl	800065c <iprintf>
	GPIOC->ODR ^= LED_PIN;
 80001ce:	4b05      	ldr	r3, [pc, #20]	; (80001e4 <systick_callback+0x20>)
 80001d0:	68db      	ldr	r3, [r3, #12]
 80001d2:	4a04      	ldr	r2, [pc, #16]	; (80001e4 <systick_callback+0x20>)
 80001d4:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 80001d8:	60d3      	str	r3, [r2, #12]
}
 80001da:	bf00      	nop
 80001dc:	bd80      	pop	{r7, pc}
 80001de:	bf00      	nop
 80001e0:	08001370 	.word	0x08001370
 80001e4:	40011000 	.word	0x40011000

080001e8 <SysTick_Handler>:

void SysTick_Handler(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	af00      	add	r7, sp, #0
	//do something
	systick_callback();
 80001ec:	f7ff ffea 	bl	80001c4 <systick_callback>
}
 80001f0:	bf00      	nop
 80001f2:	bd80      	pop	{r7, pc}

080001f4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b086      	sub	sp, #24
 80001f8:	af00      	add	r7, sp, #0
 80001fa:	60f8      	str	r0, [r7, #12]
 80001fc:	60b9      	str	r1, [r7, #8]
 80001fe:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000200:	2300      	movs	r3, #0
 8000202:	617b      	str	r3, [r7, #20]
 8000204:	e00a      	b.n	800021c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000206:	f3af 8000 	nop.w
 800020a:	4601      	mov	r1, r0
 800020c:	68bb      	ldr	r3, [r7, #8]
 800020e:	1c5a      	adds	r2, r3, #1
 8000210:	60ba      	str	r2, [r7, #8]
 8000212:	b2ca      	uxtb	r2, r1
 8000214:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000216:	697b      	ldr	r3, [r7, #20]
 8000218:	3301      	adds	r3, #1
 800021a:	617b      	str	r3, [r7, #20]
 800021c:	697a      	ldr	r2, [r7, #20]
 800021e:	687b      	ldr	r3, [r7, #4]
 8000220:	429a      	cmp	r2, r3
 8000222:	dbf0      	blt.n	8000206 <_read+0x12>
  }

  return len;
 8000224:	687b      	ldr	r3, [r7, #4]
}
 8000226:	4618      	mov	r0, r3
 8000228:	3718      	adds	r7, #24
 800022a:	46bd      	mov	sp, r7
 800022c:	bd80      	pop	{r7, pc}

0800022e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800022e:	b580      	push	{r7, lr}
 8000230:	b086      	sub	sp, #24
 8000232:	af00      	add	r7, sp, #0
 8000234:	60f8      	str	r0, [r7, #12]
 8000236:	60b9      	str	r1, [r7, #8]
 8000238:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800023a:	2300      	movs	r3, #0
 800023c:	617b      	str	r3, [r7, #20]
 800023e:	e009      	b.n	8000254 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000240:	68bb      	ldr	r3, [r7, #8]
 8000242:	1c5a      	adds	r2, r3, #1
 8000244:	60ba      	str	r2, [r7, #8]
 8000246:	781b      	ldrb	r3, [r3, #0]
 8000248:	4618      	mov	r0, r3
 800024a:	f000 f88d 	bl	8000368 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800024e:	697b      	ldr	r3, [r7, #20]
 8000250:	3301      	adds	r3, #1
 8000252:	617b      	str	r3, [r7, #20]
 8000254:	697a      	ldr	r2, [r7, #20]
 8000256:	687b      	ldr	r3, [r7, #4]
 8000258:	429a      	cmp	r2, r3
 800025a:	dbf1      	blt.n	8000240 <_write+0x12>
  }
  return len;
 800025c:	687b      	ldr	r3, [r7, #4]
}
 800025e:	4618      	mov	r0, r3
 8000260:	3718      	adds	r7, #24
 8000262:	46bd      	mov	sp, r7
 8000264:	bd80      	pop	{r7, pc}

08000266 <_close>:

int _close(int file)
{
 8000266:	b480      	push	{r7}
 8000268:	b083      	sub	sp, #12
 800026a:	af00      	add	r7, sp, #0
 800026c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800026e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000272:	4618      	mov	r0, r3
 8000274:	370c      	adds	r7, #12
 8000276:	46bd      	mov	sp, r7
 8000278:	bc80      	pop	{r7}
 800027a:	4770      	bx	lr

0800027c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800027c:	b480      	push	{r7}
 800027e:	b083      	sub	sp, #12
 8000280:	af00      	add	r7, sp, #0
 8000282:	6078      	str	r0, [r7, #4]
 8000284:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000286:	683b      	ldr	r3, [r7, #0]
 8000288:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800028c:	605a      	str	r2, [r3, #4]
  return 0;
 800028e:	2300      	movs	r3, #0
}
 8000290:	4618      	mov	r0, r3
 8000292:	370c      	adds	r7, #12
 8000294:	46bd      	mov	sp, r7
 8000296:	bc80      	pop	{r7}
 8000298:	4770      	bx	lr

0800029a <_isatty>:

int _isatty(int file)
{
 800029a:	b480      	push	{r7}
 800029c:	b083      	sub	sp, #12
 800029e:	af00      	add	r7, sp, #0
 80002a0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80002a2:	2301      	movs	r3, #1
}
 80002a4:	4618      	mov	r0, r3
 80002a6:	370c      	adds	r7, #12
 80002a8:	46bd      	mov	sp, r7
 80002aa:	bc80      	pop	{r7}
 80002ac:	4770      	bx	lr

080002ae <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002ae:	b480      	push	{r7}
 80002b0:	b085      	sub	sp, #20
 80002b2:	af00      	add	r7, sp, #0
 80002b4:	60f8      	str	r0, [r7, #12]
 80002b6:	60b9      	str	r1, [r7, #8]
 80002b8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80002ba:	2300      	movs	r3, #0
}
 80002bc:	4618      	mov	r0, r3
 80002be:	3714      	adds	r7, #20
 80002c0:	46bd      	mov	sp, r7
 80002c2:	bc80      	pop	{r7}
 80002c4:	4770      	bx	lr
	...

080002c8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002c8:	b580      	push	{r7, lr}
 80002ca:	b086      	sub	sp, #24
 80002cc:	af00      	add	r7, sp, #0
 80002ce:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002d0:	4a14      	ldr	r2, [pc, #80]	; (8000324 <_sbrk+0x5c>)
 80002d2:	4b15      	ldr	r3, [pc, #84]	; (8000328 <_sbrk+0x60>)
 80002d4:	1ad3      	subs	r3, r2, r3
 80002d6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80002d8:	697b      	ldr	r3, [r7, #20]
 80002da:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80002dc:	4b13      	ldr	r3, [pc, #76]	; (800032c <_sbrk+0x64>)
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	2b00      	cmp	r3, #0
 80002e2:	d102      	bne.n	80002ea <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80002e4:	4b11      	ldr	r3, [pc, #68]	; (800032c <_sbrk+0x64>)
 80002e6:	4a12      	ldr	r2, [pc, #72]	; (8000330 <_sbrk+0x68>)
 80002e8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80002ea:	4b10      	ldr	r3, [pc, #64]	; (800032c <_sbrk+0x64>)
 80002ec:	681a      	ldr	r2, [r3, #0]
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	4413      	add	r3, r2
 80002f2:	693a      	ldr	r2, [r7, #16]
 80002f4:	429a      	cmp	r2, r3
 80002f6:	d207      	bcs.n	8000308 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80002f8:	f000 fa54 	bl	80007a4 <__errno>
 80002fc:	4603      	mov	r3, r0
 80002fe:	220c      	movs	r2, #12
 8000300:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000302:	f04f 33ff 	mov.w	r3, #4294967295
 8000306:	e009      	b.n	800031c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000308:	4b08      	ldr	r3, [pc, #32]	; (800032c <_sbrk+0x64>)
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800030e:	4b07      	ldr	r3, [pc, #28]	; (800032c <_sbrk+0x64>)
 8000310:	681a      	ldr	r2, [r3, #0]
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4413      	add	r3, r2
 8000316:	4a05      	ldr	r2, [pc, #20]	; (800032c <_sbrk+0x64>)
 8000318:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800031a:	68fb      	ldr	r3, [r7, #12]
}
 800031c:	4618      	mov	r0, r3
 800031e:	3718      	adds	r7, #24
 8000320:	46bd      	mov	sp, r7
 8000322:	bd80      	pop	{r7, pc}
 8000324:	20005000 	.word	0x20005000
 8000328:	00000400 	.word	0x00000400
 800032c:	20000078 	.word	0x20000078
 8000330:	200001c8 	.word	0x200001c8

08000334 <systick_1Hz_interrupt>:

	SysTick->CTRL = 0;
}

void systick_1Hz_interrupt(void)
{
 8000334:	b480      	push	{r7}
 8000336:	af00      	add	r7, sp, #0
	/*Reload with number of clocks per millisec*/
	SysTick->LOAD = ONE_SEC_LOAD-1;
 8000338:	4b09      	ldr	r3, [pc, #36]	; (8000360 <systick_1Hz_interrupt+0x2c>)
 800033a:	4a0a      	ldr	r2, [pc, #40]	; (8000364 <systick_1Hz_interrupt+0x30>)
 800033c:	605a      	str	r2, [r3, #4]

	/*Clear systick current value register*/
	SysTick->VAL = 0;
 800033e:	4b08      	ldr	r3, [pc, #32]	; (8000360 <systick_1Hz_interrupt+0x2c>)
 8000340:	2200      	movs	r2, #0
 8000342:	609a      	str	r2, [r3, #8]

	/*Enable systick and select internal clock source*/
	SysTick->CTRL = CTRL_ENABLE | CTRL_CLKSRC;
 8000344:	4b06      	ldr	r3, [pc, #24]	; (8000360 <systick_1Hz_interrupt+0x2c>)
 8000346:	2205      	movs	r2, #5
 8000348:	601a      	str	r2, [r3, #0]

	/*Enable systick interrupt*/
	SysTick->CTRL |= CTRL_TICKINT;
 800034a:	4b05      	ldr	r3, [pc, #20]	; (8000360 <systick_1Hz_interrupt+0x2c>)
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	4a04      	ldr	r2, [pc, #16]	; (8000360 <systick_1Hz_interrupt+0x2c>)
 8000350:	f043 0302 	orr.w	r3, r3, #2
 8000354:	6013      	str	r3, [r2, #0]
}
 8000356:	bf00      	nop
 8000358:	46bd      	mov	sp, r7
 800035a:	bc80      	pop	{r7}
 800035c:	4770      	bx	lr
 800035e:	bf00      	nop
 8000360:	e000e010 	.word	0xe000e010
 8000364:	00f423ff 	.word	0x00f423ff

08000368 <__io_putchar>:
static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate);

void uart1_write(int ch);

int __io_putchar(int ch)
{
 8000368:	b580      	push	{r7, lr}
 800036a:	b082      	sub	sp, #8
 800036c:	af00      	add	r7, sp, #0
 800036e:	6078      	str	r0, [r7, #4]
	uart1_write(ch);
 8000370:	6878      	ldr	r0, [r7, #4]
 8000372:	f000 f84d 	bl	8000410 <uart1_write>
	return ch;
 8000376:	687b      	ldr	r3, [r7, #4]
}
 8000378:	4618      	mov	r0, r3
 800037a:	3708      	adds	r7, #8
 800037c:	46bd      	mov	sp, r7
 800037e:	bd80      	pop	{r7, pc}

08000380 <uart1_tx_init>:
	/*Enable uart module*/
	USART1->CR1 |= CR1_UE;
}

void uart1_tx_init(void)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	af00      	add	r7, sp, #0
	/*******Configure usart gpio pins*********/
	/*Enable clock access to gpioa*/
	RCC->APB2ENR |= GPIOA_EN;
 8000384:	4b1d      	ldr	r3, [pc, #116]	; (80003fc <uart1_tx_init+0x7c>)
 8000386:	699b      	ldr	r3, [r3, #24]
 8000388:	4a1c      	ldr	r2, [pc, #112]	; (80003fc <uart1_tx_init+0x7c>)
 800038a:	f043 0304 	orr.w	r3, r3, #4
 800038e:	6193      	str	r3, [r2, #24]

	/*Set PA9 to alternate function mode*/
	GPIOA->CRH |= (1U<<4);
 8000390:	4b1b      	ldr	r3, [pc, #108]	; (8000400 <uart1_tx_init+0x80>)
 8000392:	685b      	ldr	r3, [r3, #4]
 8000394:	4a1a      	ldr	r2, [pc, #104]	; (8000400 <uart1_tx_init+0x80>)
 8000396:	f043 0310 	orr.w	r3, r3, #16
 800039a:	6053      	str	r3, [r2, #4]
	GPIOA->CRH |= (1U<<5);
 800039c:	4b18      	ldr	r3, [pc, #96]	; (8000400 <uart1_tx_init+0x80>)
 800039e:	685b      	ldr	r3, [r3, #4]
 80003a0:	4a17      	ldr	r2, [pc, #92]	; (8000400 <uart1_tx_init+0x80>)
 80003a2:	f043 0320 	orr.w	r3, r3, #32
 80003a6:	6053      	str	r3, [r2, #4]
	GPIOA->CRH &= ~(1U<<6);
 80003a8:	4b15      	ldr	r3, [pc, #84]	; (8000400 <uart1_tx_init+0x80>)
 80003aa:	685b      	ldr	r3, [r3, #4]
 80003ac:	4a14      	ldr	r2, [pc, #80]	; (8000400 <uart1_tx_init+0x80>)
 80003ae:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80003b2:	6053      	str	r3, [r2, #4]
	GPIOA->CRH |= (1U<<7);
 80003b4:	4b12      	ldr	r3, [pc, #72]	; (8000400 <uart1_tx_init+0x80>)
 80003b6:	685b      	ldr	r3, [r3, #4]
 80003b8:	4a11      	ldr	r2, [pc, #68]	; (8000400 <uart1_tx_init+0x80>)
 80003ba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003be:	6053      	str	r3, [r2, #4]

	/*Set PA2 type to UART_TX*/
	AFIO->MAPR &= ~(1U<<2);
 80003c0:	4b10      	ldr	r3, [pc, #64]	; (8000404 <uart1_tx_init+0x84>)
 80003c2:	685b      	ldr	r3, [r3, #4]
 80003c4:	4a0f      	ldr	r2, [pc, #60]	; (8000404 <uart1_tx_init+0x84>)
 80003c6:	f023 0304 	bic.w	r3, r3, #4
 80003ca:	6053      	str	r3, [r2, #4]

	/**********Configure uart module**************/
	/*Enable clock access to uart1*/
	RCC->APB2ENR |= UART1_EN;
 80003cc:	4b0b      	ldr	r3, [pc, #44]	; (80003fc <uart1_tx_init+0x7c>)
 80003ce:	699b      	ldr	r3, [r3, #24]
 80003d0:	4a0a      	ldr	r2, [pc, #40]	; (80003fc <uart1_tx_init+0x7c>)
 80003d2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80003d6:	6193      	str	r3, [r2, #24]

	/*configure baudrate*/
	uart_set_baudrate(USART1,APB2_CLK,UART_BAUDRATE);
 80003d8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80003dc:	490a      	ldr	r1, [pc, #40]	; (8000408 <uart1_tx_init+0x88>)
 80003de:	480b      	ldr	r0, [pc, #44]	; (800040c <uart1_tx_init+0x8c>)
 80003e0:	f000 f82c 	bl	800043c <uart_set_baudrate>

	/*Configure transfer direction*/
	USART1->CR1 = CR1_TE;  //SETTING THE VALUE
 80003e4:	4b09      	ldr	r3, [pc, #36]	; (800040c <uart1_tx_init+0x8c>)
 80003e6:	2208      	movs	r2, #8
 80003e8:	60da      	str	r2, [r3, #12]
	//TO ERASE THE UART REGISTER

	/*Enable uart module*/
	USART1->CR1 |= CR1_UE;
 80003ea:	4b08      	ldr	r3, [pc, #32]	; (800040c <uart1_tx_init+0x8c>)
 80003ec:	68db      	ldr	r3, [r3, #12]
 80003ee:	4a07      	ldr	r2, [pc, #28]	; (800040c <uart1_tx_init+0x8c>)
 80003f0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80003f4:	60d3      	str	r3, [r2, #12]
}
 80003f6:	bf00      	nop
 80003f8:	bd80      	pop	{r7, pc}
 80003fa:	bf00      	nop
 80003fc:	40021000 	.word	0x40021000
 8000400:	40010800 	.word	0x40010800
 8000404:	40010000 	.word	0x40010000
 8000408:	00f42400 	.word	0x00f42400
 800040c:	40013800 	.word	0x40013800

08000410 <uart1_write>:
	/*Read data*/
	return USART1->DR;
}

void uart1_write(int ch)
{
 8000410:	b480      	push	{r7}
 8000412:	b083      	sub	sp, #12
 8000414:	af00      	add	r7, sp, #0
 8000416:	6078      	str	r0, [r7, #4]
	/*Make sure transmit data register is empty*/
	while(!(USART1->SR & SR_TXE)){}
 8000418:	bf00      	nop
 800041a:	4b07      	ldr	r3, [pc, #28]	; (8000438 <uart1_write+0x28>)
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000422:	2b00      	cmp	r3, #0
 8000424:	d0f9      	beq.n	800041a <uart1_write+0xa>

	/*Write to transmit data register*/
	USART1->DR = (ch & 0xFF); //to transmit 8 bit
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	4a03      	ldr	r2, [pc, #12]	; (8000438 <uart1_write+0x28>)
 800042a:	b2db      	uxtb	r3, r3
 800042c:	6053      	str	r3, [r2, #4]

}
 800042e:	bf00      	nop
 8000430:	370c      	adds	r7, #12
 8000432:	46bd      	mov	sp, r7
 8000434:	bc80      	pop	{r7}
 8000436:	4770      	bx	lr
 8000438:	40013800 	.word	0x40013800

0800043c <uart_set_baudrate>:

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate)
{
 800043c:	b580      	push	{r7, lr}
 800043e:	b084      	sub	sp, #16
 8000440:	af00      	add	r7, sp, #0
 8000442:	60f8      	str	r0, [r7, #12]
 8000444:	60b9      	str	r1, [r7, #8]
 8000446:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd(PeriphClk, BaudRate);
 8000448:	6879      	ldr	r1, [r7, #4]
 800044a:	68b8      	ldr	r0, [r7, #8]
 800044c:	f000 f808 	bl	8000460 <compute_uart_bd>
 8000450:	4603      	mov	r3, r0
 8000452:	461a      	mov	r2, r3
 8000454:	68fb      	ldr	r3, [r7, #12]
 8000456:	609a      	str	r2, [r3, #8]
}
 8000458:	bf00      	nop
 800045a:	3710      	adds	r7, #16
 800045c:	46bd      	mov	sp, r7
 800045e:	bd80      	pop	{r7, pc}

08000460 <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 8000460:	b480      	push	{r7}
 8000462:	b083      	sub	sp, #12
 8000464:	af00      	add	r7, sp, #0
 8000466:	6078      	str	r0, [r7, #4]
 8000468:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 800046a:	683b      	ldr	r3, [r7, #0]
 800046c:	085a      	lsrs	r2, r3, #1
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	441a      	add	r2, r3
 8000472:	683b      	ldr	r3, [r7, #0]
 8000474:	fbb2 f3f3 	udiv	r3, r2, r3
 8000478:	b29b      	uxth	r3, r3
}
 800047a:	4618      	mov	r0, r3
 800047c:	370c      	adds	r7, #12
 800047e:	46bd      	mov	sp, r7
 8000480:	bc80      	pop	{r7}
 8000482:	4770      	bx	lr

08000484 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000484:	480d      	ldr	r0, [pc, #52]	; (80004bc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000486:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000488:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800048c:	480c      	ldr	r0, [pc, #48]	; (80004c0 <LoopForever+0x6>)
  ldr r1, =_edata
 800048e:	490d      	ldr	r1, [pc, #52]	; (80004c4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000490:	4a0d      	ldr	r2, [pc, #52]	; (80004c8 <LoopForever+0xe>)
  movs r3, #0
 8000492:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000494:	e002      	b.n	800049c <LoopCopyDataInit>

08000496 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000496:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000498:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800049a:	3304      	adds	r3, #4

0800049c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800049c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800049e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004a0:	d3f9      	bcc.n	8000496 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004a2:	4a0a      	ldr	r2, [pc, #40]	; (80004cc <LoopForever+0x12>)
  ldr r4, =_ebss
 80004a4:	4c0a      	ldr	r4, [pc, #40]	; (80004d0 <LoopForever+0x16>)
  movs r3, #0
 80004a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004a8:	e001      	b.n	80004ae <LoopFillZerobss>

080004aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004ac:	3204      	adds	r2, #4

080004ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004b0:	d3fb      	bcc.n	80004aa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004b2:	f000 f97d 	bl	80007b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004b6:	f7ff fe5b 	bl	8000170 <main>

080004ba <LoopForever>:

LoopForever:
  b LoopForever
 80004ba:	e7fe      	b.n	80004ba <LoopForever>
  ldr   r0, =_estack
 80004bc:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80004c0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004c4:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80004c8:	080013c0 	.word	0x080013c0
  ldr r2, =_sbss
 80004cc:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80004d0:	200001c8 	.word	0x200001c8

080004d4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004d4:	e7fe      	b.n	80004d4 <ADC1_2_IRQHandler>
	...

080004d8 <std>:
 80004d8:	2300      	movs	r3, #0
 80004da:	b510      	push	{r4, lr}
 80004dc:	4604      	mov	r4, r0
 80004de:	e9c0 3300 	strd	r3, r3, [r0]
 80004e2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004e6:	6083      	str	r3, [r0, #8]
 80004e8:	8181      	strh	r1, [r0, #12]
 80004ea:	6643      	str	r3, [r0, #100]	; 0x64
 80004ec:	81c2      	strh	r2, [r0, #14]
 80004ee:	6183      	str	r3, [r0, #24]
 80004f0:	4619      	mov	r1, r3
 80004f2:	2208      	movs	r2, #8
 80004f4:	305c      	adds	r0, #92	; 0x5c
 80004f6:	f000 f906 	bl	8000706 <memset>
 80004fa:	4b0d      	ldr	r3, [pc, #52]	; (8000530 <std+0x58>)
 80004fc:	6224      	str	r4, [r4, #32]
 80004fe:	6263      	str	r3, [r4, #36]	; 0x24
 8000500:	4b0c      	ldr	r3, [pc, #48]	; (8000534 <std+0x5c>)
 8000502:	62a3      	str	r3, [r4, #40]	; 0x28
 8000504:	4b0c      	ldr	r3, [pc, #48]	; (8000538 <std+0x60>)
 8000506:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000508:	4b0c      	ldr	r3, [pc, #48]	; (800053c <std+0x64>)
 800050a:	6323      	str	r3, [r4, #48]	; 0x30
 800050c:	4b0c      	ldr	r3, [pc, #48]	; (8000540 <std+0x68>)
 800050e:	429c      	cmp	r4, r3
 8000510:	d006      	beq.n	8000520 <std+0x48>
 8000512:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000516:	4294      	cmp	r4, r2
 8000518:	d002      	beq.n	8000520 <std+0x48>
 800051a:	33d0      	adds	r3, #208	; 0xd0
 800051c:	429c      	cmp	r4, r3
 800051e:	d105      	bne.n	800052c <std+0x54>
 8000520:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000524:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000528:	f000 b966 	b.w	80007f8 <__retarget_lock_init_recursive>
 800052c:	bd10      	pop	{r4, pc}
 800052e:	bf00      	nop
 8000530:	08000681 	.word	0x08000681
 8000534:	080006a3 	.word	0x080006a3
 8000538:	080006db 	.word	0x080006db
 800053c:	080006ff 	.word	0x080006ff
 8000540:	2000007c 	.word	0x2000007c

08000544 <stdio_exit_handler>:
 8000544:	4a02      	ldr	r2, [pc, #8]	; (8000550 <stdio_exit_handler+0xc>)
 8000546:	4903      	ldr	r1, [pc, #12]	; (8000554 <stdio_exit_handler+0x10>)
 8000548:	4803      	ldr	r0, [pc, #12]	; (8000558 <stdio_exit_handler+0x14>)
 800054a:	f000 b869 	b.w	8000620 <_fwalk_sglue>
 800054e:	bf00      	nop
 8000550:	20000000 	.word	0x20000000
 8000554:	08001099 	.word	0x08001099
 8000558:	2000000c 	.word	0x2000000c

0800055c <cleanup_stdio>:
 800055c:	6841      	ldr	r1, [r0, #4]
 800055e:	4b0c      	ldr	r3, [pc, #48]	; (8000590 <cleanup_stdio+0x34>)
 8000560:	b510      	push	{r4, lr}
 8000562:	4299      	cmp	r1, r3
 8000564:	4604      	mov	r4, r0
 8000566:	d001      	beq.n	800056c <cleanup_stdio+0x10>
 8000568:	f000 fd96 	bl	8001098 <_fflush_r>
 800056c:	68a1      	ldr	r1, [r4, #8]
 800056e:	4b09      	ldr	r3, [pc, #36]	; (8000594 <cleanup_stdio+0x38>)
 8000570:	4299      	cmp	r1, r3
 8000572:	d002      	beq.n	800057a <cleanup_stdio+0x1e>
 8000574:	4620      	mov	r0, r4
 8000576:	f000 fd8f 	bl	8001098 <_fflush_r>
 800057a:	68e1      	ldr	r1, [r4, #12]
 800057c:	4b06      	ldr	r3, [pc, #24]	; (8000598 <cleanup_stdio+0x3c>)
 800057e:	4299      	cmp	r1, r3
 8000580:	d004      	beq.n	800058c <cleanup_stdio+0x30>
 8000582:	4620      	mov	r0, r4
 8000584:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000588:	f000 bd86 	b.w	8001098 <_fflush_r>
 800058c:	bd10      	pop	{r4, pc}
 800058e:	bf00      	nop
 8000590:	2000007c 	.word	0x2000007c
 8000594:	200000e4 	.word	0x200000e4
 8000598:	2000014c 	.word	0x2000014c

0800059c <global_stdio_init.part.0>:
 800059c:	b510      	push	{r4, lr}
 800059e:	4b0b      	ldr	r3, [pc, #44]	; (80005cc <global_stdio_init.part.0+0x30>)
 80005a0:	4c0b      	ldr	r4, [pc, #44]	; (80005d0 <global_stdio_init.part.0+0x34>)
 80005a2:	4a0c      	ldr	r2, [pc, #48]	; (80005d4 <global_stdio_init.part.0+0x38>)
 80005a4:	4620      	mov	r0, r4
 80005a6:	601a      	str	r2, [r3, #0]
 80005a8:	2104      	movs	r1, #4
 80005aa:	2200      	movs	r2, #0
 80005ac:	f7ff ff94 	bl	80004d8 <std>
 80005b0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80005b4:	2201      	movs	r2, #1
 80005b6:	2109      	movs	r1, #9
 80005b8:	f7ff ff8e 	bl	80004d8 <std>
 80005bc:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80005c0:	2202      	movs	r2, #2
 80005c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005c6:	2112      	movs	r1, #18
 80005c8:	f7ff bf86 	b.w	80004d8 <std>
 80005cc:	200001b4 	.word	0x200001b4
 80005d0:	2000007c 	.word	0x2000007c
 80005d4:	08000545 	.word	0x08000545

080005d8 <__sfp_lock_acquire>:
 80005d8:	4801      	ldr	r0, [pc, #4]	; (80005e0 <__sfp_lock_acquire+0x8>)
 80005da:	f000 b90e 	b.w	80007fa <__retarget_lock_acquire_recursive>
 80005de:	bf00      	nop
 80005e0:	200001bd 	.word	0x200001bd

080005e4 <__sfp_lock_release>:
 80005e4:	4801      	ldr	r0, [pc, #4]	; (80005ec <__sfp_lock_release+0x8>)
 80005e6:	f000 b909 	b.w	80007fc <__retarget_lock_release_recursive>
 80005ea:	bf00      	nop
 80005ec:	200001bd 	.word	0x200001bd

080005f0 <__sinit>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	4604      	mov	r4, r0
 80005f4:	f7ff fff0 	bl	80005d8 <__sfp_lock_acquire>
 80005f8:	6a23      	ldr	r3, [r4, #32]
 80005fa:	b11b      	cbz	r3, 8000604 <__sinit+0x14>
 80005fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000600:	f7ff bff0 	b.w	80005e4 <__sfp_lock_release>
 8000604:	4b04      	ldr	r3, [pc, #16]	; (8000618 <__sinit+0x28>)
 8000606:	6223      	str	r3, [r4, #32]
 8000608:	4b04      	ldr	r3, [pc, #16]	; (800061c <__sinit+0x2c>)
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	2b00      	cmp	r3, #0
 800060e:	d1f5      	bne.n	80005fc <__sinit+0xc>
 8000610:	f7ff ffc4 	bl	800059c <global_stdio_init.part.0>
 8000614:	e7f2      	b.n	80005fc <__sinit+0xc>
 8000616:	bf00      	nop
 8000618:	0800055d 	.word	0x0800055d
 800061c:	200001b4 	.word	0x200001b4

08000620 <_fwalk_sglue>:
 8000620:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000624:	4607      	mov	r7, r0
 8000626:	4688      	mov	r8, r1
 8000628:	4614      	mov	r4, r2
 800062a:	2600      	movs	r6, #0
 800062c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000630:	f1b9 0901 	subs.w	r9, r9, #1
 8000634:	d505      	bpl.n	8000642 <_fwalk_sglue+0x22>
 8000636:	6824      	ldr	r4, [r4, #0]
 8000638:	2c00      	cmp	r4, #0
 800063a:	d1f7      	bne.n	800062c <_fwalk_sglue+0xc>
 800063c:	4630      	mov	r0, r6
 800063e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000642:	89ab      	ldrh	r3, [r5, #12]
 8000644:	2b01      	cmp	r3, #1
 8000646:	d907      	bls.n	8000658 <_fwalk_sglue+0x38>
 8000648:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800064c:	3301      	adds	r3, #1
 800064e:	d003      	beq.n	8000658 <_fwalk_sglue+0x38>
 8000650:	4629      	mov	r1, r5
 8000652:	4638      	mov	r0, r7
 8000654:	47c0      	blx	r8
 8000656:	4306      	orrs	r6, r0
 8000658:	3568      	adds	r5, #104	; 0x68
 800065a:	e7e9      	b.n	8000630 <_fwalk_sglue+0x10>

0800065c <iprintf>:
 800065c:	b40f      	push	{r0, r1, r2, r3}
 800065e:	b507      	push	{r0, r1, r2, lr}
 8000660:	4906      	ldr	r1, [pc, #24]	; (800067c <iprintf+0x20>)
 8000662:	ab04      	add	r3, sp, #16
 8000664:	6808      	ldr	r0, [r1, #0]
 8000666:	f853 2b04 	ldr.w	r2, [r3], #4
 800066a:	6881      	ldr	r1, [r0, #8]
 800066c:	9301      	str	r3, [sp, #4]
 800066e:	f000 f9e3 	bl	8000a38 <_vfiprintf_r>
 8000672:	b003      	add	sp, #12
 8000674:	f85d eb04 	ldr.w	lr, [sp], #4
 8000678:	b004      	add	sp, #16
 800067a:	4770      	bx	lr
 800067c:	20000058 	.word	0x20000058

08000680 <__sread>:
 8000680:	b510      	push	{r4, lr}
 8000682:	460c      	mov	r4, r1
 8000684:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000688:	f000 f868 	bl	800075c <_read_r>
 800068c:	2800      	cmp	r0, #0
 800068e:	bfab      	itete	ge
 8000690:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000692:	89a3      	ldrhlt	r3, [r4, #12]
 8000694:	181b      	addge	r3, r3, r0
 8000696:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800069a:	bfac      	ite	ge
 800069c:	6563      	strge	r3, [r4, #84]	; 0x54
 800069e:	81a3      	strhlt	r3, [r4, #12]
 80006a0:	bd10      	pop	{r4, pc}

080006a2 <__swrite>:
 80006a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006a6:	461f      	mov	r7, r3
 80006a8:	898b      	ldrh	r3, [r1, #12]
 80006aa:	4605      	mov	r5, r0
 80006ac:	05db      	lsls	r3, r3, #23
 80006ae:	460c      	mov	r4, r1
 80006b0:	4616      	mov	r6, r2
 80006b2:	d505      	bpl.n	80006c0 <__swrite+0x1e>
 80006b4:	2302      	movs	r3, #2
 80006b6:	2200      	movs	r2, #0
 80006b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006bc:	f000 f83c 	bl	8000738 <_lseek_r>
 80006c0:	89a3      	ldrh	r3, [r4, #12]
 80006c2:	4632      	mov	r2, r6
 80006c4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80006c8:	81a3      	strh	r3, [r4, #12]
 80006ca:	4628      	mov	r0, r5
 80006cc:	463b      	mov	r3, r7
 80006ce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80006d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80006d6:	f000 b853 	b.w	8000780 <_write_r>

080006da <__sseek>:
 80006da:	b510      	push	{r4, lr}
 80006dc:	460c      	mov	r4, r1
 80006de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006e2:	f000 f829 	bl	8000738 <_lseek_r>
 80006e6:	1c43      	adds	r3, r0, #1
 80006e8:	89a3      	ldrh	r3, [r4, #12]
 80006ea:	bf15      	itete	ne
 80006ec:	6560      	strne	r0, [r4, #84]	; 0x54
 80006ee:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80006f2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80006f6:	81a3      	strheq	r3, [r4, #12]
 80006f8:	bf18      	it	ne
 80006fa:	81a3      	strhne	r3, [r4, #12]
 80006fc:	bd10      	pop	{r4, pc}

080006fe <__sclose>:
 80006fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000702:	f000 b809 	b.w	8000718 <_close_r>

08000706 <memset>:
 8000706:	4603      	mov	r3, r0
 8000708:	4402      	add	r2, r0
 800070a:	4293      	cmp	r3, r2
 800070c:	d100      	bne.n	8000710 <memset+0xa>
 800070e:	4770      	bx	lr
 8000710:	f803 1b01 	strb.w	r1, [r3], #1
 8000714:	e7f9      	b.n	800070a <memset+0x4>
	...

08000718 <_close_r>:
 8000718:	b538      	push	{r3, r4, r5, lr}
 800071a:	2300      	movs	r3, #0
 800071c:	4d05      	ldr	r5, [pc, #20]	; (8000734 <_close_r+0x1c>)
 800071e:	4604      	mov	r4, r0
 8000720:	4608      	mov	r0, r1
 8000722:	602b      	str	r3, [r5, #0]
 8000724:	f7ff fd9f 	bl	8000266 <_close>
 8000728:	1c43      	adds	r3, r0, #1
 800072a:	d102      	bne.n	8000732 <_close_r+0x1a>
 800072c:	682b      	ldr	r3, [r5, #0]
 800072e:	b103      	cbz	r3, 8000732 <_close_r+0x1a>
 8000730:	6023      	str	r3, [r4, #0]
 8000732:	bd38      	pop	{r3, r4, r5, pc}
 8000734:	200001b8 	.word	0x200001b8

08000738 <_lseek_r>:
 8000738:	b538      	push	{r3, r4, r5, lr}
 800073a:	4604      	mov	r4, r0
 800073c:	4608      	mov	r0, r1
 800073e:	4611      	mov	r1, r2
 8000740:	2200      	movs	r2, #0
 8000742:	4d05      	ldr	r5, [pc, #20]	; (8000758 <_lseek_r+0x20>)
 8000744:	602a      	str	r2, [r5, #0]
 8000746:	461a      	mov	r2, r3
 8000748:	f7ff fdb1 	bl	80002ae <_lseek>
 800074c:	1c43      	adds	r3, r0, #1
 800074e:	d102      	bne.n	8000756 <_lseek_r+0x1e>
 8000750:	682b      	ldr	r3, [r5, #0]
 8000752:	b103      	cbz	r3, 8000756 <_lseek_r+0x1e>
 8000754:	6023      	str	r3, [r4, #0]
 8000756:	bd38      	pop	{r3, r4, r5, pc}
 8000758:	200001b8 	.word	0x200001b8

0800075c <_read_r>:
 800075c:	b538      	push	{r3, r4, r5, lr}
 800075e:	4604      	mov	r4, r0
 8000760:	4608      	mov	r0, r1
 8000762:	4611      	mov	r1, r2
 8000764:	2200      	movs	r2, #0
 8000766:	4d05      	ldr	r5, [pc, #20]	; (800077c <_read_r+0x20>)
 8000768:	602a      	str	r2, [r5, #0]
 800076a:	461a      	mov	r2, r3
 800076c:	f7ff fd42 	bl	80001f4 <_read>
 8000770:	1c43      	adds	r3, r0, #1
 8000772:	d102      	bne.n	800077a <_read_r+0x1e>
 8000774:	682b      	ldr	r3, [r5, #0]
 8000776:	b103      	cbz	r3, 800077a <_read_r+0x1e>
 8000778:	6023      	str	r3, [r4, #0]
 800077a:	bd38      	pop	{r3, r4, r5, pc}
 800077c:	200001b8 	.word	0x200001b8

08000780 <_write_r>:
 8000780:	b538      	push	{r3, r4, r5, lr}
 8000782:	4604      	mov	r4, r0
 8000784:	4608      	mov	r0, r1
 8000786:	4611      	mov	r1, r2
 8000788:	2200      	movs	r2, #0
 800078a:	4d05      	ldr	r5, [pc, #20]	; (80007a0 <_write_r+0x20>)
 800078c:	602a      	str	r2, [r5, #0]
 800078e:	461a      	mov	r2, r3
 8000790:	f7ff fd4d 	bl	800022e <_write>
 8000794:	1c43      	adds	r3, r0, #1
 8000796:	d102      	bne.n	800079e <_write_r+0x1e>
 8000798:	682b      	ldr	r3, [r5, #0]
 800079a:	b103      	cbz	r3, 800079e <_write_r+0x1e>
 800079c:	6023      	str	r3, [r4, #0]
 800079e:	bd38      	pop	{r3, r4, r5, pc}
 80007a0:	200001b8 	.word	0x200001b8

080007a4 <__errno>:
 80007a4:	4b01      	ldr	r3, [pc, #4]	; (80007ac <__errno+0x8>)
 80007a6:	6818      	ldr	r0, [r3, #0]
 80007a8:	4770      	bx	lr
 80007aa:	bf00      	nop
 80007ac:	20000058 	.word	0x20000058

080007b0 <__libc_init_array>:
 80007b0:	b570      	push	{r4, r5, r6, lr}
 80007b2:	2600      	movs	r6, #0
 80007b4:	4d0c      	ldr	r5, [pc, #48]	; (80007e8 <__libc_init_array+0x38>)
 80007b6:	4c0d      	ldr	r4, [pc, #52]	; (80007ec <__libc_init_array+0x3c>)
 80007b8:	1b64      	subs	r4, r4, r5
 80007ba:	10a4      	asrs	r4, r4, #2
 80007bc:	42a6      	cmp	r6, r4
 80007be:	d109      	bne.n	80007d4 <__libc_init_array+0x24>
 80007c0:	f000 fdca 	bl	8001358 <_init>
 80007c4:	2600      	movs	r6, #0
 80007c6:	4d0a      	ldr	r5, [pc, #40]	; (80007f0 <__libc_init_array+0x40>)
 80007c8:	4c0a      	ldr	r4, [pc, #40]	; (80007f4 <__libc_init_array+0x44>)
 80007ca:	1b64      	subs	r4, r4, r5
 80007cc:	10a4      	asrs	r4, r4, #2
 80007ce:	42a6      	cmp	r6, r4
 80007d0:	d105      	bne.n	80007de <__libc_init_array+0x2e>
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80007d8:	4798      	blx	r3
 80007da:	3601      	adds	r6, #1
 80007dc:	e7ee      	b.n	80007bc <__libc_init_array+0xc>
 80007de:	f855 3b04 	ldr.w	r3, [r5], #4
 80007e2:	4798      	blx	r3
 80007e4:	3601      	adds	r6, #1
 80007e6:	e7f2      	b.n	80007ce <__libc_init_array+0x1e>
 80007e8:	080013b8 	.word	0x080013b8
 80007ec:	080013b8 	.word	0x080013b8
 80007f0:	080013b8 	.word	0x080013b8
 80007f4:	080013bc 	.word	0x080013bc

080007f8 <__retarget_lock_init_recursive>:
 80007f8:	4770      	bx	lr

080007fa <__retarget_lock_acquire_recursive>:
 80007fa:	4770      	bx	lr

080007fc <__retarget_lock_release_recursive>:
 80007fc:	4770      	bx	lr
	...

08000800 <_free_r>:
 8000800:	b538      	push	{r3, r4, r5, lr}
 8000802:	4605      	mov	r5, r0
 8000804:	2900      	cmp	r1, #0
 8000806:	d040      	beq.n	800088a <_free_r+0x8a>
 8000808:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800080c:	1f0c      	subs	r4, r1, #4
 800080e:	2b00      	cmp	r3, #0
 8000810:	bfb8      	it	lt
 8000812:	18e4      	addlt	r4, r4, r3
 8000814:	f000 f8dc 	bl	80009d0 <__malloc_lock>
 8000818:	4a1c      	ldr	r2, [pc, #112]	; (800088c <_free_r+0x8c>)
 800081a:	6813      	ldr	r3, [r2, #0]
 800081c:	b933      	cbnz	r3, 800082c <_free_r+0x2c>
 800081e:	6063      	str	r3, [r4, #4]
 8000820:	6014      	str	r4, [r2, #0]
 8000822:	4628      	mov	r0, r5
 8000824:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000828:	f000 b8d8 	b.w	80009dc <__malloc_unlock>
 800082c:	42a3      	cmp	r3, r4
 800082e:	d908      	bls.n	8000842 <_free_r+0x42>
 8000830:	6820      	ldr	r0, [r4, #0]
 8000832:	1821      	adds	r1, r4, r0
 8000834:	428b      	cmp	r3, r1
 8000836:	bf01      	itttt	eq
 8000838:	6819      	ldreq	r1, [r3, #0]
 800083a:	685b      	ldreq	r3, [r3, #4]
 800083c:	1809      	addeq	r1, r1, r0
 800083e:	6021      	streq	r1, [r4, #0]
 8000840:	e7ed      	b.n	800081e <_free_r+0x1e>
 8000842:	461a      	mov	r2, r3
 8000844:	685b      	ldr	r3, [r3, #4]
 8000846:	b10b      	cbz	r3, 800084c <_free_r+0x4c>
 8000848:	42a3      	cmp	r3, r4
 800084a:	d9fa      	bls.n	8000842 <_free_r+0x42>
 800084c:	6811      	ldr	r1, [r2, #0]
 800084e:	1850      	adds	r0, r2, r1
 8000850:	42a0      	cmp	r0, r4
 8000852:	d10b      	bne.n	800086c <_free_r+0x6c>
 8000854:	6820      	ldr	r0, [r4, #0]
 8000856:	4401      	add	r1, r0
 8000858:	1850      	adds	r0, r2, r1
 800085a:	4283      	cmp	r3, r0
 800085c:	6011      	str	r1, [r2, #0]
 800085e:	d1e0      	bne.n	8000822 <_free_r+0x22>
 8000860:	6818      	ldr	r0, [r3, #0]
 8000862:	685b      	ldr	r3, [r3, #4]
 8000864:	4408      	add	r0, r1
 8000866:	6010      	str	r0, [r2, #0]
 8000868:	6053      	str	r3, [r2, #4]
 800086a:	e7da      	b.n	8000822 <_free_r+0x22>
 800086c:	d902      	bls.n	8000874 <_free_r+0x74>
 800086e:	230c      	movs	r3, #12
 8000870:	602b      	str	r3, [r5, #0]
 8000872:	e7d6      	b.n	8000822 <_free_r+0x22>
 8000874:	6820      	ldr	r0, [r4, #0]
 8000876:	1821      	adds	r1, r4, r0
 8000878:	428b      	cmp	r3, r1
 800087a:	bf01      	itttt	eq
 800087c:	6819      	ldreq	r1, [r3, #0]
 800087e:	685b      	ldreq	r3, [r3, #4]
 8000880:	1809      	addeq	r1, r1, r0
 8000882:	6021      	streq	r1, [r4, #0]
 8000884:	6063      	str	r3, [r4, #4]
 8000886:	6054      	str	r4, [r2, #4]
 8000888:	e7cb      	b.n	8000822 <_free_r+0x22>
 800088a:	bd38      	pop	{r3, r4, r5, pc}
 800088c:	200001c0 	.word	0x200001c0

08000890 <sbrk_aligned>:
 8000890:	b570      	push	{r4, r5, r6, lr}
 8000892:	4e0e      	ldr	r6, [pc, #56]	; (80008cc <sbrk_aligned+0x3c>)
 8000894:	460c      	mov	r4, r1
 8000896:	6831      	ldr	r1, [r6, #0]
 8000898:	4605      	mov	r5, r0
 800089a:	b911      	cbnz	r1, 80008a2 <sbrk_aligned+0x12>
 800089c:	f000 fcba 	bl	8001214 <_sbrk_r>
 80008a0:	6030      	str	r0, [r6, #0]
 80008a2:	4621      	mov	r1, r4
 80008a4:	4628      	mov	r0, r5
 80008a6:	f000 fcb5 	bl	8001214 <_sbrk_r>
 80008aa:	1c43      	adds	r3, r0, #1
 80008ac:	d00a      	beq.n	80008c4 <sbrk_aligned+0x34>
 80008ae:	1cc4      	adds	r4, r0, #3
 80008b0:	f024 0403 	bic.w	r4, r4, #3
 80008b4:	42a0      	cmp	r0, r4
 80008b6:	d007      	beq.n	80008c8 <sbrk_aligned+0x38>
 80008b8:	1a21      	subs	r1, r4, r0
 80008ba:	4628      	mov	r0, r5
 80008bc:	f000 fcaa 	bl	8001214 <_sbrk_r>
 80008c0:	3001      	adds	r0, #1
 80008c2:	d101      	bne.n	80008c8 <sbrk_aligned+0x38>
 80008c4:	f04f 34ff 	mov.w	r4, #4294967295
 80008c8:	4620      	mov	r0, r4
 80008ca:	bd70      	pop	{r4, r5, r6, pc}
 80008cc:	200001c4 	.word	0x200001c4

080008d0 <_malloc_r>:
 80008d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008d4:	1ccd      	adds	r5, r1, #3
 80008d6:	f025 0503 	bic.w	r5, r5, #3
 80008da:	3508      	adds	r5, #8
 80008dc:	2d0c      	cmp	r5, #12
 80008de:	bf38      	it	cc
 80008e0:	250c      	movcc	r5, #12
 80008e2:	2d00      	cmp	r5, #0
 80008e4:	4607      	mov	r7, r0
 80008e6:	db01      	blt.n	80008ec <_malloc_r+0x1c>
 80008e8:	42a9      	cmp	r1, r5
 80008ea:	d905      	bls.n	80008f8 <_malloc_r+0x28>
 80008ec:	230c      	movs	r3, #12
 80008ee:	2600      	movs	r6, #0
 80008f0:	603b      	str	r3, [r7, #0]
 80008f2:	4630      	mov	r0, r6
 80008f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008f8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80009cc <_malloc_r+0xfc>
 80008fc:	f000 f868 	bl	80009d0 <__malloc_lock>
 8000900:	f8d8 3000 	ldr.w	r3, [r8]
 8000904:	461c      	mov	r4, r3
 8000906:	bb5c      	cbnz	r4, 8000960 <_malloc_r+0x90>
 8000908:	4629      	mov	r1, r5
 800090a:	4638      	mov	r0, r7
 800090c:	f7ff ffc0 	bl	8000890 <sbrk_aligned>
 8000910:	1c43      	adds	r3, r0, #1
 8000912:	4604      	mov	r4, r0
 8000914:	d155      	bne.n	80009c2 <_malloc_r+0xf2>
 8000916:	f8d8 4000 	ldr.w	r4, [r8]
 800091a:	4626      	mov	r6, r4
 800091c:	2e00      	cmp	r6, #0
 800091e:	d145      	bne.n	80009ac <_malloc_r+0xdc>
 8000920:	2c00      	cmp	r4, #0
 8000922:	d048      	beq.n	80009b6 <_malloc_r+0xe6>
 8000924:	6823      	ldr	r3, [r4, #0]
 8000926:	4631      	mov	r1, r6
 8000928:	4638      	mov	r0, r7
 800092a:	eb04 0903 	add.w	r9, r4, r3
 800092e:	f000 fc71 	bl	8001214 <_sbrk_r>
 8000932:	4581      	cmp	r9, r0
 8000934:	d13f      	bne.n	80009b6 <_malloc_r+0xe6>
 8000936:	6821      	ldr	r1, [r4, #0]
 8000938:	4638      	mov	r0, r7
 800093a:	1a6d      	subs	r5, r5, r1
 800093c:	4629      	mov	r1, r5
 800093e:	f7ff ffa7 	bl	8000890 <sbrk_aligned>
 8000942:	3001      	adds	r0, #1
 8000944:	d037      	beq.n	80009b6 <_malloc_r+0xe6>
 8000946:	6823      	ldr	r3, [r4, #0]
 8000948:	442b      	add	r3, r5
 800094a:	6023      	str	r3, [r4, #0]
 800094c:	f8d8 3000 	ldr.w	r3, [r8]
 8000950:	2b00      	cmp	r3, #0
 8000952:	d038      	beq.n	80009c6 <_malloc_r+0xf6>
 8000954:	685a      	ldr	r2, [r3, #4]
 8000956:	42a2      	cmp	r2, r4
 8000958:	d12b      	bne.n	80009b2 <_malloc_r+0xe2>
 800095a:	2200      	movs	r2, #0
 800095c:	605a      	str	r2, [r3, #4]
 800095e:	e00f      	b.n	8000980 <_malloc_r+0xb0>
 8000960:	6822      	ldr	r2, [r4, #0]
 8000962:	1b52      	subs	r2, r2, r5
 8000964:	d41f      	bmi.n	80009a6 <_malloc_r+0xd6>
 8000966:	2a0b      	cmp	r2, #11
 8000968:	d917      	bls.n	800099a <_malloc_r+0xca>
 800096a:	1961      	adds	r1, r4, r5
 800096c:	42a3      	cmp	r3, r4
 800096e:	6025      	str	r5, [r4, #0]
 8000970:	bf18      	it	ne
 8000972:	6059      	strne	r1, [r3, #4]
 8000974:	6863      	ldr	r3, [r4, #4]
 8000976:	bf08      	it	eq
 8000978:	f8c8 1000 	streq.w	r1, [r8]
 800097c:	5162      	str	r2, [r4, r5]
 800097e:	604b      	str	r3, [r1, #4]
 8000980:	4638      	mov	r0, r7
 8000982:	f104 060b 	add.w	r6, r4, #11
 8000986:	f000 f829 	bl	80009dc <__malloc_unlock>
 800098a:	f026 0607 	bic.w	r6, r6, #7
 800098e:	1d23      	adds	r3, r4, #4
 8000990:	1af2      	subs	r2, r6, r3
 8000992:	d0ae      	beq.n	80008f2 <_malloc_r+0x22>
 8000994:	1b9b      	subs	r3, r3, r6
 8000996:	50a3      	str	r3, [r4, r2]
 8000998:	e7ab      	b.n	80008f2 <_malloc_r+0x22>
 800099a:	42a3      	cmp	r3, r4
 800099c:	6862      	ldr	r2, [r4, #4]
 800099e:	d1dd      	bne.n	800095c <_malloc_r+0x8c>
 80009a0:	f8c8 2000 	str.w	r2, [r8]
 80009a4:	e7ec      	b.n	8000980 <_malloc_r+0xb0>
 80009a6:	4623      	mov	r3, r4
 80009a8:	6864      	ldr	r4, [r4, #4]
 80009aa:	e7ac      	b.n	8000906 <_malloc_r+0x36>
 80009ac:	4634      	mov	r4, r6
 80009ae:	6876      	ldr	r6, [r6, #4]
 80009b0:	e7b4      	b.n	800091c <_malloc_r+0x4c>
 80009b2:	4613      	mov	r3, r2
 80009b4:	e7cc      	b.n	8000950 <_malloc_r+0x80>
 80009b6:	230c      	movs	r3, #12
 80009b8:	4638      	mov	r0, r7
 80009ba:	603b      	str	r3, [r7, #0]
 80009bc:	f000 f80e 	bl	80009dc <__malloc_unlock>
 80009c0:	e797      	b.n	80008f2 <_malloc_r+0x22>
 80009c2:	6025      	str	r5, [r4, #0]
 80009c4:	e7dc      	b.n	8000980 <_malloc_r+0xb0>
 80009c6:	605b      	str	r3, [r3, #4]
 80009c8:	deff      	udf	#255	; 0xff
 80009ca:	bf00      	nop
 80009cc:	200001c0 	.word	0x200001c0

080009d0 <__malloc_lock>:
 80009d0:	4801      	ldr	r0, [pc, #4]	; (80009d8 <__malloc_lock+0x8>)
 80009d2:	f7ff bf12 	b.w	80007fa <__retarget_lock_acquire_recursive>
 80009d6:	bf00      	nop
 80009d8:	200001bc 	.word	0x200001bc

080009dc <__malloc_unlock>:
 80009dc:	4801      	ldr	r0, [pc, #4]	; (80009e4 <__malloc_unlock+0x8>)
 80009de:	f7ff bf0d 	b.w	80007fc <__retarget_lock_release_recursive>
 80009e2:	bf00      	nop
 80009e4:	200001bc 	.word	0x200001bc

080009e8 <__sfputc_r>:
 80009e8:	6893      	ldr	r3, [r2, #8]
 80009ea:	b410      	push	{r4}
 80009ec:	3b01      	subs	r3, #1
 80009ee:	2b00      	cmp	r3, #0
 80009f0:	6093      	str	r3, [r2, #8]
 80009f2:	da07      	bge.n	8000a04 <__sfputc_r+0x1c>
 80009f4:	6994      	ldr	r4, [r2, #24]
 80009f6:	42a3      	cmp	r3, r4
 80009f8:	db01      	blt.n	80009fe <__sfputc_r+0x16>
 80009fa:	290a      	cmp	r1, #10
 80009fc:	d102      	bne.n	8000a04 <__sfputc_r+0x1c>
 80009fe:	bc10      	pop	{r4}
 8000a00:	f000 bb72 	b.w	80010e8 <__swbuf_r>
 8000a04:	6813      	ldr	r3, [r2, #0]
 8000a06:	1c58      	adds	r0, r3, #1
 8000a08:	6010      	str	r0, [r2, #0]
 8000a0a:	7019      	strb	r1, [r3, #0]
 8000a0c:	4608      	mov	r0, r1
 8000a0e:	bc10      	pop	{r4}
 8000a10:	4770      	bx	lr

08000a12 <__sfputs_r>:
 8000a12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a14:	4606      	mov	r6, r0
 8000a16:	460f      	mov	r7, r1
 8000a18:	4614      	mov	r4, r2
 8000a1a:	18d5      	adds	r5, r2, r3
 8000a1c:	42ac      	cmp	r4, r5
 8000a1e:	d101      	bne.n	8000a24 <__sfputs_r+0x12>
 8000a20:	2000      	movs	r0, #0
 8000a22:	e007      	b.n	8000a34 <__sfputs_r+0x22>
 8000a24:	463a      	mov	r2, r7
 8000a26:	4630      	mov	r0, r6
 8000a28:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a2c:	f7ff ffdc 	bl	80009e8 <__sfputc_r>
 8000a30:	1c43      	adds	r3, r0, #1
 8000a32:	d1f3      	bne.n	8000a1c <__sfputs_r+0xa>
 8000a34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a38 <_vfiprintf_r>:
 8000a38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a3c:	460d      	mov	r5, r1
 8000a3e:	4614      	mov	r4, r2
 8000a40:	4698      	mov	r8, r3
 8000a42:	4606      	mov	r6, r0
 8000a44:	b09d      	sub	sp, #116	; 0x74
 8000a46:	b118      	cbz	r0, 8000a50 <_vfiprintf_r+0x18>
 8000a48:	6a03      	ldr	r3, [r0, #32]
 8000a4a:	b90b      	cbnz	r3, 8000a50 <_vfiprintf_r+0x18>
 8000a4c:	f7ff fdd0 	bl	80005f0 <__sinit>
 8000a50:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a52:	07d9      	lsls	r1, r3, #31
 8000a54:	d405      	bmi.n	8000a62 <_vfiprintf_r+0x2a>
 8000a56:	89ab      	ldrh	r3, [r5, #12]
 8000a58:	059a      	lsls	r2, r3, #22
 8000a5a:	d402      	bmi.n	8000a62 <_vfiprintf_r+0x2a>
 8000a5c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a5e:	f7ff fecc 	bl	80007fa <__retarget_lock_acquire_recursive>
 8000a62:	89ab      	ldrh	r3, [r5, #12]
 8000a64:	071b      	lsls	r3, r3, #28
 8000a66:	d501      	bpl.n	8000a6c <_vfiprintf_r+0x34>
 8000a68:	692b      	ldr	r3, [r5, #16]
 8000a6a:	b99b      	cbnz	r3, 8000a94 <_vfiprintf_r+0x5c>
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	4630      	mov	r0, r6
 8000a70:	f000 fb78 	bl	8001164 <__swsetup_r>
 8000a74:	b170      	cbz	r0, 8000a94 <_vfiprintf_r+0x5c>
 8000a76:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a78:	07dc      	lsls	r4, r3, #31
 8000a7a:	d504      	bpl.n	8000a86 <_vfiprintf_r+0x4e>
 8000a7c:	f04f 30ff 	mov.w	r0, #4294967295
 8000a80:	b01d      	add	sp, #116	; 0x74
 8000a82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a86:	89ab      	ldrh	r3, [r5, #12]
 8000a88:	0598      	lsls	r0, r3, #22
 8000a8a:	d4f7      	bmi.n	8000a7c <_vfiprintf_r+0x44>
 8000a8c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a8e:	f7ff feb5 	bl	80007fc <__retarget_lock_release_recursive>
 8000a92:	e7f3      	b.n	8000a7c <_vfiprintf_r+0x44>
 8000a94:	2300      	movs	r3, #0
 8000a96:	9309      	str	r3, [sp, #36]	; 0x24
 8000a98:	2320      	movs	r3, #32
 8000a9a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a9e:	2330      	movs	r3, #48	; 0x30
 8000aa0:	f04f 0901 	mov.w	r9, #1
 8000aa4:	f8cd 800c 	str.w	r8, [sp, #12]
 8000aa8:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 8000c58 <_vfiprintf_r+0x220>
 8000aac:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000ab0:	4623      	mov	r3, r4
 8000ab2:	469a      	mov	sl, r3
 8000ab4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000ab8:	b10a      	cbz	r2, 8000abe <_vfiprintf_r+0x86>
 8000aba:	2a25      	cmp	r2, #37	; 0x25
 8000abc:	d1f9      	bne.n	8000ab2 <_vfiprintf_r+0x7a>
 8000abe:	ebba 0b04 	subs.w	fp, sl, r4
 8000ac2:	d00b      	beq.n	8000adc <_vfiprintf_r+0xa4>
 8000ac4:	465b      	mov	r3, fp
 8000ac6:	4622      	mov	r2, r4
 8000ac8:	4629      	mov	r1, r5
 8000aca:	4630      	mov	r0, r6
 8000acc:	f7ff ffa1 	bl	8000a12 <__sfputs_r>
 8000ad0:	3001      	adds	r0, #1
 8000ad2:	f000 80a9 	beq.w	8000c28 <_vfiprintf_r+0x1f0>
 8000ad6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000ad8:	445a      	add	r2, fp
 8000ada:	9209      	str	r2, [sp, #36]	; 0x24
 8000adc:	f89a 3000 	ldrb.w	r3, [sl]
 8000ae0:	2b00      	cmp	r3, #0
 8000ae2:	f000 80a1 	beq.w	8000c28 <_vfiprintf_r+0x1f0>
 8000ae6:	2300      	movs	r3, #0
 8000ae8:	f04f 32ff 	mov.w	r2, #4294967295
 8000aec:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000af0:	f10a 0a01 	add.w	sl, sl, #1
 8000af4:	9304      	str	r3, [sp, #16]
 8000af6:	9307      	str	r3, [sp, #28]
 8000af8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000afc:	931a      	str	r3, [sp, #104]	; 0x68
 8000afe:	4654      	mov	r4, sl
 8000b00:	2205      	movs	r2, #5
 8000b02:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b06:	4854      	ldr	r0, [pc, #336]	; (8000c58 <_vfiprintf_r+0x220>)
 8000b08:	f000 fb94 	bl	8001234 <memchr>
 8000b0c:	9a04      	ldr	r2, [sp, #16]
 8000b0e:	b9d8      	cbnz	r0, 8000b48 <_vfiprintf_r+0x110>
 8000b10:	06d1      	lsls	r1, r2, #27
 8000b12:	bf44      	itt	mi
 8000b14:	2320      	movmi	r3, #32
 8000b16:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b1a:	0713      	lsls	r3, r2, #28
 8000b1c:	bf44      	itt	mi
 8000b1e:	232b      	movmi	r3, #43	; 0x2b
 8000b20:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b24:	f89a 3000 	ldrb.w	r3, [sl]
 8000b28:	2b2a      	cmp	r3, #42	; 0x2a
 8000b2a:	d015      	beq.n	8000b58 <_vfiprintf_r+0x120>
 8000b2c:	4654      	mov	r4, sl
 8000b2e:	2000      	movs	r0, #0
 8000b30:	f04f 0c0a 	mov.w	ip, #10
 8000b34:	9a07      	ldr	r2, [sp, #28]
 8000b36:	4621      	mov	r1, r4
 8000b38:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b3c:	3b30      	subs	r3, #48	; 0x30
 8000b3e:	2b09      	cmp	r3, #9
 8000b40:	d94d      	bls.n	8000bde <_vfiprintf_r+0x1a6>
 8000b42:	b1b0      	cbz	r0, 8000b72 <_vfiprintf_r+0x13a>
 8000b44:	9207      	str	r2, [sp, #28]
 8000b46:	e014      	b.n	8000b72 <_vfiprintf_r+0x13a>
 8000b48:	eba0 0308 	sub.w	r3, r0, r8
 8000b4c:	fa09 f303 	lsl.w	r3, r9, r3
 8000b50:	4313      	orrs	r3, r2
 8000b52:	46a2      	mov	sl, r4
 8000b54:	9304      	str	r3, [sp, #16]
 8000b56:	e7d2      	b.n	8000afe <_vfiprintf_r+0xc6>
 8000b58:	9b03      	ldr	r3, [sp, #12]
 8000b5a:	1d19      	adds	r1, r3, #4
 8000b5c:	681b      	ldr	r3, [r3, #0]
 8000b5e:	9103      	str	r1, [sp, #12]
 8000b60:	2b00      	cmp	r3, #0
 8000b62:	bfbb      	ittet	lt
 8000b64:	425b      	neglt	r3, r3
 8000b66:	f042 0202 	orrlt.w	r2, r2, #2
 8000b6a:	9307      	strge	r3, [sp, #28]
 8000b6c:	9307      	strlt	r3, [sp, #28]
 8000b6e:	bfb8      	it	lt
 8000b70:	9204      	strlt	r2, [sp, #16]
 8000b72:	7823      	ldrb	r3, [r4, #0]
 8000b74:	2b2e      	cmp	r3, #46	; 0x2e
 8000b76:	d10c      	bne.n	8000b92 <_vfiprintf_r+0x15a>
 8000b78:	7863      	ldrb	r3, [r4, #1]
 8000b7a:	2b2a      	cmp	r3, #42	; 0x2a
 8000b7c:	d134      	bne.n	8000be8 <_vfiprintf_r+0x1b0>
 8000b7e:	9b03      	ldr	r3, [sp, #12]
 8000b80:	3402      	adds	r4, #2
 8000b82:	1d1a      	adds	r2, r3, #4
 8000b84:	681b      	ldr	r3, [r3, #0]
 8000b86:	9203      	str	r2, [sp, #12]
 8000b88:	2b00      	cmp	r3, #0
 8000b8a:	bfb8      	it	lt
 8000b8c:	f04f 33ff 	movlt.w	r3, #4294967295
 8000b90:	9305      	str	r3, [sp, #20]
 8000b92:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8000c5c <_vfiprintf_r+0x224>
 8000b96:	2203      	movs	r2, #3
 8000b98:	4650      	mov	r0, sl
 8000b9a:	7821      	ldrb	r1, [r4, #0]
 8000b9c:	f000 fb4a 	bl	8001234 <memchr>
 8000ba0:	b138      	cbz	r0, 8000bb2 <_vfiprintf_r+0x17a>
 8000ba2:	2240      	movs	r2, #64	; 0x40
 8000ba4:	9b04      	ldr	r3, [sp, #16]
 8000ba6:	eba0 000a 	sub.w	r0, r0, sl
 8000baa:	4082      	lsls	r2, r0
 8000bac:	4313      	orrs	r3, r2
 8000bae:	3401      	adds	r4, #1
 8000bb0:	9304      	str	r3, [sp, #16]
 8000bb2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bb6:	2206      	movs	r2, #6
 8000bb8:	4829      	ldr	r0, [pc, #164]	; (8000c60 <_vfiprintf_r+0x228>)
 8000bba:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000bbe:	f000 fb39 	bl	8001234 <memchr>
 8000bc2:	2800      	cmp	r0, #0
 8000bc4:	d03f      	beq.n	8000c46 <_vfiprintf_r+0x20e>
 8000bc6:	4b27      	ldr	r3, [pc, #156]	; (8000c64 <_vfiprintf_r+0x22c>)
 8000bc8:	bb1b      	cbnz	r3, 8000c12 <_vfiprintf_r+0x1da>
 8000bca:	9b03      	ldr	r3, [sp, #12]
 8000bcc:	3307      	adds	r3, #7
 8000bce:	f023 0307 	bic.w	r3, r3, #7
 8000bd2:	3308      	adds	r3, #8
 8000bd4:	9303      	str	r3, [sp, #12]
 8000bd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000bd8:	443b      	add	r3, r7
 8000bda:	9309      	str	r3, [sp, #36]	; 0x24
 8000bdc:	e768      	b.n	8000ab0 <_vfiprintf_r+0x78>
 8000bde:	460c      	mov	r4, r1
 8000be0:	2001      	movs	r0, #1
 8000be2:	fb0c 3202 	mla	r2, ip, r2, r3
 8000be6:	e7a6      	b.n	8000b36 <_vfiprintf_r+0xfe>
 8000be8:	2300      	movs	r3, #0
 8000bea:	f04f 0c0a 	mov.w	ip, #10
 8000bee:	4619      	mov	r1, r3
 8000bf0:	3401      	adds	r4, #1
 8000bf2:	9305      	str	r3, [sp, #20]
 8000bf4:	4620      	mov	r0, r4
 8000bf6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000bfa:	3a30      	subs	r2, #48	; 0x30
 8000bfc:	2a09      	cmp	r2, #9
 8000bfe:	d903      	bls.n	8000c08 <_vfiprintf_r+0x1d0>
 8000c00:	2b00      	cmp	r3, #0
 8000c02:	d0c6      	beq.n	8000b92 <_vfiprintf_r+0x15a>
 8000c04:	9105      	str	r1, [sp, #20]
 8000c06:	e7c4      	b.n	8000b92 <_vfiprintf_r+0x15a>
 8000c08:	4604      	mov	r4, r0
 8000c0a:	2301      	movs	r3, #1
 8000c0c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c10:	e7f0      	b.n	8000bf4 <_vfiprintf_r+0x1bc>
 8000c12:	ab03      	add	r3, sp, #12
 8000c14:	9300      	str	r3, [sp, #0]
 8000c16:	462a      	mov	r2, r5
 8000c18:	4630      	mov	r0, r6
 8000c1a:	4b13      	ldr	r3, [pc, #76]	; (8000c68 <_vfiprintf_r+0x230>)
 8000c1c:	a904      	add	r1, sp, #16
 8000c1e:	f3af 8000 	nop.w
 8000c22:	4607      	mov	r7, r0
 8000c24:	1c78      	adds	r0, r7, #1
 8000c26:	d1d6      	bne.n	8000bd6 <_vfiprintf_r+0x19e>
 8000c28:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c2a:	07d9      	lsls	r1, r3, #31
 8000c2c:	d405      	bmi.n	8000c3a <_vfiprintf_r+0x202>
 8000c2e:	89ab      	ldrh	r3, [r5, #12]
 8000c30:	059a      	lsls	r2, r3, #22
 8000c32:	d402      	bmi.n	8000c3a <_vfiprintf_r+0x202>
 8000c34:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c36:	f7ff fde1 	bl	80007fc <__retarget_lock_release_recursive>
 8000c3a:	89ab      	ldrh	r3, [r5, #12]
 8000c3c:	065b      	lsls	r3, r3, #25
 8000c3e:	f53f af1d 	bmi.w	8000a7c <_vfiprintf_r+0x44>
 8000c42:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c44:	e71c      	b.n	8000a80 <_vfiprintf_r+0x48>
 8000c46:	ab03      	add	r3, sp, #12
 8000c48:	9300      	str	r3, [sp, #0]
 8000c4a:	462a      	mov	r2, r5
 8000c4c:	4630      	mov	r0, r6
 8000c4e:	4b06      	ldr	r3, [pc, #24]	; (8000c68 <_vfiprintf_r+0x230>)
 8000c50:	a904      	add	r1, sp, #16
 8000c52:	f000 f87d 	bl	8000d50 <_printf_i>
 8000c56:	e7e4      	b.n	8000c22 <_vfiprintf_r+0x1ea>
 8000c58:	08001383 	.word	0x08001383
 8000c5c:	08001389 	.word	0x08001389
 8000c60:	0800138d 	.word	0x0800138d
 8000c64:	00000000 	.word	0x00000000
 8000c68:	08000a13 	.word	0x08000a13

08000c6c <_printf_common>:
 8000c6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c70:	4616      	mov	r6, r2
 8000c72:	4699      	mov	r9, r3
 8000c74:	688a      	ldr	r2, [r1, #8]
 8000c76:	690b      	ldr	r3, [r1, #16]
 8000c78:	4607      	mov	r7, r0
 8000c7a:	4293      	cmp	r3, r2
 8000c7c:	bfb8      	it	lt
 8000c7e:	4613      	movlt	r3, r2
 8000c80:	6033      	str	r3, [r6, #0]
 8000c82:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c86:	460c      	mov	r4, r1
 8000c88:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c8c:	b10a      	cbz	r2, 8000c92 <_printf_common+0x26>
 8000c8e:	3301      	adds	r3, #1
 8000c90:	6033      	str	r3, [r6, #0]
 8000c92:	6823      	ldr	r3, [r4, #0]
 8000c94:	0699      	lsls	r1, r3, #26
 8000c96:	bf42      	ittt	mi
 8000c98:	6833      	ldrmi	r3, [r6, #0]
 8000c9a:	3302      	addmi	r3, #2
 8000c9c:	6033      	strmi	r3, [r6, #0]
 8000c9e:	6825      	ldr	r5, [r4, #0]
 8000ca0:	f015 0506 	ands.w	r5, r5, #6
 8000ca4:	d106      	bne.n	8000cb4 <_printf_common+0x48>
 8000ca6:	f104 0a19 	add.w	sl, r4, #25
 8000caa:	68e3      	ldr	r3, [r4, #12]
 8000cac:	6832      	ldr	r2, [r6, #0]
 8000cae:	1a9b      	subs	r3, r3, r2
 8000cb0:	42ab      	cmp	r3, r5
 8000cb2:	dc2b      	bgt.n	8000d0c <_printf_common+0xa0>
 8000cb4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000cb8:	1e13      	subs	r3, r2, #0
 8000cba:	6822      	ldr	r2, [r4, #0]
 8000cbc:	bf18      	it	ne
 8000cbe:	2301      	movne	r3, #1
 8000cc0:	0692      	lsls	r2, r2, #26
 8000cc2:	d430      	bmi.n	8000d26 <_printf_common+0xba>
 8000cc4:	4649      	mov	r1, r9
 8000cc6:	4638      	mov	r0, r7
 8000cc8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000ccc:	47c0      	blx	r8
 8000cce:	3001      	adds	r0, #1
 8000cd0:	d023      	beq.n	8000d1a <_printf_common+0xae>
 8000cd2:	6823      	ldr	r3, [r4, #0]
 8000cd4:	6922      	ldr	r2, [r4, #16]
 8000cd6:	f003 0306 	and.w	r3, r3, #6
 8000cda:	2b04      	cmp	r3, #4
 8000cdc:	bf14      	ite	ne
 8000cde:	2500      	movne	r5, #0
 8000ce0:	6833      	ldreq	r3, [r6, #0]
 8000ce2:	f04f 0600 	mov.w	r6, #0
 8000ce6:	bf08      	it	eq
 8000ce8:	68e5      	ldreq	r5, [r4, #12]
 8000cea:	f104 041a 	add.w	r4, r4, #26
 8000cee:	bf08      	it	eq
 8000cf0:	1aed      	subeq	r5, r5, r3
 8000cf2:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8000cf6:	bf08      	it	eq
 8000cf8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000cfc:	4293      	cmp	r3, r2
 8000cfe:	bfc4      	itt	gt
 8000d00:	1a9b      	subgt	r3, r3, r2
 8000d02:	18ed      	addgt	r5, r5, r3
 8000d04:	42b5      	cmp	r5, r6
 8000d06:	d11a      	bne.n	8000d3e <_printf_common+0xd2>
 8000d08:	2000      	movs	r0, #0
 8000d0a:	e008      	b.n	8000d1e <_printf_common+0xb2>
 8000d0c:	2301      	movs	r3, #1
 8000d0e:	4652      	mov	r2, sl
 8000d10:	4649      	mov	r1, r9
 8000d12:	4638      	mov	r0, r7
 8000d14:	47c0      	blx	r8
 8000d16:	3001      	adds	r0, #1
 8000d18:	d103      	bne.n	8000d22 <_printf_common+0xb6>
 8000d1a:	f04f 30ff 	mov.w	r0, #4294967295
 8000d1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d22:	3501      	adds	r5, #1
 8000d24:	e7c1      	b.n	8000caa <_printf_common+0x3e>
 8000d26:	2030      	movs	r0, #48	; 0x30
 8000d28:	18e1      	adds	r1, r4, r3
 8000d2a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000d2e:	1c5a      	adds	r2, r3, #1
 8000d30:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000d34:	4422      	add	r2, r4
 8000d36:	3302      	adds	r3, #2
 8000d38:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d3c:	e7c2      	b.n	8000cc4 <_printf_common+0x58>
 8000d3e:	2301      	movs	r3, #1
 8000d40:	4622      	mov	r2, r4
 8000d42:	4649      	mov	r1, r9
 8000d44:	4638      	mov	r0, r7
 8000d46:	47c0      	blx	r8
 8000d48:	3001      	adds	r0, #1
 8000d4a:	d0e6      	beq.n	8000d1a <_printf_common+0xae>
 8000d4c:	3601      	adds	r6, #1
 8000d4e:	e7d9      	b.n	8000d04 <_printf_common+0x98>

08000d50 <_printf_i>:
 8000d50:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d54:	7e0f      	ldrb	r7, [r1, #24]
 8000d56:	4691      	mov	r9, r2
 8000d58:	2f78      	cmp	r7, #120	; 0x78
 8000d5a:	4680      	mov	r8, r0
 8000d5c:	460c      	mov	r4, r1
 8000d5e:	469a      	mov	sl, r3
 8000d60:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000d62:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000d66:	d807      	bhi.n	8000d78 <_printf_i+0x28>
 8000d68:	2f62      	cmp	r7, #98	; 0x62
 8000d6a:	d80a      	bhi.n	8000d82 <_printf_i+0x32>
 8000d6c:	2f00      	cmp	r7, #0
 8000d6e:	f000 80d5 	beq.w	8000f1c <_printf_i+0x1cc>
 8000d72:	2f58      	cmp	r7, #88	; 0x58
 8000d74:	f000 80c1 	beq.w	8000efa <_printf_i+0x1aa>
 8000d78:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d7c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d80:	e03a      	b.n	8000df8 <_printf_i+0xa8>
 8000d82:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d86:	2b15      	cmp	r3, #21
 8000d88:	d8f6      	bhi.n	8000d78 <_printf_i+0x28>
 8000d8a:	a101      	add	r1, pc, #4	; (adr r1, 8000d90 <_printf_i+0x40>)
 8000d8c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d90:	08000de9 	.word	0x08000de9
 8000d94:	08000dfd 	.word	0x08000dfd
 8000d98:	08000d79 	.word	0x08000d79
 8000d9c:	08000d79 	.word	0x08000d79
 8000da0:	08000d79 	.word	0x08000d79
 8000da4:	08000d79 	.word	0x08000d79
 8000da8:	08000dfd 	.word	0x08000dfd
 8000dac:	08000d79 	.word	0x08000d79
 8000db0:	08000d79 	.word	0x08000d79
 8000db4:	08000d79 	.word	0x08000d79
 8000db8:	08000d79 	.word	0x08000d79
 8000dbc:	08000f03 	.word	0x08000f03
 8000dc0:	08000e29 	.word	0x08000e29
 8000dc4:	08000ebd 	.word	0x08000ebd
 8000dc8:	08000d79 	.word	0x08000d79
 8000dcc:	08000d79 	.word	0x08000d79
 8000dd0:	08000f25 	.word	0x08000f25
 8000dd4:	08000d79 	.word	0x08000d79
 8000dd8:	08000e29 	.word	0x08000e29
 8000ddc:	08000d79 	.word	0x08000d79
 8000de0:	08000d79 	.word	0x08000d79
 8000de4:	08000ec5 	.word	0x08000ec5
 8000de8:	682b      	ldr	r3, [r5, #0]
 8000dea:	1d1a      	adds	r2, r3, #4
 8000dec:	681b      	ldr	r3, [r3, #0]
 8000dee:	602a      	str	r2, [r5, #0]
 8000df0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000df4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000df8:	2301      	movs	r3, #1
 8000dfa:	e0a0      	b.n	8000f3e <_printf_i+0x1ee>
 8000dfc:	6820      	ldr	r0, [r4, #0]
 8000dfe:	682b      	ldr	r3, [r5, #0]
 8000e00:	0607      	lsls	r7, r0, #24
 8000e02:	f103 0104 	add.w	r1, r3, #4
 8000e06:	6029      	str	r1, [r5, #0]
 8000e08:	d501      	bpl.n	8000e0e <_printf_i+0xbe>
 8000e0a:	681e      	ldr	r6, [r3, #0]
 8000e0c:	e003      	b.n	8000e16 <_printf_i+0xc6>
 8000e0e:	0646      	lsls	r6, r0, #25
 8000e10:	d5fb      	bpl.n	8000e0a <_printf_i+0xba>
 8000e12:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000e16:	2e00      	cmp	r6, #0
 8000e18:	da03      	bge.n	8000e22 <_printf_i+0xd2>
 8000e1a:	232d      	movs	r3, #45	; 0x2d
 8000e1c:	4276      	negs	r6, r6
 8000e1e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e22:	230a      	movs	r3, #10
 8000e24:	4859      	ldr	r0, [pc, #356]	; (8000f8c <_printf_i+0x23c>)
 8000e26:	e012      	b.n	8000e4e <_printf_i+0xfe>
 8000e28:	682b      	ldr	r3, [r5, #0]
 8000e2a:	6820      	ldr	r0, [r4, #0]
 8000e2c:	1d19      	adds	r1, r3, #4
 8000e2e:	6029      	str	r1, [r5, #0]
 8000e30:	0605      	lsls	r5, r0, #24
 8000e32:	d501      	bpl.n	8000e38 <_printf_i+0xe8>
 8000e34:	681e      	ldr	r6, [r3, #0]
 8000e36:	e002      	b.n	8000e3e <_printf_i+0xee>
 8000e38:	0641      	lsls	r1, r0, #25
 8000e3a:	d5fb      	bpl.n	8000e34 <_printf_i+0xe4>
 8000e3c:	881e      	ldrh	r6, [r3, #0]
 8000e3e:	2f6f      	cmp	r7, #111	; 0x6f
 8000e40:	bf0c      	ite	eq
 8000e42:	2308      	moveq	r3, #8
 8000e44:	230a      	movne	r3, #10
 8000e46:	4851      	ldr	r0, [pc, #324]	; (8000f8c <_printf_i+0x23c>)
 8000e48:	2100      	movs	r1, #0
 8000e4a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e4e:	6865      	ldr	r5, [r4, #4]
 8000e50:	2d00      	cmp	r5, #0
 8000e52:	bfa8      	it	ge
 8000e54:	6821      	ldrge	r1, [r4, #0]
 8000e56:	60a5      	str	r5, [r4, #8]
 8000e58:	bfa4      	itt	ge
 8000e5a:	f021 0104 	bicge.w	r1, r1, #4
 8000e5e:	6021      	strge	r1, [r4, #0]
 8000e60:	b90e      	cbnz	r6, 8000e66 <_printf_i+0x116>
 8000e62:	2d00      	cmp	r5, #0
 8000e64:	d04b      	beq.n	8000efe <_printf_i+0x1ae>
 8000e66:	4615      	mov	r5, r2
 8000e68:	fbb6 f1f3 	udiv	r1, r6, r3
 8000e6c:	fb03 6711 	mls	r7, r3, r1, r6
 8000e70:	5dc7      	ldrb	r7, [r0, r7]
 8000e72:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000e76:	4637      	mov	r7, r6
 8000e78:	42bb      	cmp	r3, r7
 8000e7a:	460e      	mov	r6, r1
 8000e7c:	d9f4      	bls.n	8000e68 <_printf_i+0x118>
 8000e7e:	2b08      	cmp	r3, #8
 8000e80:	d10b      	bne.n	8000e9a <_printf_i+0x14a>
 8000e82:	6823      	ldr	r3, [r4, #0]
 8000e84:	07de      	lsls	r6, r3, #31
 8000e86:	d508      	bpl.n	8000e9a <_printf_i+0x14a>
 8000e88:	6923      	ldr	r3, [r4, #16]
 8000e8a:	6861      	ldr	r1, [r4, #4]
 8000e8c:	4299      	cmp	r1, r3
 8000e8e:	bfde      	ittt	le
 8000e90:	2330      	movle	r3, #48	; 0x30
 8000e92:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e96:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000e9a:	1b52      	subs	r2, r2, r5
 8000e9c:	6122      	str	r2, [r4, #16]
 8000e9e:	464b      	mov	r3, r9
 8000ea0:	4621      	mov	r1, r4
 8000ea2:	4640      	mov	r0, r8
 8000ea4:	f8cd a000 	str.w	sl, [sp]
 8000ea8:	aa03      	add	r2, sp, #12
 8000eaa:	f7ff fedf 	bl	8000c6c <_printf_common>
 8000eae:	3001      	adds	r0, #1
 8000eb0:	d14a      	bne.n	8000f48 <_printf_i+0x1f8>
 8000eb2:	f04f 30ff 	mov.w	r0, #4294967295
 8000eb6:	b004      	add	sp, #16
 8000eb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ebc:	6823      	ldr	r3, [r4, #0]
 8000ebe:	f043 0320 	orr.w	r3, r3, #32
 8000ec2:	6023      	str	r3, [r4, #0]
 8000ec4:	2778      	movs	r7, #120	; 0x78
 8000ec6:	4832      	ldr	r0, [pc, #200]	; (8000f90 <_printf_i+0x240>)
 8000ec8:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000ecc:	6823      	ldr	r3, [r4, #0]
 8000ece:	6829      	ldr	r1, [r5, #0]
 8000ed0:	061f      	lsls	r7, r3, #24
 8000ed2:	f851 6b04 	ldr.w	r6, [r1], #4
 8000ed6:	d402      	bmi.n	8000ede <_printf_i+0x18e>
 8000ed8:	065f      	lsls	r7, r3, #25
 8000eda:	bf48      	it	mi
 8000edc:	b2b6      	uxthmi	r6, r6
 8000ede:	07df      	lsls	r7, r3, #31
 8000ee0:	bf48      	it	mi
 8000ee2:	f043 0320 	orrmi.w	r3, r3, #32
 8000ee6:	6029      	str	r1, [r5, #0]
 8000ee8:	bf48      	it	mi
 8000eea:	6023      	strmi	r3, [r4, #0]
 8000eec:	b91e      	cbnz	r6, 8000ef6 <_printf_i+0x1a6>
 8000eee:	6823      	ldr	r3, [r4, #0]
 8000ef0:	f023 0320 	bic.w	r3, r3, #32
 8000ef4:	6023      	str	r3, [r4, #0]
 8000ef6:	2310      	movs	r3, #16
 8000ef8:	e7a6      	b.n	8000e48 <_printf_i+0xf8>
 8000efa:	4824      	ldr	r0, [pc, #144]	; (8000f8c <_printf_i+0x23c>)
 8000efc:	e7e4      	b.n	8000ec8 <_printf_i+0x178>
 8000efe:	4615      	mov	r5, r2
 8000f00:	e7bd      	b.n	8000e7e <_printf_i+0x12e>
 8000f02:	682b      	ldr	r3, [r5, #0]
 8000f04:	6826      	ldr	r6, [r4, #0]
 8000f06:	1d18      	adds	r0, r3, #4
 8000f08:	6961      	ldr	r1, [r4, #20]
 8000f0a:	6028      	str	r0, [r5, #0]
 8000f0c:	0635      	lsls	r5, r6, #24
 8000f0e:	681b      	ldr	r3, [r3, #0]
 8000f10:	d501      	bpl.n	8000f16 <_printf_i+0x1c6>
 8000f12:	6019      	str	r1, [r3, #0]
 8000f14:	e002      	b.n	8000f1c <_printf_i+0x1cc>
 8000f16:	0670      	lsls	r0, r6, #25
 8000f18:	d5fb      	bpl.n	8000f12 <_printf_i+0x1c2>
 8000f1a:	8019      	strh	r1, [r3, #0]
 8000f1c:	2300      	movs	r3, #0
 8000f1e:	4615      	mov	r5, r2
 8000f20:	6123      	str	r3, [r4, #16]
 8000f22:	e7bc      	b.n	8000e9e <_printf_i+0x14e>
 8000f24:	682b      	ldr	r3, [r5, #0]
 8000f26:	2100      	movs	r1, #0
 8000f28:	1d1a      	adds	r2, r3, #4
 8000f2a:	602a      	str	r2, [r5, #0]
 8000f2c:	681d      	ldr	r5, [r3, #0]
 8000f2e:	6862      	ldr	r2, [r4, #4]
 8000f30:	4628      	mov	r0, r5
 8000f32:	f000 f97f 	bl	8001234 <memchr>
 8000f36:	b108      	cbz	r0, 8000f3c <_printf_i+0x1ec>
 8000f38:	1b40      	subs	r0, r0, r5
 8000f3a:	6060      	str	r0, [r4, #4]
 8000f3c:	6863      	ldr	r3, [r4, #4]
 8000f3e:	6123      	str	r3, [r4, #16]
 8000f40:	2300      	movs	r3, #0
 8000f42:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f46:	e7aa      	b.n	8000e9e <_printf_i+0x14e>
 8000f48:	462a      	mov	r2, r5
 8000f4a:	4649      	mov	r1, r9
 8000f4c:	4640      	mov	r0, r8
 8000f4e:	6923      	ldr	r3, [r4, #16]
 8000f50:	47d0      	blx	sl
 8000f52:	3001      	adds	r0, #1
 8000f54:	d0ad      	beq.n	8000eb2 <_printf_i+0x162>
 8000f56:	6823      	ldr	r3, [r4, #0]
 8000f58:	079b      	lsls	r3, r3, #30
 8000f5a:	d413      	bmi.n	8000f84 <_printf_i+0x234>
 8000f5c:	68e0      	ldr	r0, [r4, #12]
 8000f5e:	9b03      	ldr	r3, [sp, #12]
 8000f60:	4298      	cmp	r0, r3
 8000f62:	bfb8      	it	lt
 8000f64:	4618      	movlt	r0, r3
 8000f66:	e7a6      	b.n	8000eb6 <_printf_i+0x166>
 8000f68:	2301      	movs	r3, #1
 8000f6a:	4632      	mov	r2, r6
 8000f6c:	4649      	mov	r1, r9
 8000f6e:	4640      	mov	r0, r8
 8000f70:	47d0      	blx	sl
 8000f72:	3001      	adds	r0, #1
 8000f74:	d09d      	beq.n	8000eb2 <_printf_i+0x162>
 8000f76:	3501      	adds	r5, #1
 8000f78:	68e3      	ldr	r3, [r4, #12]
 8000f7a:	9903      	ldr	r1, [sp, #12]
 8000f7c:	1a5b      	subs	r3, r3, r1
 8000f7e:	42ab      	cmp	r3, r5
 8000f80:	dcf2      	bgt.n	8000f68 <_printf_i+0x218>
 8000f82:	e7eb      	b.n	8000f5c <_printf_i+0x20c>
 8000f84:	2500      	movs	r5, #0
 8000f86:	f104 0619 	add.w	r6, r4, #25
 8000f8a:	e7f5      	b.n	8000f78 <_printf_i+0x228>
 8000f8c:	08001394 	.word	0x08001394
 8000f90:	080013a5 	.word	0x080013a5

08000f94 <__sflush_r>:
 8000f94:	898a      	ldrh	r2, [r1, #12]
 8000f96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f98:	4605      	mov	r5, r0
 8000f9a:	0710      	lsls	r0, r2, #28
 8000f9c:	460c      	mov	r4, r1
 8000f9e:	d457      	bmi.n	8001050 <__sflush_r+0xbc>
 8000fa0:	684b      	ldr	r3, [r1, #4]
 8000fa2:	2b00      	cmp	r3, #0
 8000fa4:	dc04      	bgt.n	8000fb0 <__sflush_r+0x1c>
 8000fa6:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000fa8:	2b00      	cmp	r3, #0
 8000faa:	dc01      	bgt.n	8000fb0 <__sflush_r+0x1c>
 8000fac:	2000      	movs	r0, #0
 8000fae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000fb0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000fb2:	2e00      	cmp	r6, #0
 8000fb4:	d0fa      	beq.n	8000fac <__sflush_r+0x18>
 8000fb6:	2300      	movs	r3, #0
 8000fb8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000fbc:	682f      	ldr	r7, [r5, #0]
 8000fbe:	6a21      	ldr	r1, [r4, #32]
 8000fc0:	602b      	str	r3, [r5, #0]
 8000fc2:	d032      	beq.n	800102a <__sflush_r+0x96>
 8000fc4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000fc6:	89a3      	ldrh	r3, [r4, #12]
 8000fc8:	075a      	lsls	r2, r3, #29
 8000fca:	d505      	bpl.n	8000fd8 <__sflush_r+0x44>
 8000fcc:	6863      	ldr	r3, [r4, #4]
 8000fce:	1ac0      	subs	r0, r0, r3
 8000fd0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000fd2:	b10b      	cbz	r3, 8000fd8 <__sflush_r+0x44>
 8000fd4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000fd6:	1ac0      	subs	r0, r0, r3
 8000fd8:	2300      	movs	r3, #0
 8000fda:	4602      	mov	r2, r0
 8000fdc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000fde:	4628      	mov	r0, r5
 8000fe0:	6a21      	ldr	r1, [r4, #32]
 8000fe2:	47b0      	blx	r6
 8000fe4:	1c43      	adds	r3, r0, #1
 8000fe6:	89a3      	ldrh	r3, [r4, #12]
 8000fe8:	d106      	bne.n	8000ff8 <__sflush_r+0x64>
 8000fea:	6829      	ldr	r1, [r5, #0]
 8000fec:	291d      	cmp	r1, #29
 8000fee:	d82b      	bhi.n	8001048 <__sflush_r+0xb4>
 8000ff0:	4a28      	ldr	r2, [pc, #160]	; (8001094 <__sflush_r+0x100>)
 8000ff2:	410a      	asrs	r2, r1
 8000ff4:	07d6      	lsls	r6, r2, #31
 8000ff6:	d427      	bmi.n	8001048 <__sflush_r+0xb4>
 8000ff8:	2200      	movs	r2, #0
 8000ffa:	6062      	str	r2, [r4, #4]
 8000ffc:	6922      	ldr	r2, [r4, #16]
 8000ffe:	04d9      	lsls	r1, r3, #19
 8001000:	6022      	str	r2, [r4, #0]
 8001002:	d504      	bpl.n	800100e <__sflush_r+0x7a>
 8001004:	1c42      	adds	r2, r0, #1
 8001006:	d101      	bne.n	800100c <__sflush_r+0x78>
 8001008:	682b      	ldr	r3, [r5, #0]
 800100a:	b903      	cbnz	r3, 800100e <__sflush_r+0x7a>
 800100c:	6560      	str	r0, [r4, #84]	; 0x54
 800100e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001010:	602f      	str	r7, [r5, #0]
 8001012:	2900      	cmp	r1, #0
 8001014:	d0ca      	beq.n	8000fac <__sflush_r+0x18>
 8001016:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800101a:	4299      	cmp	r1, r3
 800101c:	d002      	beq.n	8001024 <__sflush_r+0x90>
 800101e:	4628      	mov	r0, r5
 8001020:	f7ff fbee 	bl	8000800 <_free_r>
 8001024:	2000      	movs	r0, #0
 8001026:	6360      	str	r0, [r4, #52]	; 0x34
 8001028:	e7c1      	b.n	8000fae <__sflush_r+0x1a>
 800102a:	2301      	movs	r3, #1
 800102c:	4628      	mov	r0, r5
 800102e:	47b0      	blx	r6
 8001030:	1c41      	adds	r1, r0, #1
 8001032:	d1c8      	bne.n	8000fc6 <__sflush_r+0x32>
 8001034:	682b      	ldr	r3, [r5, #0]
 8001036:	2b00      	cmp	r3, #0
 8001038:	d0c5      	beq.n	8000fc6 <__sflush_r+0x32>
 800103a:	2b1d      	cmp	r3, #29
 800103c:	d001      	beq.n	8001042 <__sflush_r+0xae>
 800103e:	2b16      	cmp	r3, #22
 8001040:	d101      	bne.n	8001046 <__sflush_r+0xb2>
 8001042:	602f      	str	r7, [r5, #0]
 8001044:	e7b2      	b.n	8000fac <__sflush_r+0x18>
 8001046:	89a3      	ldrh	r3, [r4, #12]
 8001048:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800104c:	81a3      	strh	r3, [r4, #12]
 800104e:	e7ae      	b.n	8000fae <__sflush_r+0x1a>
 8001050:	690f      	ldr	r7, [r1, #16]
 8001052:	2f00      	cmp	r7, #0
 8001054:	d0aa      	beq.n	8000fac <__sflush_r+0x18>
 8001056:	0793      	lsls	r3, r2, #30
 8001058:	bf18      	it	ne
 800105a:	2300      	movne	r3, #0
 800105c:	680e      	ldr	r6, [r1, #0]
 800105e:	bf08      	it	eq
 8001060:	694b      	ldreq	r3, [r1, #20]
 8001062:	1bf6      	subs	r6, r6, r7
 8001064:	600f      	str	r7, [r1, #0]
 8001066:	608b      	str	r3, [r1, #8]
 8001068:	2e00      	cmp	r6, #0
 800106a:	dd9f      	ble.n	8000fac <__sflush_r+0x18>
 800106c:	4633      	mov	r3, r6
 800106e:	463a      	mov	r2, r7
 8001070:	4628      	mov	r0, r5
 8001072:	6a21      	ldr	r1, [r4, #32]
 8001074:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8001078:	47e0      	blx	ip
 800107a:	2800      	cmp	r0, #0
 800107c:	dc06      	bgt.n	800108c <__sflush_r+0xf8>
 800107e:	89a3      	ldrh	r3, [r4, #12]
 8001080:	f04f 30ff 	mov.w	r0, #4294967295
 8001084:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001088:	81a3      	strh	r3, [r4, #12]
 800108a:	e790      	b.n	8000fae <__sflush_r+0x1a>
 800108c:	4407      	add	r7, r0
 800108e:	1a36      	subs	r6, r6, r0
 8001090:	e7ea      	b.n	8001068 <__sflush_r+0xd4>
 8001092:	bf00      	nop
 8001094:	dfbffffe 	.word	0xdfbffffe

08001098 <_fflush_r>:
 8001098:	b538      	push	{r3, r4, r5, lr}
 800109a:	690b      	ldr	r3, [r1, #16]
 800109c:	4605      	mov	r5, r0
 800109e:	460c      	mov	r4, r1
 80010a0:	b913      	cbnz	r3, 80010a8 <_fflush_r+0x10>
 80010a2:	2500      	movs	r5, #0
 80010a4:	4628      	mov	r0, r5
 80010a6:	bd38      	pop	{r3, r4, r5, pc}
 80010a8:	b118      	cbz	r0, 80010b2 <_fflush_r+0x1a>
 80010aa:	6a03      	ldr	r3, [r0, #32]
 80010ac:	b90b      	cbnz	r3, 80010b2 <_fflush_r+0x1a>
 80010ae:	f7ff fa9f 	bl	80005f0 <__sinit>
 80010b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	d0f3      	beq.n	80010a2 <_fflush_r+0xa>
 80010ba:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80010bc:	07d0      	lsls	r0, r2, #31
 80010be:	d404      	bmi.n	80010ca <_fflush_r+0x32>
 80010c0:	0599      	lsls	r1, r3, #22
 80010c2:	d402      	bmi.n	80010ca <_fflush_r+0x32>
 80010c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010c6:	f7ff fb98 	bl	80007fa <__retarget_lock_acquire_recursive>
 80010ca:	4628      	mov	r0, r5
 80010cc:	4621      	mov	r1, r4
 80010ce:	f7ff ff61 	bl	8000f94 <__sflush_r>
 80010d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80010d4:	4605      	mov	r5, r0
 80010d6:	07da      	lsls	r2, r3, #31
 80010d8:	d4e4      	bmi.n	80010a4 <_fflush_r+0xc>
 80010da:	89a3      	ldrh	r3, [r4, #12]
 80010dc:	059b      	lsls	r3, r3, #22
 80010de:	d4e1      	bmi.n	80010a4 <_fflush_r+0xc>
 80010e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010e2:	f7ff fb8b 	bl	80007fc <__retarget_lock_release_recursive>
 80010e6:	e7dd      	b.n	80010a4 <_fflush_r+0xc>

080010e8 <__swbuf_r>:
 80010e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010ea:	460e      	mov	r6, r1
 80010ec:	4614      	mov	r4, r2
 80010ee:	4605      	mov	r5, r0
 80010f0:	b118      	cbz	r0, 80010fa <__swbuf_r+0x12>
 80010f2:	6a03      	ldr	r3, [r0, #32]
 80010f4:	b90b      	cbnz	r3, 80010fa <__swbuf_r+0x12>
 80010f6:	f7ff fa7b 	bl	80005f0 <__sinit>
 80010fa:	69a3      	ldr	r3, [r4, #24]
 80010fc:	60a3      	str	r3, [r4, #8]
 80010fe:	89a3      	ldrh	r3, [r4, #12]
 8001100:	071a      	lsls	r2, r3, #28
 8001102:	d525      	bpl.n	8001150 <__swbuf_r+0x68>
 8001104:	6923      	ldr	r3, [r4, #16]
 8001106:	b31b      	cbz	r3, 8001150 <__swbuf_r+0x68>
 8001108:	6823      	ldr	r3, [r4, #0]
 800110a:	6922      	ldr	r2, [r4, #16]
 800110c:	b2f6      	uxtb	r6, r6
 800110e:	1a98      	subs	r0, r3, r2
 8001110:	6963      	ldr	r3, [r4, #20]
 8001112:	4637      	mov	r7, r6
 8001114:	4283      	cmp	r3, r0
 8001116:	dc04      	bgt.n	8001122 <__swbuf_r+0x3a>
 8001118:	4621      	mov	r1, r4
 800111a:	4628      	mov	r0, r5
 800111c:	f7ff ffbc 	bl	8001098 <_fflush_r>
 8001120:	b9e0      	cbnz	r0, 800115c <__swbuf_r+0x74>
 8001122:	68a3      	ldr	r3, [r4, #8]
 8001124:	3b01      	subs	r3, #1
 8001126:	60a3      	str	r3, [r4, #8]
 8001128:	6823      	ldr	r3, [r4, #0]
 800112a:	1c5a      	adds	r2, r3, #1
 800112c:	6022      	str	r2, [r4, #0]
 800112e:	701e      	strb	r6, [r3, #0]
 8001130:	6962      	ldr	r2, [r4, #20]
 8001132:	1c43      	adds	r3, r0, #1
 8001134:	429a      	cmp	r2, r3
 8001136:	d004      	beq.n	8001142 <__swbuf_r+0x5a>
 8001138:	89a3      	ldrh	r3, [r4, #12]
 800113a:	07db      	lsls	r3, r3, #31
 800113c:	d506      	bpl.n	800114c <__swbuf_r+0x64>
 800113e:	2e0a      	cmp	r6, #10
 8001140:	d104      	bne.n	800114c <__swbuf_r+0x64>
 8001142:	4621      	mov	r1, r4
 8001144:	4628      	mov	r0, r5
 8001146:	f7ff ffa7 	bl	8001098 <_fflush_r>
 800114a:	b938      	cbnz	r0, 800115c <__swbuf_r+0x74>
 800114c:	4638      	mov	r0, r7
 800114e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001150:	4621      	mov	r1, r4
 8001152:	4628      	mov	r0, r5
 8001154:	f000 f806 	bl	8001164 <__swsetup_r>
 8001158:	2800      	cmp	r0, #0
 800115a:	d0d5      	beq.n	8001108 <__swbuf_r+0x20>
 800115c:	f04f 37ff 	mov.w	r7, #4294967295
 8001160:	e7f4      	b.n	800114c <__swbuf_r+0x64>
	...

08001164 <__swsetup_r>:
 8001164:	b538      	push	{r3, r4, r5, lr}
 8001166:	4b2a      	ldr	r3, [pc, #168]	; (8001210 <__swsetup_r+0xac>)
 8001168:	4605      	mov	r5, r0
 800116a:	6818      	ldr	r0, [r3, #0]
 800116c:	460c      	mov	r4, r1
 800116e:	b118      	cbz	r0, 8001178 <__swsetup_r+0x14>
 8001170:	6a03      	ldr	r3, [r0, #32]
 8001172:	b90b      	cbnz	r3, 8001178 <__swsetup_r+0x14>
 8001174:	f7ff fa3c 	bl	80005f0 <__sinit>
 8001178:	89a3      	ldrh	r3, [r4, #12]
 800117a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800117e:	0718      	lsls	r0, r3, #28
 8001180:	d422      	bmi.n	80011c8 <__swsetup_r+0x64>
 8001182:	06d9      	lsls	r1, r3, #27
 8001184:	d407      	bmi.n	8001196 <__swsetup_r+0x32>
 8001186:	2309      	movs	r3, #9
 8001188:	602b      	str	r3, [r5, #0]
 800118a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800118e:	f04f 30ff 	mov.w	r0, #4294967295
 8001192:	81a3      	strh	r3, [r4, #12]
 8001194:	e034      	b.n	8001200 <__swsetup_r+0x9c>
 8001196:	0758      	lsls	r0, r3, #29
 8001198:	d512      	bpl.n	80011c0 <__swsetup_r+0x5c>
 800119a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800119c:	b141      	cbz	r1, 80011b0 <__swsetup_r+0x4c>
 800119e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011a2:	4299      	cmp	r1, r3
 80011a4:	d002      	beq.n	80011ac <__swsetup_r+0x48>
 80011a6:	4628      	mov	r0, r5
 80011a8:	f7ff fb2a 	bl	8000800 <_free_r>
 80011ac:	2300      	movs	r3, #0
 80011ae:	6363      	str	r3, [r4, #52]	; 0x34
 80011b0:	89a3      	ldrh	r3, [r4, #12]
 80011b2:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80011b6:	81a3      	strh	r3, [r4, #12]
 80011b8:	2300      	movs	r3, #0
 80011ba:	6063      	str	r3, [r4, #4]
 80011bc:	6923      	ldr	r3, [r4, #16]
 80011be:	6023      	str	r3, [r4, #0]
 80011c0:	89a3      	ldrh	r3, [r4, #12]
 80011c2:	f043 0308 	orr.w	r3, r3, #8
 80011c6:	81a3      	strh	r3, [r4, #12]
 80011c8:	6923      	ldr	r3, [r4, #16]
 80011ca:	b94b      	cbnz	r3, 80011e0 <__swsetup_r+0x7c>
 80011cc:	89a3      	ldrh	r3, [r4, #12]
 80011ce:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80011d2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80011d6:	d003      	beq.n	80011e0 <__swsetup_r+0x7c>
 80011d8:	4621      	mov	r1, r4
 80011da:	4628      	mov	r0, r5
 80011dc:	f000 f85d 	bl	800129a <__smakebuf_r>
 80011e0:	89a0      	ldrh	r0, [r4, #12]
 80011e2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011e6:	f010 0301 	ands.w	r3, r0, #1
 80011ea:	d00a      	beq.n	8001202 <__swsetup_r+0x9e>
 80011ec:	2300      	movs	r3, #0
 80011ee:	60a3      	str	r3, [r4, #8]
 80011f0:	6963      	ldr	r3, [r4, #20]
 80011f2:	425b      	negs	r3, r3
 80011f4:	61a3      	str	r3, [r4, #24]
 80011f6:	6923      	ldr	r3, [r4, #16]
 80011f8:	b943      	cbnz	r3, 800120c <__swsetup_r+0xa8>
 80011fa:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80011fe:	d1c4      	bne.n	800118a <__swsetup_r+0x26>
 8001200:	bd38      	pop	{r3, r4, r5, pc}
 8001202:	0781      	lsls	r1, r0, #30
 8001204:	bf58      	it	pl
 8001206:	6963      	ldrpl	r3, [r4, #20]
 8001208:	60a3      	str	r3, [r4, #8]
 800120a:	e7f4      	b.n	80011f6 <__swsetup_r+0x92>
 800120c:	2000      	movs	r0, #0
 800120e:	e7f7      	b.n	8001200 <__swsetup_r+0x9c>
 8001210:	20000058 	.word	0x20000058

08001214 <_sbrk_r>:
 8001214:	b538      	push	{r3, r4, r5, lr}
 8001216:	2300      	movs	r3, #0
 8001218:	4d05      	ldr	r5, [pc, #20]	; (8001230 <_sbrk_r+0x1c>)
 800121a:	4604      	mov	r4, r0
 800121c:	4608      	mov	r0, r1
 800121e:	602b      	str	r3, [r5, #0]
 8001220:	f7ff f852 	bl	80002c8 <_sbrk>
 8001224:	1c43      	adds	r3, r0, #1
 8001226:	d102      	bne.n	800122e <_sbrk_r+0x1a>
 8001228:	682b      	ldr	r3, [r5, #0]
 800122a:	b103      	cbz	r3, 800122e <_sbrk_r+0x1a>
 800122c:	6023      	str	r3, [r4, #0]
 800122e:	bd38      	pop	{r3, r4, r5, pc}
 8001230:	200001b8 	.word	0x200001b8

08001234 <memchr>:
 8001234:	4603      	mov	r3, r0
 8001236:	b510      	push	{r4, lr}
 8001238:	b2c9      	uxtb	r1, r1
 800123a:	4402      	add	r2, r0
 800123c:	4293      	cmp	r3, r2
 800123e:	4618      	mov	r0, r3
 8001240:	d101      	bne.n	8001246 <memchr+0x12>
 8001242:	2000      	movs	r0, #0
 8001244:	e003      	b.n	800124e <memchr+0x1a>
 8001246:	7804      	ldrb	r4, [r0, #0]
 8001248:	3301      	adds	r3, #1
 800124a:	428c      	cmp	r4, r1
 800124c:	d1f6      	bne.n	800123c <memchr+0x8>
 800124e:	bd10      	pop	{r4, pc}

08001250 <__swhatbuf_r>:
 8001250:	b570      	push	{r4, r5, r6, lr}
 8001252:	460c      	mov	r4, r1
 8001254:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001258:	4615      	mov	r5, r2
 800125a:	2900      	cmp	r1, #0
 800125c:	461e      	mov	r6, r3
 800125e:	b096      	sub	sp, #88	; 0x58
 8001260:	da0c      	bge.n	800127c <__swhatbuf_r+0x2c>
 8001262:	89a3      	ldrh	r3, [r4, #12]
 8001264:	2100      	movs	r1, #0
 8001266:	f013 0f80 	tst.w	r3, #128	; 0x80
 800126a:	bf0c      	ite	eq
 800126c:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8001270:	2340      	movne	r3, #64	; 0x40
 8001272:	2000      	movs	r0, #0
 8001274:	6031      	str	r1, [r6, #0]
 8001276:	602b      	str	r3, [r5, #0]
 8001278:	b016      	add	sp, #88	; 0x58
 800127a:	bd70      	pop	{r4, r5, r6, pc}
 800127c:	466a      	mov	r2, sp
 800127e:	f000 f849 	bl	8001314 <_fstat_r>
 8001282:	2800      	cmp	r0, #0
 8001284:	dbed      	blt.n	8001262 <__swhatbuf_r+0x12>
 8001286:	9901      	ldr	r1, [sp, #4]
 8001288:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800128c:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8001290:	4259      	negs	r1, r3
 8001292:	4159      	adcs	r1, r3
 8001294:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001298:	e7eb      	b.n	8001272 <__swhatbuf_r+0x22>

0800129a <__smakebuf_r>:
 800129a:	898b      	ldrh	r3, [r1, #12]
 800129c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800129e:	079d      	lsls	r5, r3, #30
 80012a0:	4606      	mov	r6, r0
 80012a2:	460c      	mov	r4, r1
 80012a4:	d507      	bpl.n	80012b6 <__smakebuf_r+0x1c>
 80012a6:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80012aa:	6023      	str	r3, [r4, #0]
 80012ac:	6123      	str	r3, [r4, #16]
 80012ae:	2301      	movs	r3, #1
 80012b0:	6163      	str	r3, [r4, #20]
 80012b2:	b002      	add	sp, #8
 80012b4:	bd70      	pop	{r4, r5, r6, pc}
 80012b6:	466a      	mov	r2, sp
 80012b8:	ab01      	add	r3, sp, #4
 80012ba:	f7ff ffc9 	bl	8001250 <__swhatbuf_r>
 80012be:	9900      	ldr	r1, [sp, #0]
 80012c0:	4605      	mov	r5, r0
 80012c2:	4630      	mov	r0, r6
 80012c4:	f7ff fb04 	bl	80008d0 <_malloc_r>
 80012c8:	b948      	cbnz	r0, 80012de <__smakebuf_r+0x44>
 80012ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012ce:	059a      	lsls	r2, r3, #22
 80012d0:	d4ef      	bmi.n	80012b2 <__smakebuf_r+0x18>
 80012d2:	f023 0303 	bic.w	r3, r3, #3
 80012d6:	f043 0302 	orr.w	r3, r3, #2
 80012da:	81a3      	strh	r3, [r4, #12]
 80012dc:	e7e3      	b.n	80012a6 <__smakebuf_r+0xc>
 80012de:	89a3      	ldrh	r3, [r4, #12]
 80012e0:	6020      	str	r0, [r4, #0]
 80012e2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012e6:	81a3      	strh	r3, [r4, #12]
 80012e8:	9b00      	ldr	r3, [sp, #0]
 80012ea:	6120      	str	r0, [r4, #16]
 80012ec:	6163      	str	r3, [r4, #20]
 80012ee:	9b01      	ldr	r3, [sp, #4]
 80012f0:	b15b      	cbz	r3, 800130a <__smakebuf_r+0x70>
 80012f2:	4630      	mov	r0, r6
 80012f4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012f8:	f000 f81e 	bl	8001338 <_isatty_r>
 80012fc:	b128      	cbz	r0, 800130a <__smakebuf_r+0x70>
 80012fe:	89a3      	ldrh	r3, [r4, #12]
 8001300:	f023 0303 	bic.w	r3, r3, #3
 8001304:	f043 0301 	orr.w	r3, r3, #1
 8001308:	81a3      	strh	r3, [r4, #12]
 800130a:	89a3      	ldrh	r3, [r4, #12]
 800130c:	431d      	orrs	r5, r3
 800130e:	81a5      	strh	r5, [r4, #12]
 8001310:	e7cf      	b.n	80012b2 <__smakebuf_r+0x18>
	...

08001314 <_fstat_r>:
 8001314:	b538      	push	{r3, r4, r5, lr}
 8001316:	2300      	movs	r3, #0
 8001318:	4d06      	ldr	r5, [pc, #24]	; (8001334 <_fstat_r+0x20>)
 800131a:	4604      	mov	r4, r0
 800131c:	4608      	mov	r0, r1
 800131e:	4611      	mov	r1, r2
 8001320:	602b      	str	r3, [r5, #0]
 8001322:	f7fe ffab 	bl	800027c <_fstat>
 8001326:	1c43      	adds	r3, r0, #1
 8001328:	d102      	bne.n	8001330 <_fstat_r+0x1c>
 800132a:	682b      	ldr	r3, [r5, #0]
 800132c:	b103      	cbz	r3, 8001330 <_fstat_r+0x1c>
 800132e:	6023      	str	r3, [r4, #0]
 8001330:	bd38      	pop	{r3, r4, r5, pc}
 8001332:	bf00      	nop
 8001334:	200001b8 	.word	0x200001b8

08001338 <_isatty_r>:
 8001338:	b538      	push	{r3, r4, r5, lr}
 800133a:	2300      	movs	r3, #0
 800133c:	4d05      	ldr	r5, [pc, #20]	; (8001354 <_isatty_r+0x1c>)
 800133e:	4604      	mov	r4, r0
 8001340:	4608      	mov	r0, r1
 8001342:	602b      	str	r3, [r5, #0]
 8001344:	f7fe ffa9 	bl	800029a <_isatty>
 8001348:	1c43      	adds	r3, r0, #1
 800134a:	d102      	bne.n	8001352 <_isatty_r+0x1a>
 800134c:	682b      	ldr	r3, [r5, #0]
 800134e:	b103      	cbz	r3, 8001352 <_isatty_r+0x1a>
 8001350:	6023      	str	r3, [r4, #0]
 8001352:	bd38      	pop	{r3, r4, r5, pc}
 8001354:	200001b8 	.word	0x200001b8

08001358 <_init>:
 8001358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800135a:	bf00      	nop
 800135c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800135e:	bc08      	pop	{r3}
 8001360:	469e      	mov	lr, r3
 8001362:	4770      	bx	lr

08001364 <_fini>:
 8001364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001366:	bf00      	nop
 8001368:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800136a:	bc08      	pop	{r3}
 800136c:	469e      	mov	lr, r3
 800136e:	4770      	bx	lr
