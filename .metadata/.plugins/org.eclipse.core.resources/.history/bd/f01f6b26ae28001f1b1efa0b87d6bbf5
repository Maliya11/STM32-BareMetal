#include "stm32f1xx.h"


#define GPIOA_EN           (1U<<2)
#define UART2_EN           (1U<<13)

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate)
static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)


int main(void)
{


	while(1)
	{

	}
}

void uart1_tx_init(void)
{
	/*******Configure usart gpio pins*********/
	/*Enable clock access to gpioa*/
	RCC->APB2ENR |= GPIOA_EN;

	/*Set PA9 to alternate function mode*/
	GPIOA->CRH |= (1U<<4);
	GPIOA->CRH |= (1U<<5);
	GPIOA->CRH &= ~(1U<<6);
	GPIOA->CRH |= (1U<<7);

	/*Set PA2 type to UART_TX*/
	AFIO->MAPR &= ~(1U<<2);

	/**********Configure uart module**************/
	/*Enable clock access to uart1*/
	RCC->APB2ENR |= UART2_EN;

	/*configure baudrate*/


	/*Configure transfer direction*/


	/*Enable uart module*/
}

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate)
{
	USARTx->BRR = compute_uart_bd(PeriphClk, BaudRate);
}

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
}
