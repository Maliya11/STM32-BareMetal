
6_uart_printf.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000119c  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000044  080012cc  080012cc  000112cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001310  08001310  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001310  08001310  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001310  08001310  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001310  08001310  00011310  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001314  08001314  00011314  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001318  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001374  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001374  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020085  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000bbb  00000000  00000000  000200c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000416  00000000  00000000  00020c83  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000138  00000000  00000000  000210a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000d7  00000000  00000000  000211d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00011b03  00000000  00000000  000212af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000015ee  00000000  00000000  00032db2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00059cce  00000000  00000000  000343a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000bbc  00000000  00000000  0008e070  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  0008ec2c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	2000005c 	.word	0x2000005c
 800014c:	00000000 	.word	0x00000000
 8000150:	080012b4 	.word	0x080012b4

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000060 	.word	0x20000060
 800016c:	080012b4 	.word	0x080012b4

08000170 <__io_putchar>:

void uart1_write(int ch);
void uart1_tx_init(void);

int __io_putchar(int ch)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	b082      	sub	sp, #8
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
	uart1_write(ch);
 8000178:	6878      	ldr	r0, [r7, #4]
 800017a:	f000 f857 	bl	800022c <uart1_write>
	return ch;
 800017e:	687b      	ldr	r3, [r7, #4]
}
 8000180:	4618      	mov	r0, r3
 8000182:	3708      	adds	r7, #8
 8000184:	46bd      	mov	sp, r7
 8000186:	bd80      	pop	{r7, pc}

08000188 <main>:

int main(void)
{
 8000188:	b580      	push	{r7, lr}
 800018a:	af00      	add	r7, sp, #0

	uart1_tx_init();
 800018c:	f000 f806 	bl	800019c <uart1_tx_init>

	while(1)
	{
		//uart1_write('Y');
		printf("Hello World...\n\r");
 8000190:	4801      	ldr	r0, [pc, #4]	; (8000198 <main+0x10>)
 8000192:	f000 fa11 	bl	80005b8 <iprintf>
 8000196:	e7fb      	b.n	8000190 <main+0x8>
 8000198:	080012cc 	.word	0x080012cc

0800019c <uart1_tx_init>:
}



void uart1_tx_init(void)
{
 800019c:	b580      	push	{r7, lr}
 800019e:	af00      	add	r7, sp, #0
	/*******Configure usart gpio pins*********/
	/*Enable clock access to gpioa*/
	RCC->APB2ENR |= GPIOA_EN;
 80001a0:	4b1d      	ldr	r3, [pc, #116]	; (8000218 <uart1_tx_init+0x7c>)
 80001a2:	699b      	ldr	r3, [r3, #24]
 80001a4:	4a1c      	ldr	r2, [pc, #112]	; (8000218 <uart1_tx_init+0x7c>)
 80001a6:	f043 0304 	orr.w	r3, r3, #4
 80001aa:	6193      	str	r3, [r2, #24]

	/*Set PA9 to alternate function mode*/
	GPIOA->CRH |= (1U<<4);
 80001ac:	4b1b      	ldr	r3, [pc, #108]	; (800021c <uart1_tx_init+0x80>)
 80001ae:	685b      	ldr	r3, [r3, #4]
 80001b0:	4a1a      	ldr	r2, [pc, #104]	; (800021c <uart1_tx_init+0x80>)
 80001b2:	f043 0310 	orr.w	r3, r3, #16
 80001b6:	6053      	str	r3, [r2, #4]
	GPIOA->CRH |= (1U<<5);
 80001b8:	4b18      	ldr	r3, [pc, #96]	; (800021c <uart1_tx_init+0x80>)
 80001ba:	685b      	ldr	r3, [r3, #4]
 80001bc:	4a17      	ldr	r2, [pc, #92]	; (800021c <uart1_tx_init+0x80>)
 80001be:	f043 0320 	orr.w	r3, r3, #32
 80001c2:	6053      	str	r3, [r2, #4]
	GPIOA->CRH &= ~(1U<<6);
 80001c4:	4b15      	ldr	r3, [pc, #84]	; (800021c <uart1_tx_init+0x80>)
 80001c6:	685b      	ldr	r3, [r3, #4]
 80001c8:	4a14      	ldr	r2, [pc, #80]	; (800021c <uart1_tx_init+0x80>)
 80001ca:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80001ce:	6053      	str	r3, [r2, #4]
	GPIOA->CRH |= (1U<<7);
 80001d0:	4b12      	ldr	r3, [pc, #72]	; (800021c <uart1_tx_init+0x80>)
 80001d2:	685b      	ldr	r3, [r3, #4]
 80001d4:	4a11      	ldr	r2, [pc, #68]	; (800021c <uart1_tx_init+0x80>)
 80001d6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80001da:	6053      	str	r3, [r2, #4]

	/*Set PA2 type to UART_TX*/
	AFIO->MAPR &= ~(1U<<2);
 80001dc:	4b10      	ldr	r3, [pc, #64]	; (8000220 <uart1_tx_init+0x84>)
 80001de:	685b      	ldr	r3, [r3, #4]
 80001e0:	4a0f      	ldr	r2, [pc, #60]	; (8000220 <uart1_tx_init+0x84>)
 80001e2:	f023 0304 	bic.w	r3, r3, #4
 80001e6:	6053      	str	r3, [r2, #4]

	/**********Configure uart module**************/
	/*Enable clock access to uart1*/
	RCC->APB2ENR |= UART2_EN;
 80001e8:	4b0b      	ldr	r3, [pc, #44]	; (8000218 <uart1_tx_init+0x7c>)
 80001ea:	699b      	ldr	r3, [r3, #24]
 80001ec:	4a0a      	ldr	r2, [pc, #40]	; (8000218 <uart1_tx_init+0x7c>)
 80001ee:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80001f2:	6193      	str	r3, [r2, #24]

	/*configure baudrate*/
	uart_set_baudrate(USART1,APB2_CLK,UART_BAUDRATE);
 80001f4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80001f8:	490a      	ldr	r1, [pc, #40]	; (8000224 <uart1_tx_init+0x88>)
 80001fa:	480b      	ldr	r0, [pc, #44]	; (8000228 <uart1_tx_init+0x8c>)
 80001fc:	f000 f82c 	bl	8000258 <uart_set_baudrate>

	/*Configure transfer direction*/
	USART1->CR1 = CR1_TE;  //SETTING THE VALUE
 8000200:	4b09      	ldr	r3, [pc, #36]	; (8000228 <uart1_tx_init+0x8c>)
 8000202:	2208      	movs	r2, #8
 8000204:	60da      	str	r2, [r3, #12]
	//TO ERASE THE UART REGISTER

	/*Enable uart module*/
	USART1->CR1 |= CR1_UE;
 8000206:	4b08      	ldr	r3, [pc, #32]	; (8000228 <uart1_tx_init+0x8c>)
 8000208:	68db      	ldr	r3, [r3, #12]
 800020a:	4a07      	ldr	r2, [pc, #28]	; (8000228 <uart1_tx_init+0x8c>)
 800020c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000210:	60d3      	str	r3, [r2, #12]
}
 8000212:	bf00      	nop
 8000214:	bd80      	pop	{r7, pc}
 8000216:	bf00      	nop
 8000218:	40021000 	.word	0x40021000
 800021c:	40010800 	.word	0x40010800
 8000220:	40010000 	.word	0x40010000
 8000224:	00f42400 	.word	0x00f42400
 8000228:	40013800 	.word	0x40013800

0800022c <uart1_write>:


void uart1_write(int ch)
{
 800022c:	b480      	push	{r7}
 800022e:	b083      	sub	sp, #12
 8000230:	af00      	add	r7, sp, #0
 8000232:	6078      	str	r0, [r7, #4]
	/*Make sure transmit data register is empty*/
	while(!(USART1->SR & SR_TXE)){}
 8000234:	bf00      	nop
 8000236:	4b07      	ldr	r3, [pc, #28]	; (8000254 <uart1_write+0x28>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800023e:	2b00      	cmp	r3, #0
 8000240:	d0f9      	beq.n	8000236 <uart1_write+0xa>

	/*Write to transmit data register*/
	USART1->DR = (ch & 0xFF); //to transmit 8 bit
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	4a03      	ldr	r2, [pc, #12]	; (8000254 <uart1_write+0x28>)
 8000246:	b2db      	uxtb	r3, r3
 8000248:	6053      	str	r3, [r2, #4]

}
 800024a:	bf00      	nop
 800024c:	370c      	adds	r7, #12
 800024e:	46bd      	mov	sp, r7
 8000250:	bc80      	pop	{r7}
 8000252:	4770      	bx	lr
 8000254:	40013800 	.word	0x40013800

08000258 <uart_set_baudrate>:

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate)
{
 8000258:	b580      	push	{r7, lr}
 800025a:	b084      	sub	sp, #16
 800025c:	af00      	add	r7, sp, #0
 800025e:	60f8      	str	r0, [r7, #12]
 8000260:	60b9      	str	r1, [r7, #8]
 8000262:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd(PeriphClk, BaudRate);
 8000264:	6879      	ldr	r1, [r7, #4]
 8000266:	68b8      	ldr	r0, [r7, #8]
 8000268:	f000 f808 	bl	800027c <compute_uart_bd>
 800026c:	4603      	mov	r3, r0
 800026e:	461a      	mov	r2, r3
 8000270:	68fb      	ldr	r3, [r7, #12]
 8000272:	609a      	str	r2, [r3, #8]
}
 8000274:	bf00      	nop
 8000276:	3710      	adds	r7, #16
 8000278:	46bd      	mov	sp, r7
 800027a:	bd80      	pop	{r7, pc}

0800027c <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 800027c:	b480      	push	{r7}
 800027e:	b083      	sub	sp, #12
 8000280:	af00      	add	r7, sp, #0
 8000282:	6078      	str	r0, [r7, #4]
 8000284:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 8000286:	683b      	ldr	r3, [r7, #0]
 8000288:	085a      	lsrs	r2, r3, #1
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	441a      	add	r2, r3
 800028e:	683b      	ldr	r3, [r7, #0]
 8000290:	fbb2 f3f3 	udiv	r3, r2, r3
 8000294:	b29b      	uxth	r3, r3
}
 8000296:	4618      	mov	r0, r3
 8000298:	370c      	adds	r7, #12
 800029a:	46bd      	mov	sp, r7
 800029c:	bc80      	pop	{r7}
 800029e:	4770      	bx	lr

080002a0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b086      	sub	sp, #24
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	60f8      	str	r0, [r7, #12]
 80002a8:	60b9      	str	r1, [r7, #8]
 80002aa:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002ac:	2300      	movs	r3, #0
 80002ae:	617b      	str	r3, [r7, #20]
 80002b0:	e00a      	b.n	80002c8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002b2:	f3af 8000 	nop.w
 80002b6:	4601      	mov	r1, r0
 80002b8:	68bb      	ldr	r3, [r7, #8]
 80002ba:	1c5a      	adds	r2, r3, #1
 80002bc:	60ba      	str	r2, [r7, #8]
 80002be:	b2ca      	uxtb	r2, r1
 80002c0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002c2:	697b      	ldr	r3, [r7, #20]
 80002c4:	3301      	adds	r3, #1
 80002c6:	617b      	str	r3, [r7, #20]
 80002c8:	697a      	ldr	r2, [r7, #20]
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	429a      	cmp	r2, r3
 80002ce:	dbf0      	blt.n	80002b2 <_read+0x12>
  }

  return len;
 80002d0:	687b      	ldr	r3, [r7, #4]
}
 80002d2:	4618      	mov	r0, r3
 80002d4:	3718      	adds	r7, #24
 80002d6:	46bd      	mov	sp, r7
 80002d8:	bd80      	pop	{r7, pc}

080002da <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002da:	b580      	push	{r7, lr}
 80002dc:	b086      	sub	sp, #24
 80002de:	af00      	add	r7, sp, #0
 80002e0:	60f8      	str	r0, [r7, #12]
 80002e2:	60b9      	str	r1, [r7, #8]
 80002e4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e6:	2300      	movs	r3, #0
 80002e8:	617b      	str	r3, [r7, #20]
 80002ea:	e009      	b.n	8000300 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80002ec:	68bb      	ldr	r3, [r7, #8]
 80002ee:	1c5a      	adds	r2, r3, #1
 80002f0:	60ba      	str	r2, [r7, #8]
 80002f2:	781b      	ldrb	r3, [r3, #0]
 80002f4:	4618      	mov	r0, r3
 80002f6:	f7ff ff3b 	bl	8000170 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002fa:	697b      	ldr	r3, [r7, #20]
 80002fc:	3301      	adds	r3, #1
 80002fe:	617b      	str	r3, [r7, #20]
 8000300:	697a      	ldr	r2, [r7, #20]
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	429a      	cmp	r2, r3
 8000306:	dbf1      	blt.n	80002ec <_write+0x12>
  }
  return len;
 8000308:	687b      	ldr	r3, [r7, #4]
}
 800030a:	4618      	mov	r0, r3
 800030c:	3718      	adds	r7, #24
 800030e:	46bd      	mov	sp, r7
 8000310:	bd80      	pop	{r7, pc}

08000312 <_close>:

int _close(int file)
{
 8000312:	b480      	push	{r7}
 8000314:	b083      	sub	sp, #12
 8000316:	af00      	add	r7, sp, #0
 8000318:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800031a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800031e:	4618      	mov	r0, r3
 8000320:	370c      	adds	r7, #12
 8000322:	46bd      	mov	sp, r7
 8000324:	bc80      	pop	{r7}
 8000326:	4770      	bx	lr

08000328 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000328:	b480      	push	{r7}
 800032a:	b083      	sub	sp, #12
 800032c:	af00      	add	r7, sp, #0
 800032e:	6078      	str	r0, [r7, #4]
 8000330:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000332:	683b      	ldr	r3, [r7, #0]
 8000334:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000338:	605a      	str	r2, [r3, #4]
  return 0;
 800033a:	2300      	movs	r3, #0
}
 800033c:	4618      	mov	r0, r3
 800033e:	370c      	adds	r7, #12
 8000340:	46bd      	mov	sp, r7
 8000342:	bc80      	pop	{r7}
 8000344:	4770      	bx	lr

08000346 <_isatty>:

int _isatty(int file)
{
 8000346:	b480      	push	{r7}
 8000348:	b083      	sub	sp, #12
 800034a:	af00      	add	r7, sp, #0
 800034c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800034e:	2301      	movs	r3, #1
}
 8000350:	4618      	mov	r0, r3
 8000352:	370c      	adds	r7, #12
 8000354:	46bd      	mov	sp, r7
 8000356:	bc80      	pop	{r7}
 8000358:	4770      	bx	lr

0800035a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800035a:	b480      	push	{r7}
 800035c:	b085      	sub	sp, #20
 800035e:	af00      	add	r7, sp, #0
 8000360:	60f8      	str	r0, [r7, #12]
 8000362:	60b9      	str	r1, [r7, #8]
 8000364:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000366:	2300      	movs	r3, #0
}
 8000368:	4618      	mov	r0, r3
 800036a:	3714      	adds	r7, #20
 800036c:	46bd      	mov	sp, r7
 800036e:	bc80      	pop	{r7}
 8000370:	4770      	bx	lr
	...

08000374 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000374:	b580      	push	{r7, lr}
 8000376:	b086      	sub	sp, #24
 8000378:	af00      	add	r7, sp, #0
 800037a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800037c:	4a14      	ldr	r2, [pc, #80]	; (80003d0 <_sbrk+0x5c>)
 800037e:	4b15      	ldr	r3, [pc, #84]	; (80003d4 <_sbrk+0x60>)
 8000380:	1ad3      	subs	r3, r2, r3
 8000382:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000384:	697b      	ldr	r3, [r7, #20]
 8000386:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000388:	4b13      	ldr	r3, [pc, #76]	; (80003d8 <_sbrk+0x64>)
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	2b00      	cmp	r3, #0
 800038e:	d102      	bne.n	8000396 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000390:	4b11      	ldr	r3, [pc, #68]	; (80003d8 <_sbrk+0x64>)
 8000392:	4a12      	ldr	r2, [pc, #72]	; (80003dc <_sbrk+0x68>)
 8000394:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000396:	4b10      	ldr	r3, [pc, #64]	; (80003d8 <_sbrk+0x64>)
 8000398:	681a      	ldr	r2, [r3, #0]
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	4413      	add	r3, r2
 800039e:	693a      	ldr	r2, [r7, #16]
 80003a0:	429a      	cmp	r2, r3
 80003a2:	d207      	bcs.n	80003b4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003a4:	f000 f9ac 	bl	8000700 <__errno>
 80003a8:	4603      	mov	r3, r0
 80003aa:	220c      	movs	r2, #12
 80003ac:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003ae:	f04f 33ff 	mov.w	r3, #4294967295
 80003b2:	e009      	b.n	80003c8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003b4:	4b08      	ldr	r3, [pc, #32]	; (80003d8 <_sbrk+0x64>)
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003ba:	4b07      	ldr	r3, [pc, #28]	; (80003d8 <_sbrk+0x64>)
 80003bc:	681a      	ldr	r2, [r3, #0]
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	4413      	add	r3, r2
 80003c2:	4a05      	ldr	r2, [pc, #20]	; (80003d8 <_sbrk+0x64>)
 80003c4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003c6:	68fb      	ldr	r3, [r7, #12]
}
 80003c8:	4618      	mov	r0, r3
 80003ca:	3718      	adds	r7, #24
 80003cc:	46bd      	mov	sp, r7
 80003ce:	bd80      	pop	{r7, pc}
 80003d0:	20005000 	.word	0x20005000
 80003d4:	00000400 	.word	0x00000400
 80003d8:	20000078 	.word	0x20000078
 80003dc:	200001c8 	.word	0x200001c8

080003e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003e0:	480d      	ldr	r0, [pc, #52]	; (8000418 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003e2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003e4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003e8:	480c      	ldr	r0, [pc, #48]	; (800041c <LoopForever+0x6>)
  ldr r1, =_edata
 80003ea:	490d      	ldr	r1, [pc, #52]	; (8000420 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003ec:	4a0d      	ldr	r2, [pc, #52]	; (8000424 <LoopForever+0xe>)
  movs r3, #0
 80003ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003f0:	e002      	b.n	80003f8 <LoopCopyDataInit>

080003f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003f6:	3304      	adds	r3, #4

080003f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003fc:	d3f9      	bcc.n	80003f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003fe:	4a0a      	ldr	r2, [pc, #40]	; (8000428 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000400:	4c0a      	ldr	r4, [pc, #40]	; (800042c <LoopForever+0x16>)
  movs r3, #0
 8000402:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000404:	e001      	b.n	800040a <LoopFillZerobss>

08000406 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000406:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000408:	3204      	adds	r2, #4

0800040a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800040a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800040c:	d3fb      	bcc.n	8000406 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800040e:	f000 f97d 	bl	800070c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000412:	f7ff feb9 	bl	8000188 <main>

08000416 <LoopForever>:

LoopForever:
  b LoopForever
 8000416:	e7fe      	b.n	8000416 <LoopForever>
  ldr   r0, =_estack
 8000418:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 800041c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000420:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000424:	08001318 	.word	0x08001318
  ldr r2, =_sbss
 8000428:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800042c:	200001c8 	.word	0x200001c8

08000430 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000430:	e7fe      	b.n	8000430 <ADC1_2_IRQHandler>
	...

08000434 <std>:
 8000434:	2300      	movs	r3, #0
 8000436:	b510      	push	{r4, lr}
 8000438:	4604      	mov	r4, r0
 800043a:	e9c0 3300 	strd	r3, r3, [r0]
 800043e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000442:	6083      	str	r3, [r0, #8]
 8000444:	8181      	strh	r1, [r0, #12]
 8000446:	6643      	str	r3, [r0, #100]	; 0x64
 8000448:	81c2      	strh	r2, [r0, #14]
 800044a:	6183      	str	r3, [r0, #24]
 800044c:	4619      	mov	r1, r3
 800044e:	2208      	movs	r2, #8
 8000450:	305c      	adds	r0, #92	; 0x5c
 8000452:	f000 f906 	bl	8000662 <memset>
 8000456:	4b0d      	ldr	r3, [pc, #52]	; (800048c <std+0x58>)
 8000458:	6224      	str	r4, [r4, #32]
 800045a:	6263      	str	r3, [r4, #36]	; 0x24
 800045c:	4b0c      	ldr	r3, [pc, #48]	; (8000490 <std+0x5c>)
 800045e:	62a3      	str	r3, [r4, #40]	; 0x28
 8000460:	4b0c      	ldr	r3, [pc, #48]	; (8000494 <std+0x60>)
 8000462:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000464:	4b0c      	ldr	r3, [pc, #48]	; (8000498 <std+0x64>)
 8000466:	6323      	str	r3, [r4, #48]	; 0x30
 8000468:	4b0c      	ldr	r3, [pc, #48]	; (800049c <std+0x68>)
 800046a:	429c      	cmp	r4, r3
 800046c:	d006      	beq.n	800047c <std+0x48>
 800046e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000472:	4294      	cmp	r4, r2
 8000474:	d002      	beq.n	800047c <std+0x48>
 8000476:	33d0      	adds	r3, #208	; 0xd0
 8000478:	429c      	cmp	r4, r3
 800047a:	d105      	bne.n	8000488 <std+0x54>
 800047c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000480:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000484:	f000 b966 	b.w	8000754 <__retarget_lock_init_recursive>
 8000488:	bd10      	pop	{r4, pc}
 800048a:	bf00      	nop
 800048c:	080005dd 	.word	0x080005dd
 8000490:	080005ff 	.word	0x080005ff
 8000494:	08000637 	.word	0x08000637
 8000498:	0800065b 	.word	0x0800065b
 800049c:	2000007c 	.word	0x2000007c

080004a0 <stdio_exit_handler>:
 80004a0:	4a02      	ldr	r2, [pc, #8]	; (80004ac <stdio_exit_handler+0xc>)
 80004a2:	4903      	ldr	r1, [pc, #12]	; (80004b0 <stdio_exit_handler+0x10>)
 80004a4:	4803      	ldr	r0, [pc, #12]	; (80004b4 <stdio_exit_handler+0x14>)
 80004a6:	f000 b869 	b.w	800057c <_fwalk_sglue>
 80004aa:	bf00      	nop
 80004ac:	20000000 	.word	0x20000000
 80004b0:	08000ff5 	.word	0x08000ff5
 80004b4:	2000000c 	.word	0x2000000c

080004b8 <cleanup_stdio>:
 80004b8:	6841      	ldr	r1, [r0, #4]
 80004ba:	4b0c      	ldr	r3, [pc, #48]	; (80004ec <cleanup_stdio+0x34>)
 80004bc:	b510      	push	{r4, lr}
 80004be:	4299      	cmp	r1, r3
 80004c0:	4604      	mov	r4, r0
 80004c2:	d001      	beq.n	80004c8 <cleanup_stdio+0x10>
 80004c4:	f000 fd96 	bl	8000ff4 <_fflush_r>
 80004c8:	68a1      	ldr	r1, [r4, #8]
 80004ca:	4b09      	ldr	r3, [pc, #36]	; (80004f0 <cleanup_stdio+0x38>)
 80004cc:	4299      	cmp	r1, r3
 80004ce:	d002      	beq.n	80004d6 <cleanup_stdio+0x1e>
 80004d0:	4620      	mov	r0, r4
 80004d2:	f000 fd8f 	bl	8000ff4 <_fflush_r>
 80004d6:	68e1      	ldr	r1, [r4, #12]
 80004d8:	4b06      	ldr	r3, [pc, #24]	; (80004f4 <cleanup_stdio+0x3c>)
 80004da:	4299      	cmp	r1, r3
 80004dc:	d004      	beq.n	80004e8 <cleanup_stdio+0x30>
 80004de:	4620      	mov	r0, r4
 80004e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004e4:	f000 bd86 	b.w	8000ff4 <_fflush_r>
 80004e8:	bd10      	pop	{r4, pc}
 80004ea:	bf00      	nop
 80004ec:	2000007c 	.word	0x2000007c
 80004f0:	200000e4 	.word	0x200000e4
 80004f4:	2000014c 	.word	0x2000014c

080004f8 <global_stdio_init.part.0>:
 80004f8:	b510      	push	{r4, lr}
 80004fa:	4b0b      	ldr	r3, [pc, #44]	; (8000528 <global_stdio_init.part.0+0x30>)
 80004fc:	4c0b      	ldr	r4, [pc, #44]	; (800052c <global_stdio_init.part.0+0x34>)
 80004fe:	4a0c      	ldr	r2, [pc, #48]	; (8000530 <global_stdio_init.part.0+0x38>)
 8000500:	4620      	mov	r0, r4
 8000502:	601a      	str	r2, [r3, #0]
 8000504:	2104      	movs	r1, #4
 8000506:	2200      	movs	r2, #0
 8000508:	f7ff ff94 	bl	8000434 <std>
 800050c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000510:	2201      	movs	r2, #1
 8000512:	2109      	movs	r1, #9
 8000514:	f7ff ff8e 	bl	8000434 <std>
 8000518:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800051c:	2202      	movs	r2, #2
 800051e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000522:	2112      	movs	r1, #18
 8000524:	f7ff bf86 	b.w	8000434 <std>
 8000528:	200001b4 	.word	0x200001b4
 800052c:	2000007c 	.word	0x2000007c
 8000530:	080004a1 	.word	0x080004a1

08000534 <__sfp_lock_acquire>:
 8000534:	4801      	ldr	r0, [pc, #4]	; (800053c <__sfp_lock_acquire+0x8>)
 8000536:	f000 b90e 	b.w	8000756 <__retarget_lock_acquire_recursive>
 800053a:	bf00      	nop
 800053c:	200001bd 	.word	0x200001bd

08000540 <__sfp_lock_release>:
 8000540:	4801      	ldr	r0, [pc, #4]	; (8000548 <__sfp_lock_release+0x8>)
 8000542:	f000 b909 	b.w	8000758 <__retarget_lock_release_recursive>
 8000546:	bf00      	nop
 8000548:	200001bd 	.word	0x200001bd

0800054c <__sinit>:
 800054c:	b510      	push	{r4, lr}
 800054e:	4604      	mov	r4, r0
 8000550:	f7ff fff0 	bl	8000534 <__sfp_lock_acquire>
 8000554:	6a23      	ldr	r3, [r4, #32]
 8000556:	b11b      	cbz	r3, 8000560 <__sinit+0x14>
 8000558:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800055c:	f7ff bff0 	b.w	8000540 <__sfp_lock_release>
 8000560:	4b04      	ldr	r3, [pc, #16]	; (8000574 <__sinit+0x28>)
 8000562:	6223      	str	r3, [r4, #32]
 8000564:	4b04      	ldr	r3, [pc, #16]	; (8000578 <__sinit+0x2c>)
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	2b00      	cmp	r3, #0
 800056a:	d1f5      	bne.n	8000558 <__sinit+0xc>
 800056c:	f7ff ffc4 	bl	80004f8 <global_stdio_init.part.0>
 8000570:	e7f2      	b.n	8000558 <__sinit+0xc>
 8000572:	bf00      	nop
 8000574:	080004b9 	.word	0x080004b9
 8000578:	200001b4 	.word	0x200001b4

0800057c <_fwalk_sglue>:
 800057c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000580:	4607      	mov	r7, r0
 8000582:	4688      	mov	r8, r1
 8000584:	4614      	mov	r4, r2
 8000586:	2600      	movs	r6, #0
 8000588:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800058c:	f1b9 0901 	subs.w	r9, r9, #1
 8000590:	d505      	bpl.n	800059e <_fwalk_sglue+0x22>
 8000592:	6824      	ldr	r4, [r4, #0]
 8000594:	2c00      	cmp	r4, #0
 8000596:	d1f7      	bne.n	8000588 <_fwalk_sglue+0xc>
 8000598:	4630      	mov	r0, r6
 800059a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800059e:	89ab      	ldrh	r3, [r5, #12]
 80005a0:	2b01      	cmp	r3, #1
 80005a2:	d907      	bls.n	80005b4 <_fwalk_sglue+0x38>
 80005a4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005a8:	3301      	adds	r3, #1
 80005aa:	d003      	beq.n	80005b4 <_fwalk_sglue+0x38>
 80005ac:	4629      	mov	r1, r5
 80005ae:	4638      	mov	r0, r7
 80005b0:	47c0      	blx	r8
 80005b2:	4306      	orrs	r6, r0
 80005b4:	3568      	adds	r5, #104	; 0x68
 80005b6:	e7e9      	b.n	800058c <_fwalk_sglue+0x10>

080005b8 <iprintf>:
 80005b8:	b40f      	push	{r0, r1, r2, r3}
 80005ba:	b507      	push	{r0, r1, r2, lr}
 80005bc:	4906      	ldr	r1, [pc, #24]	; (80005d8 <iprintf+0x20>)
 80005be:	ab04      	add	r3, sp, #16
 80005c0:	6808      	ldr	r0, [r1, #0]
 80005c2:	f853 2b04 	ldr.w	r2, [r3], #4
 80005c6:	6881      	ldr	r1, [r0, #8]
 80005c8:	9301      	str	r3, [sp, #4]
 80005ca:	f000 f9e3 	bl	8000994 <_vfiprintf_r>
 80005ce:	b003      	add	sp, #12
 80005d0:	f85d eb04 	ldr.w	lr, [sp], #4
 80005d4:	b004      	add	sp, #16
 80005d6:	4770      	bx	lr
 80005d8:	20000058 	.word	0x20000058

080005dc <__sread>:
 80005dc:	b510      	push	{r4, lr}
 80005de:	460c      	mov	r4, r1
 80005e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005e4:	f000 f868 	bl	80006b8 <_read_r>
 80005e8:	2800      	cmp	r0, #0
 80005ea:	bfab      	itete	ge
 80005ec:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80005ee:	89a3      	ldrhlt	r3, [r4, #12]
 80005f0:	181b      	addge	r3, r3, r0
 80005f2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80005f6:	bfac      	ite	ge
 80005f8:	6563      	strge	r3, [r4, #84]	; 0x54
 80005fa:	81a3      	strhlt	r3, [r4, #12]
 80005fc:	bd10      	pop	{r4, pc}

080005fe <__swrite>:
 80005fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000602:	461f      	mov	r7, r3
 8000604:	898b      	ldrh	r3, [r1, #12]
 8000606:	4605      	mov	r5, r0
 8000608:	05db      	lsls	r3, r3, #23
 800060a:	460c      	mov	r4, r1
 800060c:	4616      	mov	r6, r2
 800060e:	d505      	bpl.n	800061c <__swrite+0x1e>
 8000610:	2302      	movs	r3, #2
 8000612:	2200      	movs	r2, #0
 8000614:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000618:	f000 f83c 	bl	8000694 <_lseek_r>
 800061c:	89a3      	ldrh	r3, [r4, #12]
 800061e:	4632      	mov	r2, r6
 8000620:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000624:	81a3      	strh	r3, [r4, #12]
 8000626:	4628      	mov	r0, r5
 8000628:	463b      	mov	r3, r7
 800062a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800062e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000632:	f000 b853 	b.w	80006dc <_write_r>

08000636 <__sseek>:
 8000636:	b510      	push	{r4, lr}
 8000638:	460c      	mov	r4, r1
 800063a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800063e:	f000 f829 	bl	8000694 <_lseek_r>
 8000642:	1c43      	adds	r3, r0, #1
 8000644:	89a3      	ldrh	r3, [r4, #12]
 8000646:	bf15      	itete	ne
 8000648:	6560      	strne	r0, [r4, #84]	; 0x54
 800064a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800064e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000652:	81a3      	strheq	r3, [r4, #12]
 8000654:	bf18      	it	ne
 8000656:	81a3      	strhne	r3, [r4, #12]
 8000658:	bd10      	pop	{r4, pc}

0800065a <__sclose>:
 800065a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800065e:	f000 b809 	b.w	8000674 <_close_r>

08000662 <memset>:
 8000662:	4603      	mov	r3, r0
 8000664:	4402      	add	r2, r0
 8000666:	4293      	cmp	r3, r2
 8000668:	d100      	bne.n	800066c <memset+0xa>
 800066a:	4770      	bx	lr
 800066c:	f803 1b01 	strb.w	r1, [r3], #1
 8000670:	e7f9      	b.n	8000666 <memset+0x4>
	...

08000674 <_close_r>:
 8000674:	b538      	push	{r3, r4, r5, lr}
 8000676:	2300      	movs	r3, #0
 8000678:	4d05      	ldr	r5, [pc, #20]	; (8000690 <_close_r+0x1c>)
 800067a:	4604      	mov	r4, r0
 800067c:	4608      	mov	r0, r1
 800067e:	602b      	str	r3, [r5, #0]
 8000680:	f7ff fe47 	bl	8000312 <_close>
 8000684:	1c43      	adds	r3, r0, #1
 8000686:	d102      	bne.n	800068e <_close_r+0x1a>
 8000688:	682b      	ldr	r3, [r5, #0]
 800068a:	b103      	cbz	r3, 800068e <_close_r+0x1a>
 800068c:	6023      	str	r3, [r4, #0]
 800068e:	bd38      	pop	{r3, r4, r5, pc}
 8000690:	200001b8 	.word	0x200001b8

08000694 <_lseek_r>:
 8000694:	b538      	push	{r3, r4, r5, lr}
 8000696:	4604      	mov	r4, r0
 8000698:	4608      	mov	r0, r1
 800069a:	4611      	mov	r1, r2
 800069c:	2200      	movs	r2, #0
 800069e:	4d05      	ldr	r5, [pc, #20]	; (80006b4 <_lseek_r+0x20>)
 80006a0:	602a      	str	r2, [r5, #0]
 80006a2:	461a      	mov	r2, r3
 80006a4:	f7ff fe59 	bl	800035a <_lseek>
 80006a8:	1c43      	adds	r3, r0, #1
 80006aa:	d102      	bne.n	80006b2 <_lseek_r+0x1e>
 80006ac:	682b      	ldr	r3, [r5, #0]
 80006ae:	b103      	cbz	r3, 80006b2 <_lseek_r+0x1e>
 80006b0:	6023      	str	r3, [r4, #0]
 80006b2:	bd38      	pop	{r3, r4, r5, pc}
 80006b4:	200001b8 	.word	0x200001b8

080006b8 <_read_r>:
 80006b8:	b538      	push	{r3, r4, r5, lr}
 80006ba:	4604      	mov	r4, r0
 80006bc:	4608      	mov	r0, r1
 80006be:	4611      	mov	r1, r2
 80006c0:	2200      	movs	r2, #0
 80006c2:	4d05      	ldr	r5, [pc, #20]	; (80006d8 <_read_r+0x20>)
 80006c4:	602a      	str	r2, [r5, #0]
 80006c6:	461a      	mov	r2, r3
 80006c8:	f7ff fdea 	bl	80002a0 <_read>
 80006cc:	1c43      	adds	r3, r0, #1
 80006ce:	d102      	bne.n	80006d6 <_read_r+0x1e>
 80006d0:	682b      	ldr	r3, [r5, #0]
 80006d2:	b103      	cbz	r3, 80006d6 <_read_r+0x1e>
 80006d4:	6023      	str	r3, [r4, #0]
 80006d6:	bd38      	pop	{r3, r4, r5, pc}
 80006d8:	200001b8 	.word	0x200001b8

080006dc <_write_r>:
 80006dc:	b538      	push	{r3, r4, r5, lr}
 80006de:	4604      	mov	r4, r0
 80006e0:	4608      	mov	r0, r1
 80006e2:	4611      	mov	r1, r2
 80006e4:	2200      	movs	r2, #0
 80006e6:	4d05      	ldr	r5, [pc, #20]	; (80006fc <_write_r+0x20>)
 80006e8:	602a      	str	r2, [r5, #0]
 80006ea:	461a      	mov	r2, r3
 80006ec:	f7ff fdf5 	bl	80002da <_write>
 80006f0:	1c43      	adds	r3, r0, #1
 80006f2:	d102      	bne.n	80006fa <_write_r+0x1e>
 80006f4:	682b      	ldr	r3, [r5, #0]
 80006f6:	b103      	cbz	r3, 80006fa <_write_r+0x1e>
 80006f8:	6023      	str	r3, [r4, #0]
 80006fa:	bd38      	pop	{r3, r4, r5, pc}
 80006fc:	200001b8 	.word	0x200001b8

08000700 <__errno>:
 8000700:	4b01      	ldr	r3, [pc, #4]	; (8000708 <__errno+0x8>)
 8000702:	6818      	ldr	r0, [r3, #0]
 8000704:	4770      	bx	lr
 8000706:	bf00      	nop
 8000708:	20000058 	.word	0x20000058

0800070c <__libc_init_array>:
 800070c:	b570      	push	{r4, r5, r6, lr}
 800070e:	2600      	movs	r6, #0
 8000710:	4d0c      	ldr	r5, [pc, #48]	; (8000744 <__libc_init_array+0x38>)
 8000712:	4c0d      	ldr	r4, [pc, #52]	; (8000748 <__libc_init_array+0x3c>)
 8000714:	1b64      	subs	r4, r4, r5
 8000716:	10a4      	asrs	r4, r4, #2
 8000718:	42a6      	cmp	r6, r4
 800071a:	d109      	bne.n	8000730 <__libc_init_array+0x24>
 800071c:	f000 fdca 	bl	80012b4 <_init>
 8000720:	2600      	movs	r6, #0
 8000722:	4d0a      	ldr	r5, [pc, #40]	; (800074c <__libc_init_array+0x40>)
 8000724:	4c0a      	ldr	r4, [pc, #40]	; (8000750 <__libc_init_array+0x44>)
 8000726:	1b64      	subs	r4, r4, r5
 8000728:	10a4      	asrs	r4, r4, #2
 800072a:	42a6      	cmp	r6, r4
 800072c:	d105      	bne.n	800073a <__libc_init_array+0x2e>
 800072e:	bd70      	pop	{r4, r5, r6, pc}
 8000730:	f855 3b04 	ldr.w	r3, [r5], #4
 8000734:	4798      	blx	r3
 8000736:	3601      	adds	r6, #1
 8000738:	e7ee      	b.n	8000718 <__libc_init_array+0xc>
 800073a:	f855 3b04 	ldr.w	r3, [r5], #4
 800073e:	4798      	blx	r3
 8000740:	3601      	adds	r6, #1
 8000742:	e7f2      	b.n	800072a <__libc_init_array+0x1e>
 8000744:	08001310 	.word	0x08001310
 8000748:	08001310 	.word	0x08001310
 800074c:	08001310 	.word	0x08001310
 8000750:	08001314 	.word	0x08001314

08000754 <__retarget_lock_init_recursive>:
 8000754:	4770      	bx	lr

08000756 <__retarget_lock_acquire_recursive>:
 8000756:	4770      	bx	lr

08000758 <__retarget_lock_release_recursive>:
 8000758:	4770      	bx	lr
	...

0800075c <_free_r>:
 800075c:	b538      	push	{r3, r4, r5, lr}
 800075e:	4605      	mov	r5, r0
 8000760:	2900      	cmp	r1, #0
 8000762:	d040      	beq.n	80007e6 <_free_r+0x8a>
 8000764:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000768:	1f0c      	subs	r4, r1, #4
 800076a:	2b00      	cmp	r3, #0
 800076c:	bfb8      	it	lt
 800076e:	18e4      	addlt	r4, r4, r3
 8000770:	f000 f8dc 	bl	800092c <__malloc_lock>
 8000774:	4a1c      	ldr	r2, [pc, #112]	; (80007e8 <_free_r+0x8c>)
 8000776:	6813      	ldr	r3, [r2, #0]
 8000778:	b933      	cbnz	r3, 8000788 <_free_r+0x2c>
 800077a:	6063      	str	r3, [r4, #4]
 800077c:	6014      	str	r4, [r2, #0]
 800077e:	4628      	mov	r0, r5
 8000780:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000784:	f000 b8d8 	b.w	8000938 <__malloc_unlock>
 8000788:	42a3      	cmp	r3, r4
 800078a:	d908      	bls.n	800079e <_free_r+0x42>
 800078c:	6820      	ldr	r0, [r4, #0]
 800078e:	1821      	adds	r1, r4, r0
 8000790:	428b      	cmp	r3, r1
 8000792:	bf01      	itttt	eq
 8000794:	6819      	ldreq	r1, [r3, #0]
 8000796:	685b      	ldreq	r3, [r3, #4]
 8000798:	1809      	addeq	r1, r1, r0
 800079a:	6021      	streq	r1, [r4, #0]
 800079c:	e7ed      	b.n	800077a <_free_r+0x1e>
 800079e:	461a      	mov	r2, r3
 80007a0:	685b      	ldr	r3, [r3, #4]
 80007a2:	b10b      	cbz	r3, 80007a8 <_free_r+0x4c>
 80007a4:	42a3      	cmp	r3, r4
 80007a6:	d9fa      	bls.n	800079e <_free_r+0x42>
 80007a8:	6811      	ldr	r1, [r2, #0]
 80007aa:	1850      	adds	r0, r2, r1
 80007ac:	42a0      	cmp	r0, r4
 80007ae:	d10b      	bne.n	80007c8 <_free_r+0x6c>
 80007b0:	6820      	ldr	r0, [r4, #0]
 80007b2:	4401      	add	r1, r0
 80007b4:	1850      	adds	r0, r2, r1
 80007b6:	4283      	cmp	r3, r0
 80007b8:	6011      	str	r1, [r2, #0]
 80007ba:	d1e0      	bne.n	800077e <_free_r+0x22>
 80007bc:	6818      	ldr	r0, [r3, #0]
 80007be:	685b      	ldr	r3, [r3, #4]
 80007c0:	4408      	add	r0, r1
 80007c2:	6010      	str	r0, [r2, #0]
 80007c4:	6053      	str	r3, [r2, #4]
 80007c6:	e7da      	b.n	800077e <_free_r+0x22>
 80007c8:	d902      	bls.n	80007d0 <_free_r+0x74>
 80007ca:	230c      	movs	r3, #12
 80007cc:	602b      	str	r3, [r5, #0]
 80007ce:	e7d6      	b.n	800077e <_free_r+0x22>
 80007d0:	6820      	ldr	r0, [r4, #0]
 80007d2:	1821      	adds	r1, r4, r0
 80007d4:	428b      	cmp	r3, r1
 80007d6:	bf01      	itttt	eq
 80007d8:	6819      	ldreq	r1, [r3, #0]
 80007da:	685b      	ldreq	r3, [r3, #4]
 80007dc:	1809      	addeq	r1, r1, r0
 80007de:	6021      	streq	r1, [r4, #0]
 80007e0:	6063      	str	r3, [r4, #4]
 80007e2:	6054      	str	r4, [r2, #4]
 80007e4:	e7cb      	b.n	800077e <_free_r+0x22>
 80007e6:	bd38      	pop	{r3, r4, r5, pc}
 80007e8:	200001c0 	.word	0x200001c0

080007ec <sbrk_aligned>:
 80007ec:	b570      	push	{r4, r5, r6, lr}
 80007ee:	4e0e      	ldr	r6, [pc, #56]	; (8000828 <sbrk_aligned+0x3c>)
 80007f0:	460c      	mov	r4, r1
 80007f2:	6831      	ldr	r1, [r6, #0]
 80007f4:	4605      	mov	r5, r0
 80007f6:	b911      	cbnz	r1, 80007fe <sbrk_aligned+0x12>
 80007f8:	f000 fcba 	bl	8001170 <_sbrk_r>
 80007fc:	6030      	str	r0, [r6, #0]
 80007fe:	4621      	mov	r1, r4
 8000800:	4628      	mov	r0, r5
 8000802:	f000 fcb5 	bl	8001170 <_sbrk_r>
 8000806:	1c43      	adds	r3, r0, #1
 8000808:	d00a      	beq.n	8000820 <sbrk_aligned+0x34>
 800080a:	1cc4      	adds	r4, r0, #3
 800080c:	f024 0403 	bic.w	r4, r4, #3
 8000810:	42a0      	cmp	r0, r4
 8000812:	d007      	beq.n	8000824 <sbrk_aligned+0x38>
 8000814:	1a21      	subs	r1, r4, r0
 8000816:	4628      	mov	r0, r5
 8000818:	f000 fcaa 	bl	8001170 <_sbrk_r>
 800081c:	3001      	adds	r0, #1
 800081e:	d101      	bne.n	8000824 <sbrk_aligned+0x38>
 8000820:	f04f 34ff 	mov.w	r4, #4294967295
 8000824:	4620      	mov	r0, r4
 8000826:	bd70      	pop	{r4, r5, r6, pc}
 8000828:	200001c4 	.word	0x200001c4

0800082c <_malloc_r>:
 800082c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000830:	1ccd      	adds	r5, r1, #3
 8000832:	f025 0503 	bic.w	r5, r5, #3
 8000836:	3508      	adds	r5, #8
 8000838:	2d0c      	cmp	r5, #12
 800083a:	bf38      	it	cc
 800083c:	250c      	movcc	r5, #12
 800083e:	2d00      	cmp	r5, #0
 8000840:	4607      	mov	r7, r0
 8000842:	db01      	blt.n	8000848 <_malloc_r+0x1c>
 8000844:	42a9      	cmp	r1, r5
 8000846:	d905      	bls.n	8000854 <_malloc_r+0x28>
 8000848:	230c      	movs	r3, #12
 800084a:	2600      	movs	r6, #0
 800084c:	603b      	str	r3, [r7, #0]
 800084e:	4630      	mov	r0, r6
 8000850:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000854:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000928 <_malloc_r+0xfc>
 8000858:	f000 f868 	bl	800092c <__malloc_lock>
 800085c:	f8d8 3000 	ldr.w	r3, [r8]
 8000860:	461c      	mov	r4, r3
 8000862:	bb5c      	cbnz	r4, 80008bc <_malloc_r+0x90>
 8000864:	4629      	mov	r1, r5
 8000866:	4638      	mov	r0, r7
 8000868:	f7ff ffc0 	bl	80007ec <sbrk_aligned>
 800086c:	1c43      	adds	r3, r0, #1
 800086e:	4604      	mov	r4, r0
 8000870:	d155      	bne.n	800091e <_malloc_r+0xf2>
 8000872:	f8d8 4000 	ldr.w	r4, [r8]
 8000876:	4626      	mov	r6, r4
 8000878:	2e00      	cmp	r6, #0
 800087a:	d145      	bne.n	8000908 <_malloc_r+0xdc>
 800087c:	2c00      	cmp	r4, #0
 800087e:	d048      	beq.n	8000912 <_malloc_r+0xe6>
 8000880:	6823      	ldr	r3, [r4, #0]
 8000882:	4631      	mov	r1, r6
 8000884:	4638      	mov	r0, r7
 8000886:	eb04 0903 	add.w	r9, r4, r3
 800088a:	f000 fc71 	bl	8001170 <_sbrk_r>
 800088e:	4581      	cmp	r9, r0
 8000890:	d13f      	bne.n	8000912 <_malloc_r+0xe6>
 8000892:	6821      	ldr	r1, [r4, #0]
 8000894:	4638      	mov	r0, r7
 8000896:	1a6d      	subs	r5, r5, r1
 8000898:	4629      	mov	r1, r5
 800089a:	f7ff ffa7 	bl	80007ec <sbrk_aligned>
 800089e:	3001      	adds	r0, #1
 80008a0:	d037      	beq.n	8000912 <_malloc_r+0xe6>
 80008a2:	6823      	ldr	r3, [r4, #0]
 80008a4:	442b      	add	r3, r5
 80008a6:	6023      	str	r3, [r4, #0]
 80008a8:	f8d8 3000 	ldr.w	r3, [r8]
 80008ac:	2b00      	cmp	r3, #0
 80008ae:	d038      	beq.n	8000922 <_malloc_r+0xf6>
 80008b0:	685a      	ldr	r2, [r3, #4]
 80008b2:	42a2      	cmp	r2, r4
 80008b4:	d12b      	bne.n	800090e <_malloc_r+0xe2>
 80008b6:	2200      	movs	r2, #0
 80008b8:	605a      	str	r2, [r3, #4]
 80008ba:	e00f      	b.n	80008dc <_malloc_r+0xb0>
 80008bc:	6822      	ldr	r2, [r4, #0]
 80008be:	1b52      	subs	r2, r2, r5
 80008c0:	d41f      	bmi.n	8000902 <_malloc_r+0xd6>
 80008c2:	2a0b      	cmp	r2, #11
 80008c4:	d917      	bls.n	80008f6 <_malloc_r+0xca>
 80008c6:	1961      	adds	r1, r4, r5
 80008c8:	42a3      	cmp	r3, r4
 80008ca:	6025      	str	r5, [r4, #0]
 80008cc:	bf18      	it	ne
 80008ce:	6059      	strne	r1, [r3, #4]
 80008d0:	6863      	ldr	r3, [r4, #4]
 80008d2:	bf08      	it	eq
 80008d4:	f8c8 1000 	streq.w	r1, [r8]
 80008d8:	5162      	str	r2, [r4, r5]
 80008da:	604b      	str	r3, [r1, #4]
 80008dc:	4638      	mov	r0, r7
 80008de:	f104 060b 	add.w	r6, r4, #11
 80008e2:	f000 f829 	bl	8000938 <__malloc_unlock>
 80008e6:	f026 0607 	bic.w	r6, r6, #7
 80008ea:	1d23      	adds	r3, r4, #4
 80008ec:	1af2      	subs	r2, r6, r3
 80008ee:	d0ae      	beq.n	800084e <_malloc_r+0x22>
 80008f0:	1b9b      	subs	r3, r3, r6
 80008f2:	50a3      	str	r3, [r4, r2]
 80008f4:	e7ab      	b.n	800084e <_malloc_r+0x22>
 80008f6:	42a3      	cmp	r3, r4
 80008f8:	6862      	ldr	r2, [r4, #4]
 80008fa:	d1dd      	bne.n	80008b8 <_malloc_r+0x8c>
 80008fc:	f8c8 2000 	str.w	r2, [r8]
 8000900:	e7ec      	b.n	80008dc <_malloc_r+0xb0>
 8000902:	4623      	mov	r3, r4
 8000904:	6864      	ldr	r4, [r4, #4]
 8000906:	e7ac      	b.n	8000862 <_malloc_r+0x36>
 8000908:	4634      	mov	r4, r6
 800090a:	6876      	ldr	r6, [r6, #4]
 800090c:	e7b4      	b.n	8000878 <_malloc_r+0x4c>
 800090e:	4613      	mov	r3, r2
 8000910:	e7cc      	b.n	80008ac <_malloc_r+0x80>
 8000912:	230c      	movs	r3, #12
 8000914:	4638      	mov	r0, r7
 8000916:	603b      	str	r3, [r7, #0]
 8000918:	f000 f80e 	bl	8000938 <__malloc_unlock>
 800091c:	e797      	b.n	800084e <_malloc_r+0x22>
 800091e:	6025      	str	r5, [r4, #0]
 8000920:	e7dc      	b.n	80008dc <_malloc_r+0xb0>
 8000922:	605b      	str	r3, [r3, #4]
 8000924:	deff      	udf	#255	; 0xff
 8000926:	bf00      	nop
 8000928:	200001c0 	.word	0x200001c0

0800092c <__malloc_lock>:
 800092c:	4801      	ldr	r0, [pc, #4]	; (8000934 <__malloc_lock+0x8>)
 800092e:	f7ff bf12 	b.w	8000756 <__retarget_lock_acquire_recursive>
 8000932:	bf00      	nop
 8000934:	200001bc 	.word	0x200001bc

08000938 <__malloc_unlock>:
 8000938:	4801      	ldr	r0, [pc, #4]	; (8000940 <__malloc_unlock+0x8>)
 800093a:	f7ff bf0d 	b.w	8000758 <__retarget_lock_release_recursive>
 800093e:	bf00      	nop
 8000940:	200001bc 	.word	0x200001bc

08000944 <__sfputc_r>:
 8000944:	6893      	ldr	r3, [r2, #8]
 8000946:	b410      	push	{r4}
 8000948:	3b01      	subs	r3, #1
 800094a:	2b00      	cmp	r3, #0
 800094c:	6093      	str	r3, [r2, #8]
 800094e:	da07      	bge.n	8000960 <__sfputc_r+0x1c>
 8000950:	6994      	ldr	r4, [r2, #24]
 8000952:	42a3      	cmp	r3, r4
 8000954:	db01      	blt.n	800095a <__sfputc_r+0x16>
 8000956:	290a      	cmp	r1, #10
 8000958:	d102      	bne.n	8000960 <__sfputc_r+0x1c>
 800095a:	bc10      	pop	{r4}
 800095c:	f000 bb72 	b.w	8001044 <__swbuf_r>
 8000960:	6813      	ldr	r3, [r2, #0]
 8000962:	1c58      	adds	r0, r3, #1
 8000964:	6010      	str	r0, [r2, #0]
 8000966:	7019      	strb	r1, [r3, #0]
 8000968:	4608      	mov	r0, r1
 800096a:	bc10      	pop	{r4}
 800096c:	4770      	bx	lr

0800096e <__sfputs_r>:
 800096e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000970:	4606      	mov	r6, r0
 8000972:	460f      	mov	r7, r1
 8000974:	4614      	mov	r4, r2
 8000976:	18d5      	adds	r5, r2, r3
 8000978:	42ac      	cmp	r4, r5
 800097a:	d101      	bne.n	8000980 <__sfputs_r+0x12>
 800097c:	2000      	movs	r0, #0
 800097e:	e007      	b.n	8000990 <__sfputs_r+0x22>
 8000980:	463a      	mov	r2, r7
 8000982:	4630      	mov	r0, r6
 8000984:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000988:	f7ff ffdc 	bl	8000944 <__sfputc_r>
 800098c:	1c43      	adds	r3, r0, #1
 800098e:	d1f3      	bne.n	8000978 <__sfputs_r+0xa>
 8000990:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000994 <_vfiprintf_r>:
 8000994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000998:	460d      	mov	r5, r1
 800099a:	4614      	mov	r4, r2
 800099c:	4698      	mov	r8, r3
 800099e:	4606      	mov	r6, r0
 80009a0:	b09d      	sub	sp, #116	; 0x74
 80009a2:	b118      	cbz	r0, 80009ac <_vfiprintf_r+0x18>
 80009a4:	6a03      	ldr	r3, [r0, #32]
 80009a6:	b90b      	cbnz	r3, 80009ac <_vfiprintf_r+0x18>
 80009a8:	f7ff fdd0 	bl	800054c <__sinit>
 80009ac:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009ae:	07d9      	lsls	r1, r3, #31
 80009b0:	d405      	bmi.n	80009be <_vfiprintf_r+0x2a>
 80009b2:	89ab      	ldrh	r3, [r5, #12]
 80009b4:	059a      	lsls	r2, r3, #22
 80009b6:	d402      	bmi.n	80009be <_vfiprintf_r+0x2a>
 80009b8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009ba:	f7ff fecc 	bl	8000756 <__retarget_lock_acquire_recursive>
 80009be:	89ab      	ldrh	r3, [r5, #12]
 80009c0:	071b      	lsls	r3, r3, #28
 80009c2:	d501      	bpl.n	80009c8 <_vfiprintf_r+0x34>
 80009c4:	692b      	ldr	r3, [r5, #16]
 80009c6:	b99b      	cbnz	r3, 80009f0 <_vfiprintf_r+0x5c>
 80009c8:	4629      	mov	r1, r5
 80009ca:	4630      	mov	r0, r6
 80009cc:	f000 fb78 	bl	80010c0 <__swsetup_r>
 80009d0:	b170      	cbz	r0, 80009f0 <_vfiprintf_r+0x5c>
 80009d2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009d4:	07dc      	lsls	r4, r3, #31
 80009d6:	d504      	bpl.n	80009e2 <_vfiprintf_r+0x4e>
 80009d8:	f04f 30ff 	mov.w	r0, #4294967295
 80009dc:	b01d      	add	sp, #116	; 0x74
 80009de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009e2:	89ab      	ldrh	r3, [r5, #12]
 80009e4:	0598      	lsls	r0, r3, #22
 80009e6:	d4f7      	bmi.n	80009d8 <_vfiprintf_r+0x44>
 80009e8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009ea:	f7ff feb5 	bl	8000758 <__retarget_lock_release_recursive>
 80009ee:	e7f3      	b.n	80009d8 <_vfiprintf_r+0x44>
 80009f0:	2300      	movs	r3, #0
 80009f2:	9309      	str	r3, [sp, #36]	; 0x24
 80009f4:	2320      	movs	r3, #32
 80009f6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80009fa:	2330      	movs	r3, #48	; 0x30
 80009fc:	f04f 0901 	mov.w	r9, #1
 8000a00:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a04:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 8000bb4 <_vfiprintf_r+0x220>
 8000a08:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a0c:	4623      	mov	r3, r4
 8000a0e:	469a      	mov	sl, r3
 8000a10:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a14:	b10a      	cbz	r2, 8000a1a <_vfiprintf_r+0x86>
 8000a16:	2a25      	cmp	r2, #37	; 0x25
 8000a18:	d1f9      	bne.n	8000a0e <_vfiprintf_r+0x7a>
 8000a1a:	ebba 0b04 	subs.w	fp, sl, r4
 8000a1e:	d00b      	beq.n	8000a38 <_vfiprintf_r+0xa4>
 8000a20:	465b      	mov	r3, fp
 8000a22:	4622      	mov	r2, r4
 8000a24:	4629      	mov	r1, r5
 8000a26:	4630      	mov	r0, r6
 8000a28:	f7ff ffa1 	bl	800096e <__sfputs_r>
 8000a2c:	3001      	adds	r0, #1
 8000a2e:	f000 80a9 	beq.w	8000b84 <_vfiprintf_r+0x1f0>
 8000a32:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000a34:	445a      	add	r2, fp
 8000a36:	9209      	str	r2, [sp, #36]	; 0x24
 8000a38:	f89a 3000 	ldrb.w	r3, [sl]
 8000a3c:	2b00      	cmp	r3, #0
 8000a3e:	f000 80a1 	beq.w	8000b84 <_vfiprintf_r+0x1f0>
 8000a42:	2300      	movs	r3, #0
 8000a44:	f04f 32ff 	mov.w	r2, #4294967295
 8000a48:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a4c:	f10a 0a01 	add.w	sl, sl, #1
 8000a50:	9304      	str	r3, [sp, #16]
 8000a52:	9307      	str	r3, [sp, #28]
 8000a54:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a58:	931a      	str	r3, [sp, #104]	; 0x68
 8000a5a:	4654      	mov	r4, sl
 8000a5c:	2205      	movs	r2, #5
 8000a5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a62:	4854      	ldr	r0, [pc, #336]	; (8000bb4 <_vfiprintf_r+0x220>)
 8000a64:	f000 fb94 	bl	8001190 <memchr>
 8000a68:	9a04      	ldr	r2, [sp, #16]
 8000a6a:	b9d8      	cbnz	r0, 8000aa4 <_vfiprintf_r+0x110>
 8000a6c:	06d1      	lsls	r1, r2, #27
 8000a6e:	bf44      	itt	mi
 8000a70:	2320      	movmi	r3, #32
 8000a72:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a76:	0713      	lsls	r3, r2, #28
 8000a78:	bf44      	itt	mi
 8000a7a:	232b      	movmi	r3, #43	; 0x2b
 8000a7c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a80:	f89a 3000 	ldrb.w	r3, [sl]
 8000a84:	2b2a      	cmp	r3, #42	; 0x2a
 8000a86:	d015      	beq.n	8000ab4 <_vfiprintf_r+0x120>
 8000a88:	4654      	mov	r4, sl
 8000a8a:	2000      	movs	r0, #0
 8000a8c:	f04f 0c0a 	mov.w	ip, #10
 8000a90:	9a07      	ldr	r2, [sp, #28]
 8000a92:	4621      	mov	r1, r4
 8000a94:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a98:	3b30      	subs	r3, #48	; 0x30
 8000a9a:	2b09      	cmp	r3, #9
 8000a9c:	d94d      	bls.n	8000b3a <_vfiprintf_r+0x1a6>
 8000a9e:	b1b0      	cbz	r0, 8000ace <_vfiprintf_r+0x13a>
 8000aa0:	9207      	str	r2, [sp, #28]
 8000aa2:	e014      	b.n	8000ace <_vfiprintf_r+0x13a>
 8000aa4:	eba0 0308 	sub.w	r3, r0, r8
 8000aa8:	fa09 f303 	lsl.w	r3, r9, r3
 8000aac:	4313      	orrs	r3, r2
 8000aae:	46a2      	mov	sl, r4
 8000ab0:	9304      	str	r3, [sp, #16]
 8000ab2:	e7d2      	b.n	8000a5a <_vfiprintf_r+0xc6>
 8000ab4:	9b03      	ldr	r3, [sp, #12]
 8000ab6:	1d19      	adds	r1, r3, #4
 8000ab8:	681b      	ldr	r3, [r3, #0]
 8000aba:	9103      	str	r1, [sp, #12]
 8000abc:	2b00      	cmp	r3, #0
 8000abe:	bfbb      	ittet	lt
 8000ac0:	425b      	neglt	r3, r3
 8000ac2:	f042 0202 	orrlt.w	r2, r2, #2
 8000ac6:	9307      	strge	r3, [sp, #28]
 8000ac8:	9307      	strlt	r3, [sp, #28]
 8000aca:	bfb8      	it	lt
 8000acc:	9204      	strlt	r2, [sp, #16]
 8000ace:	7823      	ldrb	r3, [r4, #0]
 8000ad0:	2b2e      	cmp	r3, #46	; 0x2e
 8000ad2:	d10c      	bne.n	8000aee <_vfiprintf_r+0x15a>
 8000ad4:	7863      	ldrb	r3, [r4, #1]
 8000ad6:	2b2a      	cmp	r3, #42	; 0x2a
 8000ad8:	d134      	bne.n	8000b44 <_vfiprintf_r+0x1b0>
 8000ada:	9b03      	ldr	r3, [sp, #12]
 8000adc:	3402      	adds	r4, #2
 8000ade:	1d1a      	adds	r2, r3, #4
 8000ae0:	681b      	ldr	r3, [r3, #0]
 8000ae2:	9203      	str	r2, [sp, #12]
 8000ae4:	2b00      	cmp	r3, #0
 8000ae6:	bfb8      	it	lt
 8000ae8:	f04f 33ff 	movlt.w	r3, #4294967295
 8000aec:	9305      	str	r3, [sp, #20]
 8000aee:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8000bb8 <_vfiprintf_r+0x224>
 8000af2:	2203      	movs	r2, #3
 8000af4:	4650      	mov	r0, sl
 8000af6:	7821      	ldrb	r1, [r4, #0]
 8000af8:	f000 fb4a 	bl	8001190 <memchr>
 8000afc:	b138      	cbz	r0, 8000b0e <_vfiprintf_r+0x17a>
 8000afe:	2240      	movs	r2, #64	; 0x40
 8000b00:	9b04      	ldr	r3, [sp, #16]
 8000b02:	eba0 000a 	sub.w	r0, r0, sl
 8000b06:	4082      	lsls	r2, r0
 8000b08:	4313      	orrs	r3, r2
 8000b0a:	3401      	adds	r4, #1
 8000b0c:	9304      	str	r3, [sp, #16]
 8000b0e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b12:	2206      	movs	r2, #6
 8000b14:	4829      	ldr	r0, [pc, #164]	; (8000bbc <_vfiprintf_r+0x228>)
 8000b16:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b1a:	f000 fb39 	bl	8001190 <memchr>
 8000b1e:	2800      	cmp	r0, #0
 8000b20:	d03f      	beq.n	8000ba2 <_vfiprintf_r+0x20e>
 8000b22:	4b27      	ldr	r3, [pc, #156]	; (8000bc0 <_vfiprintf_r+0x22c>)
 8000b24:	bb1b      	cbnz	r3, 8000b6e <_vfiprintf_r+0x1da>
 8000b26:	9b03      	ldr	r3, [sp, #12]
 8000b28:	3307      	adds	r3, #7
 8000b2a:	f023 0307 	bic.w	r3, r3, #7
 8000b2e:	3308      	adds	r3, #8
 8000b30:	9303      	str	r3, [sp, #12]
 8000b32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b34:	443b      	add	r3, r7
 8000b36:	9309      	str	r3, [sp, #36]	; 0x24
 8000b38:	e768      	b.n	8000a0c <_vfiprintf_r+0x78>
 8000b3a:	460c      	mov	r4, r1
 8000b3c:	2001      	movs	r0, #1
 8000b3e:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b42:	e7a6      	b.n	8000a92 <_vfiprintf_r+0xfe>
 8000b44:	2300      	movs	r3, #0
 8000b46:	f04f 0c0a 	mov.w	ip, #10
 8000b4a:	4619      	mov	r1, r3
 8000b4c:	3401      	adds	r4, #1
 8000b4e:	9305      	str	r3, [sp, #20]
 8000b50:	4620      	mov	r0, r4
 8000b52:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b56:	3a30      	subs	r2, #48	; 0x30
 8000b58:	2a09      	cmp	r2, #9
 8000b5a:	d903      	bls.n	8000b64 <_vfiprintf_r+0x1d0>
 8000b5c:	2b00      	cmp	r3, #0
 8000b5e:	d0c6      	beq.n	8000aee <_vfiprintf_r+0x15a>
 8000b60:	9105      	str	r1, [sp, #20]
 8000b62:	e7c4      	b.n	8000aee <_vfiprintf_r+0x15a>
 8000b64:	4604      	mov	r4, r0
 8000b66:	2301      	movs	r3, #1
 8000b68:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b6c:	e7f0      	b.n	8000b50 <_vfiprintf_r+0x1bc>
 8000b6e:	ab03      	add	r3, sp, #12
 8000b70:	9300      	str	r3, [sp, #0]
 8000b72:	462a      	mov	r2, r5
 8000b74:	4630      	mov	r0, r6
 8000b76:	4b13      	ldr	r3, [pc, #76]	; (8000bc4 <_vfiprintf_r+0x230>)
 8000b78:	a904      	add	r1, sp, #16
 8000b7a:	f3af 8000 	nop.w
 8000b7e:	4607      	mov	r7, r0
 8000b80:	1c78      	adds	r0, r7, #1
 8000b82:	d1d6      	bne.n	8000b32 <_vfiprintf_r+0x19e>
 8000b84:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b86:	07d9      	lsls	r1, r3, #31
 8000b88:	d405      	bmi.n	8000b96 <_vfiprintf_r+0x202>
 8000b8a:	89ab      	ldrh	r3, [r5, #12]
 8000b8c:	059a      	lsls	r2, r3, #22
 8000b8e:	d402      	bmi.n	8000b96 <_vfiprintf_r+0x202>
 8000b90:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b92:	f7ff fde1 	bl	8000758 <__retarget_lock_release_recursive>
 8000b96:	89ab      	ldrh	r3, [r5, #12]
 8000b98:	065b      	lsls	r3, r3, #25
 8000b9a:	f53f af1d 	bmi.w	80009d8 <_vfiprintf_r+0x44>
 8000b9e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000ba0:	e71c      	b.n	80009dc <_vfiprintf_r+0x48>
 8000ba2:	ab03      	add	r3, sp, #12
 8000ba4:	9300      	str	r3, [sp, #0]
 8000ba6:	462a      	mov	r2, r5
 8000ba8:	4630      	mov	r0, r6
 8000baa:	4b06      	ldr	r3, [pc, #24]	; (8000bc4 <_vfiprintf_r+0x230>)
 8000bac:	a904      	add	r1, sp, #16
 8000bae:	f000 f87d 	bl	8000cac <_printf_i>
 8000bb2:	e7e4      	b.n	8000b7e <_vfiprintf_r+0x1ea>
 8000bb4:	080012dd 	.word	0x080012dd
 8000bb8:	080012e3 	.word	0x080012e3
 8000bbc:	080012e7 	.word	0x080012e7
 8000bc0:	00000000 	.word	0x00000000
 8000bc4:	0800096f 	.word	0x0800096f

08000bc8 <_printf_common>:
 8000bc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bcc:	4616      	mov	r6, r2
 8000bce:	4699      	mov	r9, r3
 8000bd0:	688a      	ldr	r2, [r1, #8]
 8000bd2:	690b      	ldr	r3, [r1, #16]
 8000bd4:	4607      	mov	r7, r0
 8000bd6:	4293      	cmp	r3, r2
 8000bd8:	bfb8      	it	lt
 8000bda:	4613      	movlt	r3, r2
 8000bdc:	6033      	str	r3, [r6, #0]
 8000bde:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000be2:	460c      	mov	r4, r1
 8000be4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000be8:	b10a      	cbz	r2, 8000bee <_printf_common+0x26>
 8000bea:	3301      	adds	r3, #1
 8000bec:	6033      	str	r3, [r6, #0]
 8000bee:	6823      	ldr	r3, [r4, #0]
 8000bf0:	0699      	lsls	r1, r3, #26
 8000bf2:	bf42      	ittt	mi
 8000bf4:	6833      	ldrmi	r3, [r6, #0]
 8000bf6:	3302      	addmi	r3, #2
 8000bf8:	6033      	strmi	r3, [r6, #0]
 8000bfa:	6825      	ldr	r5, [r4, #0]
 8000bfc:	f015 0506 	ands.w	r5, r5, #6
 8000c00:	d106      	bne.n	8000c10 <_printf_common+0x48>
 8000c02:	f104 0a19 	add.w	sl, r4, #25
 8000c06:	68e3      	ldr	r3, [r4, #12]
 8000c08:	6832      	ldr	r2, [r6, #0]
 8000c0a:	1a9b      	subs	r3, r3, r2
 8000c0c:	42ab      	cmp	r3, r5
 8000c0e:	dc2b      	bgt.n	8000c68 <_printf_common+0xa0>
 8000c10:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c14:	1e13      	subs	r3, r2, #0
 8000c16:	6822      	ldr	r2, [r4, #0]
 8000c18:	bf18      	it	ne
 8000c1a:	2301      	movne	r3, #1
 8000c1c:	0692      	lsls	r2, r2, #26
 8000c1e:	d430      	bmi.n	8000c82 <_printf_common+0xba>
 8000c20:	4649      	mov	r1, r9
 8000c22:	4638      	mov	r0, r7
 8000c24:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c28:	47c0      	blx	r8
 8000c2a:	3001      	adds	r0, #1
 8000c2c:	d023      	beq.n	8000c76 <_printf_common+0xae>
 8000c2e:	6823      	ldr	r3, [r4, #0]
 8000c30:	6922      	ldr	r2, [r4, #16]
 8000c32:	f003 0306 	and.w	r3, r3, #6
 8000c36:	2b04      	cmp	r3, #4
 8000c38:	bf14      	ite	ne
 8000c3a:	2500      	movne	r5, #0
 8000c3c:	6833      	ldreq	r3, [r6, #0]
 8000c3e:	f04f 0600 	mov.w	r6, #0
 8000c42:	bf08      	it	eq
 8000c44:	68e5      	ldreq	r5, [r4, #12]
 8000c46:	f104 041a 	add.w	r4, r4, #26
 8000c4a:	bf08      	it	eq
 8000c4c:	1aed      	subeq	r5, r5, r3
 8000c4e:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8000c52:	bf08      	it	eq
 8000c54:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c58:	4293      	cmp	r3, r2
 8000c5a:	bfc4      	itt	gt
 8000c5c:	1a9b      	subgt	r3, r3, r2
 8000c5e:	18ed      	addgt	r5, r5, r3
 8000c60:	42b5      	cmp	r5, r6
 8000c62:	d11a      	bne.n	8000c9a <_printf_common+0xd2>
 8000c64:	2000      	movs	r0, #0
 8000c66:	e008      	b.n	8000c7a <_printf_common+0xb2>
 8000c68:	2301      	movs	r3, #1
 8000c6a:	4652      	mov	r2, sl
 8000c6c:	4649      	mov	r1, r9
 8000c6e:	4638      	mov	r0, r7
 8000c70:	47c0      	blx	r8
 8000c72:	3001      	adds	r0, #1
 8000c74:	d103      	bne.n	8000c7e <_printf_common+0xb6>
 8000c76:	f04f 30ff 	mov.w	r0, #4294967295
 8000c7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c7e:	3501      	adds	r5, #1
 8000c80:	e7c1      	b.n	8000c06 <_printf_common+0x3e>
 8000c82:	2030      	movs	r0, #48	; 0x30
 8000c84:	18e1      	adds	r1, r4, r3
 8000c86:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c8a:	1c5a      	adds	r2, r3, #1
 8000c8c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c90:	4422      	add	r2, r4
 8000c92:	3302      	adds	r3, #2
 8000c94:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c98:	e7c2      	b.n	8000c20 <_printf_common+0x58>
 8000c9a:	2301      	movs	r3, #1
 8000c9c:	4622      	mov	r2, r4
 8000c9e:	4649      	mov	r1, r9
 8000ca0:	4638      	mov	r0, r7
 8000ca2:	47c0      	blx	r8
 8000ca4:	3001      	adds	r0, #1
 8000ca6:	d0e6      	beq.n	8000c76 <_printf_common+0xae>
 8000ca8:	3601      	adds	r6, #1
 8000caa:	e7d9      	b.n	8000c60 <_printf_common+0x98>

08000cac <_printf_i>:
 8000cac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000cb0:	7e0f      	ldrb	r7, [r1, #24]
 8000cb2:	4691      	mov	r9, r2
 8000cb4:	2f78      	cmp	r7, #120	; 0x78
 8000cb6:	4680      	mov	r8, r0
 8000cb8:	460c      	mov	r4, r1
 8000cba:	469a      	mov	sl, r3
 8000cbc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000cbe:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000cc2:	d807      	bhi.n	8000cd4 <_printf_i+0x28>
 8000cc4:	2f62      	cmp	r7, #98	; 0x62
 8000cc6:	d80a      	bhi.n	8000cde <_printf_i+0x32>
 8000cc8:	2f00      	cmp	r7, #0
 8000cca:	f000 80d5 	beq.w	8000e78 <_printf_i+0x1cc>
 8000cce:	2f58      	cmp	r7, #88	; 0x58
 8000cd0:	f000 80c1 	beq.w	8000e56 <_printf_i+0x1aa>
 8000cd4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000cd8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000cdc:	e03a      	b.n	8000d54 <_printf_i+0xa8>
 8000cde:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000ce2:	2b15      	cmp	r3, #21
 8000ce4:	d8f6      	bhi.n	8000cd4 <_printf_i+0x28>
 8000ce6:	a101      	add	r1, pc, #4	; (adr r1, 8000cec <_printf_i+0x40>)
 8000ce8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000cec:	08000d45 	.word	0x08000d45
 8000cf0:	08000d59 	.word	0x08000d59
 8000cf4:	08000cd5 	.word	0x08000cd5
 8000cf8:	08000cd5 	.word	0x08000cd5
 8000cfc:	08000cd5 	.word	0x08000cd5
 8000d00:	08000cd5 	.word	0x08000cd5
 8000d04:	08000d59 	.word	0x08000d59
 8000d08:	08000cd5 	.word	0x08000cd5
 8000d0c:	08000cd5 	.word	0x08000cd5
 8000d10:	08000cd5 	.word	0x08000cd5
 8000d14:	08000cd5 	.word	0x08000cd5
 8000d18:	08000e5f 	.word	0x08000e5f
 8000d1c:	08000d85 	.word	0x08000d85
 8000d20:	08000e19 	.word	0x08000e19
 8000d24:	08000cd5 	.word	0x08000cd5
 8000d28:	08000cd5 	.word	0x08000cd5
 8000d2c:	08000e81 	.word	0x08000e81
 8000d30:	08000cd5 	.word	0x08000cd5
 8000d34:	08000d85 	.word	0x08000d85
 8000d38:	08000cd5 	.word	0x08000cd5
 8000d3c:	08000cd5 	.word	0x08000cd5
 8000d40:	08000e21 	.word	0x08000e21
 8000d44:	682b      	ldr	r3, [r5, #0]
 8000d46:	1d1a      	adds	r2, r3, #4
 8000d48:	681b      	ldr	r3, [r3, #0]
 8000d4a:	602a      	str	r2, [r5, #0]
 8000d4c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d50:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d54:	2301      	movs	r3, #1
 8000d56:	e0a0      	b.n	8000e9a <_printf_i+0x1ee>
 8000d58:	6820      	ldr	r0, [r4, #0]
 8000d5a:	682b      	ldr	r3, [r5, #0]
 8000d5c:	0607      	lsls	r7, r0, #24
 8000d5e:	f103 0104 	add.w	r1, r3, #4
 8000d62:	6029      	str	r1, [r5, #0]
 8000d64:	d501      	bpl.n	8000d6a <_printf_i+0xbe>
 8000d66:	681e      	ldr	r6, [r3, #0]
 8000d68:	e003      	b.n	8000d72 <_printf_i+0xc6>
 8000d6a:	0646      	lsls	r6, r0, #25
 8000d6c:	d5fb      	bpl.n	8000d66 <_printf_i+0xba>
 8000d6e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000d72:	2e00      	cmp	r6, #0
 8000d74:	da03      	bge.n	8000d7e <_printf_i+0xd2>
 8000d76:	232d      	movs	r3, #45	; 0x2d
 8000d78:	4276      	negs	r6, r6
 8000d7a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d7e:	230a      	movs	r3, #10
 8000d80:	4859      	ldr	r0, [pc, #356]	; (8000ee8 <_printf_i+0x23c>)
 8000d82:	e012      	b.n	8000daa <_printf_i+0xfe>
 8000d84:	682b      	ldr	r3, [r5, #0]
 8000d86:	6820      	ldr	r0, [r4, #0]
 8000d88:	1d19      	adds	r1, r3, #4
 8000d8a:	6029      	str	r1, [r5, #0]
 8000d8c:	0605      	lsls	r5, r0, #24
 8000d8e:	d501      	bpl.n	8000d94 <_printf_i+0xe8>
 8000d90:	681e      	ldr	r6, [r3, #0]
 8000d92:	e002      	b.n	8000d9a <_printf_i+0xee>
 8000d94:	0641      	lsls	r1, r0, #25
 8000d96:	d5fb      	bpl.n	8000d90 <_printf_i+0xe4>
 8000d98:	881e      	ldrh	r6, [r3, #0]
 8000d9a:	2f6f      	cmp	r7, #111	; 0x6f
 8000d9c:	bf0c      	ite	eq
 8000d9e:	2308      	moveq	r3, #8
 8000da0:	230a      	movne	r3, #10
 8000da2:	4851      	ldr	r0, [pc, #324]	; (8000ee8 <_printf_i+0x23c>)
 8000da4:	2100      	movs	r1, #0
 8000da6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000daa:	6865      	ldr	r5, [r4, #4]
 8000dac:	2d00      	cmp	r5, #0
 8000dae:	bfa8      	it	ge
 8000db0:	6821      	ldrge	r1, [r4, #0]
 8000db2:	60a5      	str	r5, [r4, #8]
 8000db4:	bfa4      	itt	ge
 8000db6:	f021 0104 	bicge.w	r1, r1, #4
 8000dba:	6021      	strge	r1, [r4, #0]
 8000dbc:	b90e      	cbnz	r6, 8000dc2 <_printf_i+0x116>
 8000dbe:	2d00      	cmp	r5, #0
 8000dc0:	d04b      	beq.n	8000e5a <_printf_i+0x1ae>
 8000dc2:	4615      	mov	r5, r2
 8000dc4:	fbb6 f1f3 	udiv	r1, r6, r3
 8000dc8:	fb03 6711 	mls	r7, r3, r1, r6
 8000dcc:	5dc7      	ldrb	r7, [r0, r7]
 8000dce:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000dd2:	4637      	mov	r7, r6
 8000dd4:	42bb      	cmp	r3, r7
 8000dd6:	460e      	mov	r6, r1
 8000dd8:	d9f4      	bls.n	8000dc4 <_printf_i+0x118>
 8000dda:	2b08      	cmp	r3, #8
 8000ddc:	d10b      	bne.n	8000df6 <_printf_i+0x14a>
 8000dde:	6823      	ldr	r3, [r4, #0]
 8000de0:	07de      	lsls	r6, r3, #31
 8000de2:	d508      	bpl.n	8000df6 <_printf_i+0x14a>
 8000de4:	6923      	ldr	r3, [r4, #16]
 8000de6:	6861      	ldr	r1, [r4, #4]
 8000de8:	4299      	cmp	r1, r3
 8000dea:	bfde      	ittt	le
 8000dec:	2330      	movle	r3, #48	; 0x30
 8000dee:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000df2:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000df6:	1b52      	subs	r2, r2, r5
 8000df8:	6122      	str	r2, [r4, #16]
 8000dfa:	464b      	mov	r3, r9
 8000dfc:	4621      	mov	r1, r4
 8000dfe:	4640      	mov	r0, r8
 8000e00:	f8cd a000 	str.w	sl, [sp]
 8000e04:	aa03      	add	r2, sp, #12
 8000e06:	f7ff fedf 	bl	8000bc8 <_printf_common>
 8000e0a:	3001      	adds	r0, #1
 8000e0c:	d14a      	bne.n	8000ea4 <_printf_i+0x1f8>
 8000e0e:	f04f 30ff 	mov.w	r0, #4294967295
 8000e12:	b004      	add	sp, #16
 8000e14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e18:	6823      	ldr	r3, [r4, #0]
 8000e1a:	f043 0320 	orr.w	r3, r3, #32
 8000e1e:	6023      	str	r3, [r4, #0]
 8000e20:	2778      	movs	r7, #120	; 0x78
 8000e22:	4832      	ldr	r0, [pc, #200]	; (8000eec <_printf_i+0x240>)
 8000e24:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000e28:	6823      	ldr	r3, [r4, #0]
 8000e2a:	6829      	ldr	r1, [r5, #0]
 8000e2c:	061f      	lsls	r7, r3, #24
 8000e2e:	f851 6b04 	ldr.w	r6, [r1], #4
 8000e32:	d402      	bmi.n	8000e3a <_printf_i+0x18e>
 8000e34:	065f      	lsls	r7, r3, #25
 8000e36:	bf48      	it	mi
 8000e38:	b2b6      	uxthmi	r6, r6
 8000e3a:	07df      	lsls	r7, r3, #31
 8000e3c:	bf48      	it	mi
 8000e3e:	f043 0320 	orrmi.w	r3, r3, #32
 8000e42:	6029      	str	r1, [r5, #0]
 8000e44:	bf48      	it	mi
 8000e46:	6023      	strmi	r3, [r4, #0]
 8000e48:	b91e      	cbnz	r6, 8000e52 <_printf_i+0x1a6>
 8000e4a:	6823      	ldr	r3, [r4, #0]
 8000e4c:	f023 0320 	bic.w	r3, r3, #32
 8000e50:	6023      	str	r3, [r4, #0]
 8000e52:	2310      	movs	r3, #16
 8000e54:	e7a6      	b.n	8000da4 <_printf_i+0xf8>
 8000e56:	4824      	ldr	r0, [pc, #144]	; (8000ee8 <_printf_i+0x23c>)
 8000e58:	e7e4      	b.n	8000e24 <_printf_i+0x178>
 8000e5a:	4615      	mov	r5, r2
 8000e5c:	e7bd      	b.n	8000dda <_printf_i+0x12e>
 8000e5e:	682b      	ldr	r3, [r5, #0]
 8000e60:	6826      	ldr	r6, [r4, #0]
 8000e62:	1d18      	adds	r0, r3, #4
 8000e64:	6961      	ldr	r1, [r4, #20]
 8000e66:	6028      	str	r0, [r5, #0]
 8000e68:	0635      	lsls	r5, r6, #24
 8000e6a:	681b      	ldr	r3, [r3, #0]
 8000e6c:	d501      	bpl.n	8000e72 <_printf_i+0x1c6>
 8000e6e:	6019      	str	r1, [r3, #0]
 8000e70:	e002      	b.n	8000e78 <_printf_i+0x1cc>
 8000e72:	0670      	lsls	r0, r6, #25
 8000e74:	d5fb      	bpl.n	8000e6e <_printf_i+0x1c2>
 8000e76:	8019      	strh	r1, [r3, #0]
 8000e78:	2300      	movs	r3, #0
 8000e7a:	4615      	mov	r5, r2
 8000e7c:	6123      	str	r3, [r4, #16]
 8000e7e:	e7bc      	b.n	8000dfa <_printf_i+0x14e>
 8000e80:	682b      	ldr	r3, [r5, #0]
 8000e82:	2100      	movs	r1, #0
 8000e84:	1d1a      	adds	r2, r3, #4
 8000e86:	602a      	str	r2, [r5, #0]
 8000e88:	681d      	ldr	r5, [r3, #0]
 8000e8a:	6862      	ldr	r2, [r4, #4]
 8000e8c:	4628      	mov	r0, r5
 8000e8e:	f000 f97f 	bl	8001190 <memchr>
 8000e92:	b108      	cbz	r0, 8000e98 <_printf_i+0x1ec>
 8000e94:	1b40      	subs	r0, r0, r5
 8000e96:	6060      	str	r0, [r4, #4]
 8000e98:	6863      	ldr	r3, [r4, #4]
 8000e9a:	6123      	str	r3, [r4, #16]
 8000e9c:	2300      	movs	r3, #0
 8000e9e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ea2:	e7aa      	b.n	8000dfa <_printf_i+0x14e>
 8000ea4:	462a      	mov	r2, r5
 8000ea6:	4649      	mov	r1, r9
 8000ea8:	4640      	mov	r0, r8
 8000eaa:	6923      	ldr	r3, [r4, #16]
 8000eac:	47d0      	blx	sl
 8000eae:	3001      	adds	r0, #1
 8000eb0:	d0ad      	beq.n	8000e0e <_printf_i+0x162>
 8000eb2:	6823      	ldr	r3, [r4, #0]
 8000eb4:	079b      	lsls	r3, r3, #30
 8000eb6:	d413      	bmi.n	8000ee0 <_printf_i+0x234>
 8000eb8:	68e0      	ldr	r0, [r4, #12]
 8000eba:	9b03      	ldr	r3, [sp, #12]
 8000ebc:	4298      	cmp	r0, r3
 8000ebe:	bfb8      	it	lt
 8000ec0:	4618      	movlt	r0, r3
 8000ec2:	e7a6      	b.n	8000e12 <_printf_i+0x166>
 8000ec4:	2301      	movs	r3, #1
 8000ec6:	4632      	mov	r2, r6
 8000ec8:	4649      	mov	r1, r9
 8000eca:	4640      	mov	r0, r8
 8000ecc:	47d0      	blx	sl
 8000ece:	3001      	adds	r0, #1
 8000ed0:	d09d      	beq.n	8000e0e <_printf_i+0x162>
 8000ed2:	3501      	adds	r5, #1
 8000ed4:	68e3      	ldr	r3, [r4, #12]
 8000ed6:	9903      	ldr	r1, [sp, #12]
 8000ed8:	1a5b      	subs	r3, r3, r1
 8000eda:	42ab      	cmp	r3, r5
 8000edc:	dcf2      	bgt.n	8000ec4 <_printf_i+0x218>
 8000ede:	e7eb      	b.n	8000eb8 <_printf_i+0x20c>
 8000ee0:	2500      	movs	r5, #0
 8000ee2:	f104 0619 	add.w	r6, r4, #25
 8000ee6:	e7f5      	b.n	8000ed4 <_printf_i+0x228>
 8000ee8:	080012ee 	.word	0x080012ee
 8000eec:	080012ff 	.word	0x080012ff

08000ef0 <__sflush_r>:
 8000ef0:	898a      	ldrh	r2, [r1, #12]
 8000ef2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ef4:	4605      	mov	r5, r0
 8000ef6:	0710      	lsls	r0, r2, #28
 8000ef8:	460c      	mov	r4, r1
 8000efa:	d457      	bmi.n	8000fac <__sflush_r+0xbc>
 8000efc:	684b      	ldr	r3, [r1, #4]
 8000efe:	2b00      	cmp	r3, #0
 8000f00:	dc04      	bgt.n	8000f0c <__sflush_r+0x1c>
 8000f02:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f04:	2b00      	cmp	r3, #0
 8000f06:	dc01      	bgt.n	8000f0c <__sflush_r+0x1c>
 8000f08:	2000      	movs	r0, #0
 8000f0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f0c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f0e:	2e00      	cmp	r6, #0
 8000f10:	d0fa      	beq.n	8000f08 <__sflush_r+0x18>
 8000f12:	2300      	movs	r3, #0
 8000f14:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000f18:	682f      	ldr	r7, [r5, #0]
 8000f1a:	6a21      	ldr	r1, [r4, #32]
 8000f1c:	602b      	str	r3, [r5, #0]
 8000f1e:	d032      	beq.n	8000f86 <__sflush_r+0x96>
 8000f20:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000f22:	89a3      	ldrh	r3, [r4, #12]
 8000f24:	075a      	lsls	r2, r3, #29
 8000f26:	d505      	bpl.n	8000f34 <__sflush_r+0x44>
 8000f28:	6863      	ldr	r3, [r4, #4]
 8000f2a:	1ac0      	subs	r0, r0, r3
 8000f2c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000f2e:	b10b      	cbz	r3, 8000f34 <__sflush_r+0x44>
 8000f30:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f32:	1ac0      	subs	r0, r0, r3
 8000f34:	2300      	movs	r3, #0
 8000f36:	4602      	mov	r2, r0
 8000f38:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f3a:	4628      	mov	r0, r5
 8000f3c:	6a21      	ldr	r1, [r4, #32]
 8000f3e:	47b0      	blx	r6
 8000f40:	1c43      	adds	r3, r0, #1
 8000f42:	89a3      	ldrh	r3, [r4, #12]
 8000f44:	d106      	bne.n	8000f54 <__sflush_r+0x64>
 8000f46:	6829      	ldr	r1, [r5, #0]
 8000f48:	291d      	cmp	r1, #29
 8000f4a:	d82b      	bhi.n	8000fa4 <__sflush_r+0xb4>
 8000f4c:	4a28      	ldr	r2, [pc, #160]	; (8000ff0 <__sflush_r+0x100>)
 8000f4e:	410a      	asrs	r2, r1
 8000f50:	07d6      	lsls	r6, r2, #31
 8000f52:	d427      	bmi.n	8000fa4 <__sflush_r+0xb4>
 8000f54:	2200      	movs	r2, #0
 8000f56:	6062      	str	r2, [r4, #4]
 8000f58:	6922      	ldr	r2, [r4, #16]
 8000f5a:	04d9      	lsls	r1, r3, #19
 8000f5c:	6022      	str	r2, [r4, #0]
 8000f5e:	d504      	bpl.n	8000f6a <__sflush_r+0x7a>
 8000f60:	1c42      	adds	r2, r0, #1
 8000f62:	d101      	bne.n	8000f68 <__sflush_r+0x78>
 8000f64:	682b      	ldr	r3, [r5, #0]
 8000f66:	b903      	cbnz	r3, 8000f6a <__sflush_r+0x7a>
 8000f68:	6560      	str	r0, [r4, #84]	; 0x54
 8000f6a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f6c:	602f      	str	r7, [r5, #0]
 8000f6e:	2900      	cmp	r1, #0
 8000f70:	d0ca      	beq.n	8000f08 <__sflush_r+0x18>
 8000f72:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f76:	4299      	cmp	r1, r3
 8000f78:	d002      	beq.n	8000f80 <__sflush_r+0x90>
 8000f7a:	4628      	mov	r0, r5
 8000f7c:	f7ff fbee 	bl	800075c <_free_r>
 8000f80:	2000      	movs	r0, #0
 8000f82:	6360      	str	r0, [r4, #52]	; 0x34
 8000f84:	e7c1      	b.n	8000f0a <__sflush_r+0x1a>
 8000f86:	2301      	movs	r3, #1
 8000f88:	4628      	mov	r0, r5
 8000f8a:	47b0      	blx	r6
 8000f8c:	1c41      	adds	r1, r0, #1
 8000f8e:	d1c8      	bne.n	8000f22 <__sflush_r+0x32>
 8000f90:	682b      	ldr	r3, [r5, #0]
 8000f92:	2b00      	cmp	r3, #0
 8000f94:	d0c5      	beq.n	8000f22 <__sflush_r+0x32>
 8000f96:	2b1d      	cmp	r3, #29
 8000f98:	d001      	beq.n	8000f9e <__sflush_r+0xae>
 8000f9a:	2b16      	cmp	r3, #22
 8000f9c:	d101      	bne.n	8000fa2 <__sflush_r+0xb2>
 8000f9e:	602f      	str	r7, [r5, #0]
 8000fa0:	e7b2      	b.n	8000f08 <__sflush_r+0x18>
 8000fa2:	89a3      	ldrh	r3, [r4, #12]
 8000fa4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fa8:	81a3      	strh	r3, [r4, #12]
 8000faa:	e7ae      	b.n	8000f0a <__sflush_r+0x1a>
 8000fac:	690f      	ldr	r7, [r1, #16]
 8000fae:	2f00      	cmp	r7, #0
 8000fb0:	d0aa      	beq.n	8000f08 <__sflush_r+0x18>
 8000fb2:	0793      	lsls	r3, r2, #30
 8000fb4:	bf18      	it	ne
 8000fb6:	2300      	movne	r3, #0
 8000fb8:	680e      	ldr	r6, [r1, #0]
 8000fba:	bf08      	it	eq
 8000fbc:	694b      	ldreq	r3, [r1, #20]
 8000fbe:	1bf6      	subs	r6, r6, r7
 8000fc0:	600f      	str	r7, [r1, #0]
 8000fc2:	608b      	str	r3, [r1, #8]
 8000fc4:	2e00      	cmp	r6, #0
 8000fc6:	dd9f      	ble.n	8000f08 <__sflush_r+0x18>
 8000fc8:	4633      	mov	r3, r6
 8000fca:	463a      	mov	r2, r7
 8000fcc:	4628      	mov	r0, r5
 8000fce:	6a21      	ldr	r1, [r4, #32]
 8000fd0:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000fd4:	47e0      	blx	ip
 8000fd6:	2800      	cmp	r0, #0
 8000fd8:	dc06      	bgt.n	8000fe8 <__sflush_r+0xf8>
 8000fda:	89a3      	ldrh	r3, [r4, #12]
 8000fdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000fe0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fe4:	81a3      	strh	r3, [r4, #12]
 8000fe6:	e790      	b.n	8000f0a <__sflush_r+0x1a>
 8000fe8:	4407      	add	r7, r0
 8000fea:	1a36      	subs	r6, r6, r0
 8000fec:	e7ea      	b.n	8000fc4 <__sflush_r+0xd4>
 8000fee:	bf00      	nop
 8000ff0:	dfbffffe 	.word	0xdfbffffe

08000ff4 <_fflush_r>:
 8000ff4:	b538      	push	{r3, r4, r5, lr}
 8000ff6:	690b      	ldr	r3, [r1, #16]
 8000ff8:	4605      	mov	r5, r0
 8000ffa:	460c      	mov	r4, r1
 8000ffc:	b913      	cbnz	r3, 8001004 <_fflush_r+0x10>
 8000ffe:	2500      	movs	r5, #0
 8001000:	4628      	mov	r0, r5
 8001002:	bd38      	pop	{r3, r4, r5, pc}
 8001004:	b118      	cbz	r0, 800100e <_fflush_r+0x1a>
 8001006:	6a03      	ldr	r3, [r0, #32]
 8001008:	b90b      	cbnz	r3, 800100e <_fflush_r+0x1a>
 800100a:	f7ff fa9f 	bl	800054c <__sinit>
 800100e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001012:	2b00      	cmp	r3, #0
 8001014:	d0f3      	beq.n	8000ffe <_fflush_r+0xa>
 8001016:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001018:	07d0      	lsls	r0, r2, #31
 800101a:	d404      	bmi.n	8001026 <_fflush_r+0x32>
 800101c:	0599      	lsls	r1, r3, #22
 800101e:	d402      	bmi.n	8001026 <_fflush_r+0x32>
 8001020:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001022:	f7ff fb98 	bl	8000756 <__retarget_lock_acquire_recursive>
 8001026:	4628      	mov	r0, r5
 8001028:	4621      	mov	r1, r4
 800102a:	f7ff ff61 	bl	8000ef0 <__sflush_r>
 800102e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001030:	4605      	mov	r5, r0
 8001032:	07da      	lsls	r2, r3, #31
 8001034:	d4e4      	bmi.n	8001000 <_fflush_r+0xc>
 8001036:	89a3      	ldrh	r3, [r4, #12]
 8001038:	059b      	lsls	r3, r3, #22
 800103a:	d4e1      	bmi.n	8001000 <_fflush_r+0xc>
 800103c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800103e:	f7ff fb8b 	bl	8000758 <__retarget_lock_release_recursive>
 8001042:	e7dd      	b.n	8001000 <_fflush_r+0xc>

08001044 <__swbuf_r>:
 8001044:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001046:	460e      	mov	r6, r1
 8001048:	4614      	mov	r4, r2
 800104a:	4605      	mov	r5, r0
 800104c:	b118      	cbz	r0, 8001056 <__swbuf_r+0x12>
 800104e:	6a03      	ldr	r3, [r0, #32]
 8001050:	b90b      	cbnz	r3, 8001056 <__swbuf_r+0x12>
 8001052:	f7ff fa7b 	bl	800054c <__sinit>
 8001056:	69a3      	ldr	r3, [r4, #24]
 8001058:	60a3      	str	r3, [r4, #8]
 800105a:	89a3      	ldrh	r3, [r4, #12]
 800105c:	071a      	lsls	r2, r3, #28
 800105e:	d525      	bpl.n	80010ac <__swbuf_r+0x68>
 8001060:	6923      	ldr	r3, [r4, #16]
 8001062:	b31b      	cbz	r3, 80010ac <__swbuf_r+0x68>
 8001064:	6823      	ldr	r3, [r4, #0]
 8001066:	6922      	ldr	r2, [r4, #16]
 8001068:	b2f6      	uxtb	r6, r6
 800106a:	1a98      	subs	r0, r3, r2
 800106c:	6963      	ldr	r3, [r4, #20]
 800106e:	4637      	mov	r7, r6
 8001070:	4283      	cmp	r3, r0
 8001072:	dc04      	bgt.n	800107e <__swbuf_r+0x3a>
 8001074:	4621      	mov	r1, r4
 8001076:	4628      	mov	r0, r5
 8001078:	f7ff ffbc 	bl	8000ff4 <_fflush_r>
 800107c:	b9e0      	cbnz	r0, 80010b8 <__swbuf_r+0x74>
 800107e:	68a3      	ldr	r3, [r4, #8]
 8001080:	3b01      	subs	r3, #1
 8001082:	60a3      	str	r3, [r4, #8]
 8001084:	6823      	ldr	r3, [r4, #0]
 8001086:	1c5a      	adds	r2, r3, #1
 8001088:	6022      	str	r2, [r4, #0]
 800108a:	701e      	strb	r6, [r3, #0]
 800108c:	6962      	ldr	r2, [r4, #20]
 800108e:	1c43      	adds	r3, r0, #1
 8001090:	429a      	cmp	r2, r3
 8001092:	d004      	beq.n	800109e <__swbuf_r+0x5a>
 8001094:	89a3      	ldrh	r3, [r4, #12]
 8001096:	07db      	lsls	r3, r3, #31
 8001098:	d506      	bpl.n	80010a8 <__swbuf_r+0x64>
 800109a:	2e0a      	cmp	r6, #10
 800109c:	d104      	bne.n	80010a8 <__swbuf_r+0x64>
 800109e:	4621      	mov	r1, r4
 80010a0:	4628      	mov	r0, r5
 80010a2:	f7ff ffa7 	bl	8000ff4 <_fflush_r>
 80010a6:	b938      	cbnz	r0, 80010b8 <__swbuf_r+0x74>
 80010a8:	4638      	mov	r0, r7
 80010aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010ac:	4621      	mov	r1, r4
 80010ae:	4628      	mov	r0, r5
 80010b0:	f000 f806 	bl	80010c0 <__swsetup_r>
 80010b4:	2800      	cmp	r0, #0
 80010b6:	d0d5      	beq.n	8001064 <__swbuf_r+0x20>
 80010b8:	f04f 37ff 	mov.w	r7, #4294967295
 80010bc:	e7f4      	b.n	80010a8 <__swbuf_r+0x64>
	...

080010c0 <__swsetup_r>:
 80010c0:	b538      	push	{r3, r4, r5, lr}
 80010c2:	4b2a      	ldr	r3, [pc, #168]	; (800116c <__swsetup_r+0xac>)
 80010c4:	4605      	mov	r5, r0
 80010c6:	6818      	ldr	r0, [r3, #0]
 80010c8:	460c      	mov	r4, r1
 80010ca:	b118      	cbz	r0, 80010d4 <__swsetup_r+0x14>
 80010cc:	6a03      	ldr	r3, [r0, #32]
 80010ce:	b90b      	cbnz	r3, 80010d4 <__swsetup_r+0x14>
 80010d0:	f7ff fa3c 	bl	800054c <__sinit>
 80010d4:	89a3      	ldrh	r3, [r4, #12]
 80010d6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80010da:	0718      	lsls	r0, r3, #28
 80010dc:	d422      	bmi.n	8001124 <__swsetup_r+0x64>
 80010de:	06d9      	lsls	r1, r3, #27
 80010e0:	d407      	bmi.n	80010f2 <__swsetup_r+0x32>
 80010e2:	2309      	movs	r3, #9
 80010e4:	602b      	str	r3, [r5, #0]
 80010e6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80010ea:	f04f 30ff 	mov.w	r0, #4294967295
 80010ee:	81a3      	strh	r3, [r4, #12]
 80010f0:	e034      	b.n	800115c <__swsetup_r+0x9c>
 80010f2:	0758      	lsls	r0, r3, #29
 80010f4:	d512      	bpl.n	800111c <__swsetup_r+0x5c>
 80010f6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80010f8:	b141      	cbz	r1, 800110c <__swsetup_r+0x4c>
 80010fa:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010fe:	4299      	cmp	r1, r3
 8001100:	d002      	beq.n	8001108 <__swsetup_r+0x48>
 8001102:	4628      	mov	r0, r5
 8001104:	f7ff fb2a 	bl	800075c <_free_r>
 8001108:	2300      	movs	r3, #0
 800110a:	6363      	str	r3, [r4, #52]	; 0x34
 800110c:	89a3      	ldrh	r3, [r4, #12]
 800110e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001112:	81a3      	strh	r3, [r4, #12]
 8001114:	2300      	movs	r3, #0
 8001116:	6063      	str	r3, [r4, #4]
 8001118:	6923      	ldr	r3, [r4, #16]
 800111a:	6023      	str	r3, [r4, #0]
 800111c:	89a3      	ldrh	r3, [r4, #12]
 800111e:	f043 0308 	orr.w	r3, r3, #8
 8001122:	81a3      	strh	r3, [r4, #12]
 8001124:	6923      	ldr	r3, [r4, #16]
 8001126:	b94b      	cbnz	r3, 800113c <__swsetup_r+0x7c>
 8001128:	89a3      	ldrh	r3, [r4, #12]
 800112a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800112e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001132:	d003      	beq.n	800113c <__swsetup_r+0x7c>
 8001134:	4621      	mov	r1, r4
 8001136:	4628      	mov	r0, r5
 8001138:	f000 f85d 	bl	80011f6 <__smakebuf_r>
 800113c:	89a0      	ldrh	r0, [r4, #12]
 800113e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001142:	f010 0301 	ands.w	r3, r0, #1
 8001146:	d00a      	beq.n	800115e <__swsetup_r+0x9e>
 8001148:	2300      	movs	r3, #0
 800114a:	60a3      	str	r3, [r4, #8]
 800114c:	6963      	ldr	r3, [r4, #20]
 800114e:	425b      	negs	r3, r3
 8001150:	61a3      	str	r3, [r4, #24]
 8001152:	6923      	ldr	r3, [r4, #16]
 8001154:	b943      	cbnz	r3, 8001168 <__swsetup_r+0xa8>
 8001156:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800115a:	d1c4      	bne.n	80010e6 <__swsetup_r+0x26>
 800115c:	bd38      	pop	{r3, r4, r5, pc}
 800115e:	0781      	lsls	r1, r0, #30
 8001160:	bf58      	it	pl
 8001162:	6963      	ldrpl	r3, [r4, #20]
 8001164:	60a3      	str	r3, [r4, #8]
 8001166:	e7f4      	b.n	8001152 <__swsetup_r+0x92>
 8001168:	2000      	movs	r0, #0
 800116a:	e7f7      	b.n	800115c <__swsetup_r+0x9c>
 800116c:	20000058 	.word	0x20000058

08001170 <_sbrk_r>:
 8001170:	b538      	push	{r3, r4, r5, lr}
 8001172:	2300      	movs	r3, #0
 8001174:	4d05      	ldr	r5, [pc, #20]	; (800118c <_sbrk_r+0x1c>)
 8001176:	4604      	mov	r4, r0
 8001178:	4608      	mov	r0, r1
 800117a:	602b      	str	r3, [r5, #0]
 800117c:	f7ff f8fa 	bl	8000374 <_sbrk>
 8001180:	1c43      	adds	r3, r0, #1
 8001182:	d102      	bne.n	800118a <_sbrk_r+0x1a>
 8001184:	682b      	ldr	r3, [r5, #0]
 8001186:	b103      	cbz	r3, 800118a <_sbrk_r+0x1a>
 8001188:	6023      	str	r3, [r4, #0]
 800118a:	bd38      	pop	{r3, r4, r5, pc}
 800118c:	200001b8 	.word	0x200001b8

08001190 <memchr>:
 8001190:	4603      	mov	r3, r0
 8001192:	b510      	push	{r4, lr}
 8001194:	b2c9      	uxtb	r1, r1
 8001196:	4402      	add	r2, r0
 8001198:	4293      	cmp	r3, r2
 800119a:	4618      	mov	r0, r3
 800119c:	d101      	bne.n	80011a2 <memchr+0x12>
 800119e:	2000      	movs	r0, #0
 80011a0:	e003      	b.n	80011aa <memchr+0x1a>
 80011a2:	7804      	ldrb	r4, [r0, #0]
 80011a4:	3301      	adds	r3, #1
 80011a6:	428c      	cmp	r4, r1
 80011a8:	d1f6      	bne.n	8001198 <memchr+0x8>
 80011aa:	bd10      	pop	{r4, pc}

080011ac <__swhatbuf_r>:
 80011ac:	b570      	push	{r4, r5, r6, lr}
 80011ae:	460c      	mov	r4, r1
 80011b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011b4:	4615      	mov	r5, r2
 80011b6:	2900      	cmp	r1, #0
 80011b8:	461e      	mov	r6, r3
 80011ba:	b096      	sub	sp, #88	; 0x58
 80011bc:	da0c      	bge.n	80011d8 <__swhatbuf_r+0x2c>
 80011be:	89a3      	ldrh	r3, [r4, #12]
 80011c0:	2100      	movs	r1, #0
 80011c2:	f013 0f80 	tst.w	r3, #128	; 0x80
 80011c6:	bf0c      	ite	eq
 80011c8:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80011cc:	2340      	movne	r3, #64	; 0x40
 80011ce:	2000      	movs	r0, #0
 80011d0:	6031      	str	r1, [r6, #0]
 80011d2:	602b      	str	r3, [r5, #0]
 80011d4:	b016      	add	sp, #88	; 0x58
 80011d6:	bd70      	pop	{r4, r5, r6, pc}
 80011d8:	466a      	mov	r2, sp
 80011da:	f000 f849 	bl	8001270 <_fstat_r>
 80011de:	2800      	cmp	r0, #0
 80011e0:	dbed      	blt.n	80011be <__swhatbuf_r+0x12>
 80011e2:	9901      	ldr	r1, [sp, #4]
 80011e4:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80011e8:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80011ec:	4259      	negs	r1, r3
 80011ee:	4159      	adcs	r1, r3
 80011f0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011f4:	e7eb      	b.n	80011ce <__swhatbuf_r+0x22>

080011f6 <__smakebuf_r>:
 80011f6:	898b      	ldrh	r3, [r1, #12]
 80011f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80011fa:	079d      	lsls	r5, r3, #30
 80011fc:	4606      	mov	r6, r0
 80011fe:	460c      	mov	r4, r1
 8001200:	d507      	bpl.n	8001212 <__smakebuf_r+0x1c>
 8001202:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001206:	6023      	str	r3, [r4, #0]
 8001208:	6123      	str	r3, [r4, #16]
 800120a:	2301      	movs	r3, #1
 800120c:	6163      	str	r3, [r4, #20]
 800120e:	b002      	add	sp, #8
 8001210:	bd70      	pop	{r4, r5, r6, pc}
 8001212:	466a      	mov	r2, sp
 8001214:	ab01      	add	r3, sp, #4
 8001216:	f7ff ffc9 	bl	80011ac <__swhatbuf_r>
 800121a:	9900      	ldr	r1, [sp, #0]
 800121c:	4605      	mov	r5, r0
 800121e:	4630      	mov	r0, r6
 8001220:	f7ff fb04 	bl	800082c <_malloc_r>
 8001224:	b948      	cbnz	r0, 800123a <__smakebuf_r+0x44>
 8001226:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800122a:	059a      	lsls	r2, r3, #22
 800122c:	d4ef      	bmi.n	800120e <__smakebuf_r+0x18>
 800122e:	f023 0303 	bic.w	r3, r3, #3
 8001232:	f043 0302 	orr.w	r3, r3, #2
 8001236:	81a3      	strh	r3, [r4, #12]
 8001238:	e7e3      	b.n	8001202 <__smakebuf_r+0xc>
 800123a:	89a3      	ldrh	r3, [r4, #12]
 800123c:	6020      	str	r0, [r4, #0]
 800123e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001242:	81a3      	strh	r3, [r4, #12]
 8001244:	9b00      	ldr	r3, [sp, #0]
 8001246:	6120      	str	r0, [r4, #16]
 8001248:	6163      	str	r3, [r4, #20]
 800124a:	9b01      	ldr	r3, [sp, #4]
 800124c:	b15b      	cbz	r3, 8001266 <__smakebuf_r+0x70>
 800124e:	4630      	mov	r0, r6
 8001250:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001254:	f000 f81e 	bl	8001294 <_isatty_r>
 8001258:	b128      	cbz	r0, 8001266 <__smakebuf_r+0x70>
 800125a:	89a3      	ldrh	r3, [r4, #12]
 800125c:	f023 0303 	bic.w	r3, r3, #3
 8001260:	f043 0301 	orr.w	r3, r3, #1
 8001264:	81a3      	strh	r3, [r4, #12]
 8001266:	89a3      	ldrh	r3, [r4, #12]
 8001268:	431d      	orrs	r5, r3
 800126a:	81a5      	strh	r5, [r4, #12]
 800126c:	e7cf      	b.n	800120e <__smakebuf_r+0x18>
	...

08001270 <_fstat_r>:
 8001270:	b538      	push	{r3, r4, r5, lr}
 8001272:	2300      	movs	r3, #0
 8001274:	4d06      	ldr	r5, [pc, #24]	; (8001290 <_fstat_r+0x20>)
 8001276:	4604      	mov	r4, r0
 8001278:	4608      	mov	r0, r1
 800127a:	4611      	mov	r1, r2
 800127c:	602b      	str	r3, [r5, #0]
 800127e:	f7ff f853 	bl	8000328 <_fstat>
 8001282:	1c43      	adds	r3, r0, #1
 8001284:	d102      	bne.n	800128c <_fstat_r+0x1c>
 8001286:	682b      	ldr	r3, [r5, #0]
 8001288:	b103      	cbz	r3, 800128c <_fstat_r+0x1c>
 800128a:	6023      	str	r3, [r4, #0]
 800128c:	bd38      	pop	{r3, r4, r5, pc}
 800128e:	bf00      	nop
 8001290:	200001b8 	.word	0x200001b8

08001294 <_isatty_r>:
 8001294:	b538      	push	{r3, r4, r5, lr}
 8001296:	2300      	movs	r3, #0
 8001298:	4d05      	ldr	r5, [pc, #20]	; (80012b0 <_isatty_r+0x1c>)
 800129a:	4604      	mov	r4, r0
 800129c:	4608      	mov	r0, r1
 800129e:	602b      	str	r3, [r5, #0]
 80012a0:	f7ff f851 	bl	8000346 <_isatty>
 80012a4:	1c43      	adds	r3, r0, #1
 80012a6:	d102      	bne.n	80012ae <_isatty_r+0x1a>
 80012a8:	682b      	ldr	r3, [r5, #0]
 80012aa:	b103      	cbz	r3, 80012ae <_isatty_r+0x1a>
 80012ac:	6023      	str	r3, [r4, #0]
 80012ae:	bd38      	pop	{r3, r4, r5, pc}
 80012b0:	200001b8 	.word	0x200001b8

080012b4 <_init>:
 80012b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012b6:	bf00      	nop
 80012b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012ba:	bc08      	pop	{r3}
 80012bc:	469e      	mov	lr, r3
 80012be:	4770      	bx	lr

080012c0 <_fini>:
 80012c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012c2:	bf00      	nop
 80012c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012c6:	bc08      	pop	{r3}
 80012c8:	469e      	mov	lr, r3
 80012ca:	4770      	bx	lr
